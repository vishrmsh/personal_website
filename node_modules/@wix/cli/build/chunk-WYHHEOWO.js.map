{"version":3,"sources":["../../cli-test-overrides/src/index.ts"],"sourcesContent":["import process from 'node:process';\nimport z from 'zod';\n\nconst testOverridesSchema = z.object({\n  biLoggerBaseUrl: z.string().url().optional(),\n  devEditorBaseUrl: z.string().url().optional(),\n  inkDebug: z.boolean().optional(),\n  minRetryTimeout: z.number().optional(),\n  pollInterval: z.number().optional(),\n  pollTimeout: z.number().optional(),\n  debounceQueueWait: z.number().optional(),\n  sentryDsn: z.string().optional(),\n  userBrowserTestEndpoint: z.string().url().optional(),\n  dataDir: z.string().optional(),\n  wixCliDependencyVersion: z.string().optional(),\n  wixCliAppDependencyVersion: z.string().optional(),\n  disableTTY: z.boolean().optional(),\n  waitForLoginInterval: z.number().optional(),\n  registryUrl: z.string().optional(),\n  fsCacheDir: z.string().optional(),\n  localTunnel: z.boolean().optional(),\n  customElementsCreationDelay: z.number().optional(),\n  sdkAuthServerBaseUrl: z.string().optional(),\n  miniflareRequestsRewrites: z\n    .array(z.object({ from: z.string(), to: z.string() }))\n    .optional(),\n});\n\nexport type CLITestOverrides = z.infer<typeof testOverridesSchema>;\n\nexport const TEST_OVERRIDES_ENV_VAR = 'WIX_CLI_TEST_OVERRIDES';\n\nexport function getTestOverrides(): CLITestOverrides {\n  const rawOverrides = process.env[TEST_OVERRIDES_ENV_VAR];\n\n  if (!rawOverrides) {\n    return {};\n  }\n\n  return testOverridesSchema.parse(JSON.parse(rawOverrides));\n}\n\nexport function isTestEnv(): boolean {\n  return !!process.env[TEST_OVERRIDES_ENV_VAR];\n}\n\nexport function setupTestEnv(): void {\n  if (isTestEnv()) {\n    // See https://github.com/wix-private/wix-cli/pull/814\n    process.stdout.columns = 300;\n    process.stderr.columns = 300;\n\n    process.stdin.isTTY = !getTestOverrides().disableTTY;\n    process.stdin.setRawMode = () => process.stdin;\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA,OAAO,aAAa;AAGpB,IAAM,sBAAsB,EAAE,OAAO;AAAA,EACnC,iBAAiB,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC3C,kBAAkB,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC5C,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,iBAAiB,EAAE,OAAO,EAAE,SAAS;AAAA,EACrC,cAAc,EAAE,OAAO,EAAE,SAAS;AAAA,EAClC,aAAa,EAAE,OAAO,EAAE,SAAS;AAAA,EACjC,mBAAmB,EAAE,OAAO,EAAE,SAAS;AAAA,EACvC,WAAW,EAAE,OAAO,EAAE,SAAS;AAAA,EAC/B,yBAAyB,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EACnD,SAAS,EAAE,OAAO,EAAE,SAAS;AAAA,EAC7B,yBAAyB,EAAE,OAAO,EAAE,SAAS;AAAA,EAC7C,4BAA4B,EAAE,OAAO,EAAE,SAAS;AAAA,EAChD,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,sBAAsB,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1C,aAAa,EAAE,OAAO,EAAE,SAAS;AAAA,EACjC,YAAY,EAAE,OAAO,EAAE,SAAS;AAAA,EAChC,aAAa,EAAE,QAAQ,EAAE,SAAS;AAAA,EAClC,6BAA6B,EAAE,OAAO,EAAE,SAAS;AAAA,EACjD,sBAAsB,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1C,2BAA2B,EACxB,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,GAAG,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,EACpD,SAAS;AACd,CAAC;AAIM,IAAM,yBAAyB;AAE/B,SAAS,mBAAqC;AACnD,QAAM,eAAe,QAAQ,IAAI,sBAAsB;AAEvD,MAAI,CAAC,cAAc;AACjB,WAAO,CAAC;AAAA,EACV;AAEA,SAAO,oBAAoB,MAAM,KAAK,MAAM,YAAY,CAAC;AAC3D;AAEO,SAAS,YAAqB;AACnC,SAAO,CAAC,CAAC,QAAQ,IAAI,sBAAsB;AAC7C;AAEO,SAAS,eAAqB;AACnC,MAAI,UAAU,GAAG;AAEf,YAAQ,OAAO,UAAU;AACzB,YAAQ,OAAO,UAAU;AAEzB,YAAQ,MAAM,QAAQ,CAAC,iBAAiB,EAAE;AAC1C,YAAQ,MAAM,aAAa,MAAM,QAAQ;AAAA,EAC3C;AACF;","names":[]}
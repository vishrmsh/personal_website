import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  loadProjectModel
} from "./chunk-WUREUJ5V.js";
import {
  reportCommandStartEvent
} from "./chunk-3WK2RM54.js";
import {
  init_esm_shims
} from "./chunk-4EFJZ3GQ.js";

// ../cli-site-old/src/commands/run-command.ts
init_esm_shims();
import { cwd } from "node:process";
async function initServices({ metaSiteId }, { biLogger, errorReporter }) {
  errorReporter.setContext("site info", {
    siteId: metaSiteId
  });
  biLogger.updateDefaults({
    _msid: metaSiteId
  });
}
async function runCommand(command, services, cliVersion, commandFn) {
  const model = await loadProjectModel(cwd());
  await initServices(model, services);
  const commandStatus = reportCommandStartEvent({
    biLogger: services.biLogger,
    command,
    cliVersion,
    flow: "Sites"
  });
  try {
    await commandFn(model);
    commandStatus.succeed();
  } catch (e) {
    commandStatus.failed(e);
    throw e;
  }
}

export {
  runCommand
};
//# sourceMappingURL=chunk-XLROQNEG.js.map
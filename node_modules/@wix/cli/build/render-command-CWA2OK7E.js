import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  reportCommandStartEvent
} from "./chunk-DBMP7T24.js";
import "./chunk-3WK2RM54.js";
import {
  BiProvider,
  ErrorReporterProvider
} from "./chunk-WWUS5636.js";
import "./chunk-SJKVYZPL.js";
import "./chunk-UQLHXG4X.js";
import "./chunk-KJ37XZQA.js";
import {
  render
} from "./chunk-RXATQXHV.js";
import {
  require_react
} from "./chunk-NRAQAV6T.js";
import "./chunk-SQ3KPTIH.js";
import "./chunk-Z4MHKCET.js";
import "./chunk-C4SUTB4O.js";
import "./chunk-SE7QGYXZ.js";
import "./chunk-TKDDSH55.js";
import "./chunk-62BYZXT7.js";
import "./chunk-WYHHEOWO.js";
import "./chunk-Z3Y5NFYG.js";
import "./chunk-ZXYGJZOO.js";
import "./chunk-IVMK6TVY.js";
import {
  __toESM,
  init_esm_shims
} from "./chunk-4EFJZ3GQ.js";

// src/commands/render-command.tsx
init_esm_shims();
var import_react = __toESM(require_react(), 1);
async function renderCommand(command, { biLogger, errorReporter }, tree) {
  await runCommand(command, { biLogger, errorReporter }, async () => {
    await render(
      /* @__PURE__ */ import_react.default.createElement(BiProvider, { value: biLogger }, /* @__PURE__ */ import_react.default.createElement(ErrorReporterProvider, { value: errorReporter }, tree))
    );
  });
}
async function runCommand(command, services, commandFn) {
  const commandStatus = reportCommandStartEvent(services.biLogger, command);
  try {
    await commandFn();
    commandStatus.succeed();
  } catch (e) {
    commandStatus.failed(e);
    throw e;
  }
}
export {
  renderCommand
};
//# sourceMappingURL=render-command-CWA2OK7E.js.map
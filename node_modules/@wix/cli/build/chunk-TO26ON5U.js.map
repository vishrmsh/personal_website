{"version":3,"sources":["../../cli-site/src/components/PreviewCommand/useCreatePreview.ts","../../../node_modules/@wix/anyide-document-deployment/dist/src/index.js","../../../node_modules/@wix/anyide-document-deployment/dist/src/apis/updateSite.js","../../../node_modules/@wix/anyide-document-deployment/dist/src/apis/urls.js","../../../node_modules/@wix/anyide-document-deployment/dist/src/utils/filterDocumentPagesByHashes.js","../../../node_modules/@wix/anyide-document-deployment/dist/src/utils/hashWml.js","../../../node_modules/@wix/anyide-document-deployment/dist/src/status.js","../../../node_modules/@wix/anyide-document-deployment/dist/src/apis/getTaskStatus.js","../../../node_modules/@wix/anyide-document-deployment/dist/src/apis/getBase.js","../../cli-site/src/components/PreviewCommand/useDeploySitePreview.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\nimport {\n  DeploymentStatus,\n  useDocumentManagementClient,\n} from '@wix/document-management-client';\nimport { useHttpClient } from '@wix/cli-http-client-react';\nimport { getTestOverrides } from '@wix/cli-test-overrides';\nimport { deployDocument } from '@wix/anyide-document-deployment';\nimport { useProjectModel } from '../../model.js';\nimport { createSiteFsManager } from '../../site-fs-manager.js';\nimport { useDeploySitePreview } from './useDeploySitePreview.js';\n\nconst { pollInterval } = getTestOverrides();\n\nfunction toSiteUrl(deploymentUrl: string) {\n  const url = new URL(deploymentUrl);\n  url.search = '';\n  return url.toString();\n}\n\nexport function useCreatePreview() {\n  const dmClient = useDocumentManagementClient();\n  const { model } = useProjectModel();\n  const httpClient = useHttpClient({ type: 'editor' });\n  const deploySitePreview = useDeploySitePreview();\n\n  return useCallback(async () => {\n    const siteFsManager = await createSiteFsManager(model.projectFolder);\n\n    const [code, document] = await Promise.all([\n      siteFsManager.getCode(),\n      siteFsManager.getDocument(),\n    ]);\n\n    const { branchId, revision } = await deployDocument(document, {\n      httpClient,\n      pollInterval,\n    }).catch((error: unknown) => {\n      throw new CliError({\n        code: CliErrorCode.FailedToDeployDocument(),\n        cause: error,\n      });\n    });\n\n    const preview = await deploySitePreview({ branchId, revision, code });\n\n    return {\n      deploymentId: preview.deploymentId,\n      previewUrl: preview.deploymentShortUrl ?? preview.deploymentUrl,\n      siteUrl: toSiteUrl(preview.deploymentUrl),\n      deploymentStatus: preview.isPublishPipelineDeployment\n        ? await dmClient.getDeploymentDetails(preview.deploymentId)\n        : DeploymentStatus.Success(),\n    };\n  }, [model.projectFolder, httpClient, deploySitePreview, dmClient]);\n}\n","import { updateSite } from './apis/updateSite.js';\nimport { filterDocumentPagesByHashes } from './utils/filterDocumentPagesByHashes.js';\nimport { subscribeToUpdateSiteTaskStatus } from './status.js';\nimport { getBase } from './apis/getBase.js';\nexport const deployDocument = async (document, options) => {\n    const { branchId, revision, hashes } = await getBase(options.httpClient);\n    const { httpClient, onStatusChange, pollInterval, timeout } = options;\n    const documentUpdate = filterDocumentPagesByHashes(hashes, document);\n    if (Object.keys(documentUpdate.pages).length === 0) {\n        return {\n            branchId,\n            revision\n        };\n    }\n    const updateSiteTaskId = await updateSite(httpClient, documentUpdate, branchId, revision);\n    return subscribeToUpdateSiteTaskStatus(httpClient, updateSiteTaskId, { onStatusChange, pollInterval, timeout });\n};\n","import { promisify } from 'node:util';\nimport { brotliCompress } from 'node:zlib';\nimport { updateSiteUrl } from './urls.js';\nconst brotliCompressAsync = promisify(brotliCompress);\nconst sendUpdateSiteRequest = async (httpClient, request) => {\n    const { data } = await httpClient.post(updateSiteUrl(), request);\n    return data;\n};\nexport const updateSite = async (httpClient, documentUpdate, branchId, revision) => {\n    const stringifiedDocumentUpdate = JSON.stringify(documentUpdate);\n    const compressedWmlSite = (await brotliCompressAsync(stringifiedDocumentUpdate)).toString('base64');\n    const { updateSiteTaskId } = await sendUpdateSiteRequest(httpClient, {\n        compressedWmlSite,\n        branchId,\n        revision\n    });\n    return updateSiteTaskId;\n};\n","const serverlessUrl = () => 'https://editor.wix.com/_serverless/dm-anyide-site-deployment';\nexport const getBaseUrl = () => `${serverlessUrl()}/getBase`;\nexport const updateSiteUrl = () => `${serverlessUrl()}/updateSite`;\nexport const getUpdateSiteStatusUrl = (updateSiteTaskId) => `${serverlessUrl()}/getUpdateSiteStatus/${updateSiteTaskId}`;\n","import { hashWml } from './hashWml.js';\nexport const filterDocumentPagesByHashes = (hashes, document) => {\n    const filteredDocument = { pages: {} };\n    for (const pageId in document.pages) {\n        if (hashes[pageId] === undefined) {\n            filteredDocument.pages[pageId] = document.pages[pageId];\n        }\n    }\n    for (const pageId in hashes) {\n        const documentPage = document.pages[pageId];\n        if (documentPage) {\n            const pageHash = hashWml(documentPage.data);\n            if (pageHash !== hashes[pageId]) {\n                filteredDocument.pages[pageId] = documentPage;\n            }\n        }\n        else {\n            filteredDocument.pages[pageId] = null;\n        }\n    }\n    return filteredDocument;\n};\n","import crypto from 'node:crypto';\nconst md5 = (str) => crypto.createHash('md5').update(str).digest('hex');\nconst stringifyWmlFile = ({ content }) => content;\nexport const hashWml = ({ structure, style, data, version }) => {\n    const wmlString = version + stringifyWmlFile(structure) + stringifyWmlFile(data) + stringifyWmlFile(style);\n    return md5(wmlString);\n};\n","import { getTaskStatus } from './apis/getTaskStatus.js';\nexport const subscribeToUpdateSiteTaskStatus = (httpClient, updateSiteTaskId, options = {}) => {\n    const { onStatusChange, pollInterval = 1000, timeout = 1000 * 60 * 5 } = options;\n    return new Promise((resolve, reject) => {\n        const cleanup = () => {\n            clearInterval(intervalId);\n            clearTimeout(timeoutId);\n        };\n        const timeoutId = setTimeout(() => {\n            cleanup();\n            reject(new Error('deployDocument timeout exceeded'));\n        }, timeout);\n        const intervalId = setInterval(async () => {\n            try {\n                const taskStatus = await getTaskStatus(httpClient, updateSiteTaskId);\n                onStatusChange?.(taskStatus);\n                if (taskStatus.state === 'FAILED') {\n                    cleanup();\n                    reject(new Error(`Action ${taskStatus.action} failed with error: ${taskStatus.extras?.error}`));\n                }\n                if (taskStatus.action === 'CREATE_REVISION' && taskStatus.state === 'DONE') {\n                    cleanup();\n                    resolve(taskStatus.extras);\n                }\n            }\n            catch (error) {\n                cleanup();\n                reject(error);\n            }\n        }, pollInterval);\n    });\n};\n","import { getUpdateSiteStatusUrl } from './urls.js';\nexport const getTaskStatus = async (httpClient, taskId) => {\n    const { data } = await httpClient.get(getUpdateSiteStatusUrl(taskId));\n    return data;\n};\n","import { getBaseUrl } from './urls.js';\nexport const getBase = async (httpClient) => {\n    const { data } = await httpClient.get(getBaseUrl());\n    return data;\n};\n","import { useCallback } from 'react';\nimport { useVeloClient, GridAppLayout } from '@wix/velo-client';\nimport type { VeloCode } from '@wix/anyide-cli-file-structure';\nimport { useProjectModel } from '../../model.js';\nimport { loadProjectRootFiles } from '../../velo.js';\n\ninterface Options {\n  branchId: string;\n  revision: number;\n  code: VeloCode;\n}\n\nexport function useDeploySitePreview() {\n  const { model } = useProjectModel();\n  const { deploySitePreview } = useVeloClient();\n\n  return useCallback(\n    async ({ branchId, revision, code }: Options) => {\n      const rootFiles = await loadProjectRootFiles(model.projectFolder);\n\n      return deploySitePreview({\n        deploymentData: {\n          branchId,\n          revision: String(revision),\n          content: {\n            ...code,\n            files: code.files.concat(rootFiles),\n            layout: GridAppLayout[code.layout],\n          },\n        },\n      });\n    },\n    [deploySitePreview, model.projectFolder]\n  );\n}\n"],"mappings":"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","names":["import_react","pollInterval","pollInterval"]}
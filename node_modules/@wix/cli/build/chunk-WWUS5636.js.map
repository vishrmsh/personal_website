{"version":3,"sources":["../../../node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts","../../../node_modules/@opentelemetry/core/src/baggage/constants.ts","../../../node_modules/@opentelemetry/core/src/baggage/utils.ts","../../../node_modules/@opentelemetry/core/src/baggage/propagation/W3CBaggagePropagator.ts","../../../node_modules/@opentelemetry/core/src/common/anchored-clock.ts","../../../node_modules/@opentelemetry/core/src/common/attributes.ts","../../../node_modules/@opentelemetry/core/src/common/logging-error-handler.ts","../../../node_modules/@opentelemetry/core/src/common/global-error-handler.ts","../../../node_modules/@opentelemetry/core/src/utils/sampling.ts","../../../node_modules/@opentelemetry/core/src/utils/environment.ts","../../../node_modules/@opentelemetry/core/src/platform/node/environment.ts","../../../node_modules/@opentelemetry/core/src/platform/node/globalThis.ts","../../../node_modules/@opentelemetry/core/src/common/hex-to-binary.ts","../../../node_modules/@opentelemetry/core/src/platform/node/hex-to-base64.ts","../../../node_modules/@opentelemetry/core/src/platform/node/RandomIdGenerator.ts","../../../node_modules/@opentelemetry/core/src/platform/node/performance.ts","../../../node_modules/@opentelemetry/core/src/version.ts","../../../node_modules/@opentelemetry/core/src/platform/node/sdk-info.ts","../../../node_modules/@opentelemetry/core/src/platform/node/timer-util.ts","../../../node_modules/@opentelemetry/core/src/platform/node/index.ts","../../../node_modules/@opentelemetry/core/src/platform/index.ts","../../../node_modules/@opentelemetry/core/src/common/time.ts","../../../node_modules/@opentelemetry/core/src/common/types.ts","../../../node_modules/@opentelemetry/core/src/ExportResult.ts","../../../node_modules/@opentelemetry/core/src/propagation/composite.ts","../../../node_modules/@opentelemetry/core/src/internal/validators.ts","../../../node_modules/@opentelemetry/core/src/trace/TraceState.ts","../../../node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts","../../../node_modules/@opentelemetry/core/src/trace/IdGenerator.ts","../../../node_modules/@opentelemetry/core/src/trace/rpc-metadata.ts","../../../node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOffSampler.ts","../../../node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOnSampler.ts","../../../node_modules/@opentelemetry/core/src/trace/sampler/ParentBasedSampler.ts","../../../node_modules/@opentelemetry/core/src/trace/sampler/TraceIdRatioBasedSampler.ts","../../../node_modules/@opentelemetry/core/src/utils/lodash.merge.ts","../../../node_modules/@opentelemetry/core/src/utils/merge.ts","../../../node_modules/@opentelemetry/core/src/utils/timeout.ts","../../../node_modules/@opentelemetry/core/src/utils/url.ts","../../../node_modules/@opentelemetry/core/src/utils/wrap.ts","../../../node_modules/@opentelemetry/core/src/utils/promise.ts","../../../node_modules/@opentelemetry/core/src/utils/callback.ts","../../../node_modules/@opentelemetry/core/src/internal/exporter.ts","../../../node_modules/@opentelemetry/core/src/index.ts","../../../node_modules/semver/internal/constants.js","../../../node_modules/semver/internal/debug.js","../../../node_modules/semver/internal/re.js","../../../node_modules/semver/internal/parse-options.js","../../../node_modules/semver/internal/identifiers.js","../../../node_modules/semver/classes/semver.js","../../../node_modules/semver/functions/parse.js","../../../node_modules/semver/functions/valid.js","../../../node_modules/semver/functions/clean.js","../../../node_modules/semver/functions/inc.js","../../../node_modules/semver/functions/diff.js","../../../node_modules/semver/functions/major.js","../../../node_modules/semver/functions/minor.js","../../../node_modules/semver/functions/patch.js","../../../node_modules/semver/functions/prerelease.js","../../../node_modules/semver/functions/compare.js","../../../node_modules/semver/functions/rcompare.js","../../../node_modules/semver/functions/compare-loose.js","../../../node_modules/semver/functions/compare-build.js","../../../node_modules/semver/functions/sort.js","../../../node_modules/semver/functions/rsort.js","../../../node_modules/semver/functions/gt.js","../../../node_modules/semver/functions/lt.js","../../../node_modules/semver/functions/eq.js","../../../node_modules/semver/functions/neq.js","../../../node_modules/semver/functions/gte.js","../../../node_modules/semver/functions/lte.js","../../../node_modules/semver/functions/cmp.js","../../../node_modules/semver/functions/coerce.js","../../../node_modules/semver/internal/lrucache.js","../../../node_modules/semver/classes/range.js","../../../node_modules/semver/classes/comparator.js","../../../node_modules/semver/functions/satisfies.js","../../../node_modules/semver/ranges/to-comparators.js","../../../node_modules/semver/ranges/max-satisfying.js","../../../node_modules/semver/ranges/min-satisfying.js","../../../node_modules/semver/ranges/min-version.js","../../../node_modules/semver/ranges/valid.js","../../../node_modules/semver/ranges/outside.js","../../../node_modules/semver/ranges/gtr.js","../../../node_modules/semver/ranges/ltr.js","../../../node_modules/semver/ranges/intersects.js","../../../node_modules/semver/ranges/simplify.js","../../../node_modules/semver/ranges/subset.js","../../../node_modules/semver/index.js","../../../node_modules/@opentelemetry/instrumentation-http/src/enums/AttributeNames.ts","../../../node_modules/@opentelemetry/instrumentation-http/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-http/src/version.ts","../../../node_modules/@opentelemetry/api-logs/src/types/Logger.ts","../../../node_modules/@opentelemetry/api-logs/src/types/LoggerProvider.ts","../../../node_modules/@opentelemetry/api-logs/src/types/LogRecord.ts","../../../node_modules/@opentelemetry/api-logs/build/esm/types/LoggerOptions.js","../../../node_modules/@opentelemetry/api-logs/src/types/AnyValue.ts","../../../node_modules/@opentelemetry/api-logs/src/NoopLogger.ts","../../../node_modules/@opentelemetry/api-logs/src/NoopLoggerProvider.ts","../../../node_modules/@opentelemetry/api-logs/src/platform/node/globalThis.ts","../../../node_modules/@opentelemetry/api-logs/src/platform/node/index.ts","../../../node_modules/@opentelemetry/api-logs/src/platform/index.ts","../../../node_modules/@opentelemetry/api-logs/src/internal/global-utils.ts","../../../node_modules/@opentelemetry/api-logs/src/api/logs.ts","../../../node_modules/@opentelemetry/api-logs/src/index.ts","../../../node_modules/@opentelemetry/instrumentation/src/autoLoaderUtils.ts","../../../node_modules/@opentelemetry/instrumentation/src/autoLoader.ts","../../../node_modules/shimmer/index.js","../../../node_modules/@opentelemetry/instrumentation/src/instrumentation.ts","../../../node_modules/resolve/lib/homedir.js","../../../node_modules/resolve/lib/caller.js","../../../node_modules/path-parse/index.js","../../../node_modules/resolve/lib/node-modules-paths.js","../../../node_modules/resolve/lib/normalize-options.js","../../../node_modules/function-bind/implementation.js","../../../node_modules/function-bind/index.js","../../../node_modules/hasown/index.js","../../../node_modules/is-core-module/core.json","../../../node_modules/is-core-module/index.js","../../../node_modules/resolve/lib/async.js","../../../node_modules/resolve/lib/core.json","../../../node_modules/resolve/lib/core.js","../../../node_modules/resolve/lib/is-core.js","../../../node_modules/resolve/lib/sync.js","../../../node_modules/resolve/index.js","../../../node_modules/module-details-from-path/index.js","../../../node_modules/require-in-the-middle/package.json","../../../node_modules/require-in-the-middle/index.js","../../../node_modules/@opentelemetry/instrumentation/src/platform/node/ModuleNameTrie.ts","../../../node_modules/@opentelemetry/instrumentation/src/platform/node/RequireInTheMiddleSingleton.ts","../../../node_modules/import-in-the-middle/lib/register.js","../../../node_modules/import-in-the-middle/index.js","../../../node_modules/@opentelemetry/instrumentation/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation/src/platform/node/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation/src/platform/node/normalize.ts","../../../node_modules/@opentelemetry/instrumentation/src/platform/node/index.ts","../../../node_modules/@opentelemetry/instrumentation/src/platform/index.ts","../../../node_modules/@opentelemetry/instrumentation/src/instrumentationNodeModuleDefinition.ts","../../../node_modules/@opentelemetry/instrumentation/src/instrumentationNodeModuleFile.ts","../../../node_modules/@opentelemetry/instrumentation/src/types.ts","../../../node_modules/@opentelemetry/instrumentation/src/types_internal.ts","../../../node_modules/@opentelemetry/instrumentation/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-http/src/http.ts","../../../node_modules/@opentelemetry/instrumentation-http/build/src/types.js","../../../node_modules/@opentelemetry/instrumentation-http/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-express/src/enums/ExpressLayerType.ts","../../../node_modules/@opentelemetry/instrumentation-express/src/enums/AttributeNames.ts","../../../node_modules/@opentelemetry/instrumentation-express/src/internal-types.ts","../../../node_modules/@opentelemetry/instrumentation-express/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-express/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-express/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-express/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-fastify/src/enums/AttributeNames.ts","../../../node_modules/@opentelemetry/instrumentation-fastify/src/constants.ts","../../../node_modules/@opentelemetry/instrumentation-fastify/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-fastify/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-fastify/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-fastify/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-graphql/src/enum.ts","../../../node_modules/@opentelemetry/instrumentation-graphql/src/enums/AttributeNames.ts","../../../node_modules/@opentelemetry/instrumentation-graphql/src/symbols.ts","../../../node_modules/@opentelemetry/instrumentation-graphql/src/internal-types.ts","../../../node_modules/@opentelemetry/instrumentation-graphql/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-graphql/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-graphql/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-graphql/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-mongodb/src/internal-types.ts","../../../node_modules/@opentelemetry/instrumentation-mongodb/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-mongodb/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-mongodb/src/types.ts","../../../node_modules/@opentelemetry/instrumentation-mongodb/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-mongoose/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-mongoose/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-mongoose/src/mongoose.ts","../../../node_modules/@opentelemetry/instrumentation-mongoose/build/src/types.js","../../../node_modules/@opentelemetry/instrumentation-mongoose/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-mysql/src/AttributeNames.ts","../../../node_modules/@opentelemetry/instrumentation-mysql/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-mysql/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-mysql/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-mysql/src/index.ts","../../../node_modules/@opentelemetry/sql-common/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-mysql2/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-mysql2/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-mysql2/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-mysql2/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-ioredis/src/utils.ts","../../../node_modules/@opentelemetry/redis-common/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-ioredis/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-ioredis/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-ioredis/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-redis-4/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-redis-4/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-redis-4/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-redis-4/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-nestjs-core/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-nestjs-core/src/enums/AttributeNames.ts","../../../node_modules/@opentelemetry/instrumentation-nestjs-core/src/enums/NestType.ts","../../../node_modules/@opentelemetry/instrumentation-nestjs-core/src/enums/index.ts","../../../node_modules/@opentelemetry/instrumentation-nestjs-core/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-nestjs-core/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-pg/src/enums/AttributeNames.ts","../../../node_modules/@opentelemetry/instrumentation-pg/src/enums/SpanNames.ts","../../../node_modules/@opentelemetry/instrumentation-pg/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-pg/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-pg/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-pg/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-hapi/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-hapi/src/internal-types.ts","../../../node_modules/@opentelemetry/instrumentation-hapi/src/enums/AttributeNames.ts","../../../node_modules/@opentelemetry/instrumentation-hapi/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-hapi/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-hapi/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-koa/src/types.ts","../../../node_modules/@opentelemetry/instrumentation-koa/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-koa/src/enums/AttributeNames.ts","../../../node_modules/@opentelemetry/instrumentation-koa/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-koa/src/internal-types.ts","../../../node_modules/@opentelemetry/instrumentation-koa/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-koa/src/index.ts","../../../node_modules/@opentelemetry/instrumentation-connect/src/enums/AttributeNames.ts","../../../node_modules/@opentelemetry/instrumentation-connect/src/version.ts","../../../node_modules/@opentelemetry/instrumentation-connect/src/internal-types.ts","../../../node_modules/@opentelemetry/instrumentation-connect/src/utils.ts","../../../node_modules/@opentelemetry/instrumentation-connect/src/instrumentation.ts","../../../node_modules/@opentelemetry/instrumentation-connect/src/index.ts","../../cli-telemetry-react/src/useBi.tsx","../../cli-telemetry-react/src/index.ts","../../cli-debug-log/src/index.tsx","../../cli-http-client/src/extract-error.ts","../../cli-http-client/src/error-info.ts","../../cli-error-reporting/src/components/OutdatedVersionMessage.tsx","../../cli-error-reporting/src/messages.json","../../cli-error-reporting/src/components/ErrorViewer.ts","../../cli-error-reporting/src/get-error-component.tsx","../../../node_modules/outdent/src/index.ts","../../cli-error-reporting/src/components/ErrorMessage.tsx","../../cli-error-reporting/src/components/ServeDeprecationMessage.tsx","../../cli-error-reporting/src/create-error-handler.tsx","../../cli-error-reporting/src/error-reporter.ts","../../../node_modules/@sentry/node/build/esm/index.js","../../../node_modules/@sentry/opentelemetry/src/utils/spanTypes.ts","../../../node_modules/@sentry/opentelemetry/src/utils/getRequestSpanData.ts","../../../node_modules/@sentry/opentelemetry/src/custom/client.ts","../../../node_modules/@sentry/opentelemetry/src/utils/getSpanKind.ts","../../../node_modules/@sentry/opentelemetry/src/constants.ts","../../../node_modules/@sentry/opentelemetry/src/utils/contextData.ts","../../../node_modules/@sentry/opentelemetry/src/utils/isSentryRequest.ts","../../../node_modules/@sentry/opentelemetry/src/utils/parseSpanDescription.ts","../../../node_modules/@sentry/opentelemetry/src/utils/enhanceDscWithOpenTelemetryRootSpanName.ts","../../../node_modules/@sentry/opentelemetry/src/utils/makeTraceState.ts","../../../node_modules/@sentry/opentelemetry/src/utils/generateSpanContextForPropagationContext.ts","../../../node_modules/@sentry/opentelemetry/src/utils/getActiveSpan.ts","../../../node_modules/@sentry/opentelemetry/src/debug-build.ts","../../../node_modules/@sentry/opentelemetry/src/utils/getSamplingDecision.ts","../../../node_modules/@sentry/opentelemetry/src/utils/setupCheck.ts","../../../node_modules/@sentry/opentelemetry/src/propagator.ts","../../../node_modules/@sentry/opentelemetry/src/trace.ts","../../../node_modules/@sentry/opentelemetry/src/utils/suppressTracing.ts","../../../node_modules/@sentry/opentelemetry/src/setupEventContextTrace.ts","../../../node_modules/@sentry/opentelemetry/src/asyncContextStrategy.ts","../../../node_modules/@sentry/opentelemetry/src/contextManager.ts","../../../node_modules/@sentry/opentelemetry/src/semanticAttributes.ts","../../../node_modules/@sentry/opentelemetry/src/utils/groupSpansWithParents.ts","../../../node_modules/@sentry/opentelemetry/src/utils/mapStatus.ts","../../../node_modules/@sentry/opentelemetry/src/spanExporter.ts","../../../node_modules/@sentry/opentelemetry/src/spanProcessor.ts","../../../node_modules/@sentry/opentelemetry/src/sampler.ts","../../../node_modules/@sentry/opentelemetry/src/instrumentation.ts","../../../node_modules/@sentry/node/src/sdk/scope.ts","../../../node_modules/@sentry/node/src/utils/addOriginToSpan.ts","../../../node_modules/@sentry/node/src/utils/getRequestUrl.ts","../../../node_modules/@sentry/node/src/integrations/http.ts","../../../node_modules/@sentry/node/src/debug-build.ts","../../../node_modules/@sentry/node/src/nodeVersion.ts","../../../node_modules/@sentry/node/src/integrations/node-fetch.ts","../../../node_modules/@sentry/node/src/integrations/console.ts","../../../node_modules/@sentry/node/src/integrations/context.ts","../../../node_modules/@sentry/node/src/integrations/contextlines.ts","../../../node_modules/@sentry/node/src/integrations/local-variables/common.ts","../../../node_modules/@sentry/node/src/integrations/local-variables/local-variables-async.ts","../../../node_modules/@sentry/node/src/integrations/local-variables/local-variables-sync.ts","../../../node_modules/@sentry/node/src/integrations/local-variables/index.ts","../../../node_modules/@sentry/node/src/integrations/modules.ts","../../../node_modules/@sentry/node/src/utils/errorhandling.ts","../../../node_modules/@sentry/node/src/integrations/onuncaughtexception.ts","../../../node_modules/@sentry/node/src/integrations/onunhandledrejection.ts","../../../node_modules/@sentry/node/src/otel/instrument.ts","../../../node_modules/@sentry/node/src/utils/commonjs.ts","../../../node_modules/@sentry/node/src/integrations/tracing/express.ts","../../../node_modules/@sentry/node/src/integrations/tracing/fastify.ts","../../../node_modules/@sentry/node/src/integrations/tracing/graphql.ts","../../../node_modules/@sentry/node/src/integrations/tracing/mongo.ts","../../../node_modules/@sentry/node/src/integrations/tracing/mongoose.ts","../../../node_modules/@sentry/node/src/integrations/tracing/mysql.ts","../../../node_modules/@sentry/node/src/integrations/tracing/mysql2.ts","../../../node_modules/@sentry/node/src/utils/redisCache.ts","../../../node_modules/@sentry/node/src/integrations/tracing/redis.ts","../../../node_modules/@sentry/node/src/integrations/tracing/nest.ts","../../../node_modules/@sentry/node/src/integrations/tracing/postgres.ts","../../../node_modules/@sentry/node/src/integrations/tracing/hapi/index.ts","../../../node_modules/@sentry/node/src/integrations/tracing/koa.ts","../../../node_modules/@sentry/node/src/integrations/tracing/connect.ts","../../../node_modules/@sentry/node/src/integrations/tracing/index.ts","../../../node_modules/@sentry/node/src/proxy/base.ts","../../../node_modules/@sentry/node/src/proxy/parse-proxy-response.ts","../../../node_modules/@sentry/node/src/proxy/index.ts","../../../node_modules/@sentry/node/src/transports/http.ts","../../../node_modules/@sentry/node/src/utils/module.ts","../../../node_modules/@sentry/node/src/sdk/api.ts","../../../node_modules/@sentry/node/src/sdk/client.ts","../../../node_modules/@sentry/node/src/sdk/index.ts","../../cli-error-reporting/src/user-feedback.tsx","../../cli-fs-cache/src/index.ts","../../cli-error-reporting/src/components/UserFeedback/Form.tsx","../../cli-error-reporting/src/components/UserFeedback/ContactUs.tsx","../../cli-error-reporting/src/components/UserFeedback/Fallback.tsx","../../cli-error-reporting/src/error-reporter-context.tsx","../../cli-error-reporting/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Baggage,\n  BaggageEntryMetadata,\n  baggageEntryMetadataFromString,\n} from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = {\n  key: string;\n  value: string;\n  metadata: BaggageEntryMetadata | undefined;\n};\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${\n      hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(\n  entry: string\n): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (separatorIndex <= 0) return;\n  const key = decodeURIComponent(\n    keyPairPart.substring(0, separatorIndex).trim()\n  );\n  const value = decodeURIComponent(\n    keyPairPart.substring(separatorIndex + 1).trim()\n  );\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(\n  value?: string\n): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaggageEntry,\n  Context,\n  propagation,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport {\n  BAGGAGE_HEADER,\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_MAX_NAME_VALUE_PAIRS,\n  BAGGAGE_MAX_PER_NAME_VALUE_PAIRS,\n} from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const baggage = propagation.getBaggage(context);\n    if (!baggage || isTracingSuppressed(context)) return;\n    const keyPairs = getKeyPairs(baggage)\n      .filter((pair: string) => {\n        return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n      })\n      .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n    const headerValue = serializeKeyPairs(keyPairs);\n    if (headerValue.length > 0) {\n      setter.set(carrier, BAGGAGE_HEADER, headerValue);\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n    const baggageString = Array.isArray(headerValue)\n      ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n      : headerValue;\n    if (!baggageString) return context;\n    const baggage: Record<string, BaggageEntry> = {};\n    if (baggageString.length === 0) {\n      return context;\n    }\n    const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n    pairs.forEach(entry => {\n      const keyPair = parsePairKeyValue(entry);\n      if (keyPair) {\n        const baggageEntry: BaggageEntry = { value: keyPair.value };\n        if (keyPair.metadata) {\n          baggageEntry.metadata = keyPair.metadata;\n        }\n        baggage[keyPair.key] = baggageEntry;\n      }\n    });\n    if (Object.entries(baggage).length === 0) {\n      return context;\n    }\n    return propagation.setBaggage(context, propagation.createBaggage(baggage));\n  }\n\n  fields(): string[] {\n    return [BAGGAGE_HEADER];\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Clock {\n  /**\n   * Return the current time in milliseconds from some epoch such as the Unix epoch or process start\n   */\n  now(): number;\n}\n\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nexport class AnchoredClock implements Clock {\n  private _monotonicClock: Clock;\n  private _epochMillis: number;\n  private _performanceMillis: number;\n\n  /**\n   * Create a new AnchoredClock anchored to the current time returned by systemClock.\n   *\n   * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n   * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n   */\n  public constructor(systemClock: Clock, monotonicClock: Clock) {\n    this._monotonicClock = monotonicClock;\n    this._epochMillis = systemClock.now();\n    this._performanceMillis = monotonicClock.now();\n  }\n\n  /**\n   * Returns the current time by adding the number of milliseconds since the\n   * AnchoredClock was created to the creation epoch time\n   */\n  public now(): number {\n    const delta = this._monotonicClock.now() - this._performanceMillis;\n    return this._epochMillis + delta;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TracesSamplerValues {\n  AlwaysOff = 'always_off',\n  AlwaysOn = 'always_on',\n  ParentBasedAlwaysOff = 'parentbased_always_off',\n  ParentBasedAlwaysOn = 'parentbased_always_on',\n  ParentBasedTraceIdRatio = 'parentbased_traceidratio',\n  TraceIdRatio = 'traceidratio',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\n\nconst DEFAULT_LIST_SEPARATOR = ',';\n\n/**\n * Environment interface to define all names\n */\n\nconst ENVIRONMENT_BOOLEAN_KEYS = ['OTEL_SDK_DISABLED'] as const;\n\ntype ENVIRONMENT_BOOLEANS = {\n  [K in (typeof ENVIRONMENT_BOOLEAN_KEYS)[number]]?: boolean;\n};\n\nfunction isEnvVarABoolean(key: unknown): key is keyof ENVIRONMENT_BOOLEANS {\n  return (\n    ENVIRONMENT_BOOLEAN_KEYS.indexOf(key as keyof ENVIRONMENT_BOOLEANS) > -1\n  );\n}\n\nconst ENVIRONMENT_NUMBERS_KEYS = [\n  'OTEL_BSP_EXPORT_TIMEOUT',\n  'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BSP_MAX_QUEUE_SIZE',\n  'OTEL_BSP_SCHEDULE_DELAY',\n  'OTEL_BLRP_EXPORT_TIMEOUT',\n  'OTEL_BLRP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BLRP_MAX_QUEUE_SIZE',\n  'OTEL_BLRP_SCHEDULE_DELAY',\n  'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_LINK_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT',\n  'OTEL_EXPORTER_OTLP_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_LOGS_TIMEOUT',\n  'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n] as const;\n\ntype ENVIRONMENT_NUMBERS = {\n  [K in (typeof ENVIRONMENT_NUMBERS_KEYS)[number]]?: number;\n};\n\nfunction isEnvVarANumber(key: unknown): key is keyof ENVIRONMENT_NUMBERS {\n  return (\n    ENVIRONMENT_NUMBERS_KEYS.indexOf(key as keyof ENVIRONMENT_NUMBERS) > -1\n  );\n}\n\nconst ENVIRONMENT_LISTS_KEYS = [\n  'OTEL_NO_PATCH_MODULES',\n  'OTEL_PROPAGATORS',\n] as const;\n\ntype ENVIRONMENT_LISTS = {\n  [K in (typeof ENVIRONMENT_LISTS_KEYS)[number]]?: string[];\n};\n\nfunction isEnvVarAList(key: unknown): key is keyof ENVIRONMENT_LISTS {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key as keyof ENVIRONMENT_LISTS) > -1;\n}\n\nexport type ENVIRONMENT = {\n  CONTAINER_NAME?: string;\n  ECS_CONTAINER_METADATA_URI_V4?: string;\n  ECS_CONTAINER_METADATA_URI?: string;\n  HOSTNAME?: string;\n  KUBERNETES_SERVICE_HOST?: string;\n  NAMESPACE?: string;\n  OTEL_EXPORTER_JAEGER_AGENT_HOST?: string;\n  OTEL_EXPORTER_JAEGER_ENDPOINT?: string;\n  OTEL_EXPORTER_JAEGER_PASSWORD?: string;\n  OTEL_EXPORTER_JAEGER_USER?: string;\n  OTEL_EXPORTER_OTLP_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS?: string;\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT?: string;\n  OTEL_LOG_LEVEL?: DiagLogLevel;\n  OTEL_RESOURCE_ATTRIBUTES?: string;\n  OTEL_SERVICE_NAME?: string;\n  OTEL_TRACES_EXPORTER?: string;\n  OTEL_TRACES_SAMPLER_ARG?: string;\n  OTEL_TRACES_SAMPLER?: string;\n  OTEL_LOGS_EXPORTER?: string;\n  OTEL_EXPORTER_OTLP_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE?: string;\n} & ENVIRONMENT_BOOLEANS &\n  ENVIRONMENT_NUMBERS &\n  ENVIRONMENT_LISTS;\n\nexport type RAW_ENVIRONMENT = {\n  [key: string]: string | number | undefined | string[];\n};\n\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT = 128;\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT = 128;\n\n/**\n * Default environment variables\n */\nexport const DEFAULT_ENVIRONMENT: Required<ENVIRONMENT> = {\n  OTEL_SDK_DISABLED: false,\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_BLRP_EXPORT_TIMEOUT: 30000,\n  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BLRP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 10000,\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT:\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  OTEL_TRACES_EXPORTER: '',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: '',\n  OTEL_LOGS_EXPORTER: '',\n  OTEL_EXPORTER_OTLP_INSECURE: '',\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative',\n};\n\n/**\n * @param key\n * @param environment\n * @param values\n */\nfunction parseBoolean(\n  key: keyof ENVIRONMENT_BOOLEANS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  if (typeof values[key] === 'undefined') {\n    return;\n  }\n\n  const value = String(values[key]);\n  // support case-insensitive \"true\"\n  environment[key] = value.toLowerCase() === 'true';\n}\n\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(\n  name: keyof ENVIRONMENT_NUMBERS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT,\n  min = -Infinity,\n  max = Infinity\n) {\n  if (typeof values[name] !== 'undefined') {\n    const value = Number(values[name] as string);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(\n  name: keyof ENVIRONMENT_LISTS,\n  output: ENVIRONMENT,\n  input: RAW_ENVIRONMENT,\n  separator = DEFAULT_LIST_SEPARATOR\n) {\n  const givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(v => v.trim());\n  }\n}\n\n// The support string -> DiagLogLevel mappings\nconst logLevelMap: { [key: string]: DiagLogLevel } = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(\n  key: keyof ENVIRONMENT,\n  environment: RAW_ENVIRONMENT | ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  const value = values[key];\n  if (typeof value === 'string') {\n    const theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values: RAW_ENVIRONMENT): ENVIRONMENT {\n  const environment: ENVIRONMENT = {};\n\n  for (const env in DEFAULT_ENVIRONMENT) {\n    const key = env as keyof ENVIRONMENT;\n\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n\n      default:\n        if (isEnvVarABoolean(key)) {\n          parseBoolean(key, environment, values);\n        } else if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          const value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n\n  return environment;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ENVIRONMENT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from '../../utils/environment';\n\n/**\n * Gets the environment variables\n */\nexport function getEnv(): Required<ENVIRONMENT> {\n  const processEnv = parseEnvironment(process.env as RAW_ENVIRONMENT);\n  return Object.assign({}, DEFAULT_ENVIRONMENT, processEnv);\n}\n\nexport function getEnvWithoutDefaults(): ENVIRONMENT {\n  return parseEnvironment(process.env as RAW_ENVIRONMENT);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins\nexport const _globalThis = typeof globalThis === 'object' ? globalThis : global;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction intValue(charCode: number): number {\n  // 0-9\n  if (charCode >= 48 && charCode <= 57) {\n    return charCode - 48;\n  }\n\n  // a-f\n  if (charCode >= 97 && charCode <= 102) {\n    return charCode - 87;\n  }\n\n  // A-F\n  return charCode - 55;\n}\n\nexport function hexToBinary(hexStr: string): Uint8Array {\n  const buf = new Uint8Array(hexStr.length / 2);\n  let offset = 0;\n\n  for (let i = 0; i < hexStr.length; i += 2) {\n    const hi = intValue(hexStr.charCodeAt(i));\n    const lo = intValue(hexStr.charCodeAt(i + 1));\n    buf[offset++] = (hi << 4) | lo;\n  }\n\n  return buf;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { hexToBinary } from '../../common/hex-to-binary';\n\nexport function hexToBase64(hexStr: string): string {\n  return Buffer.from(hexToBinary(hexStr)).toString('base64');\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdGenerator } from '../../trace/IdGenerator';\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_BUFFER = Buffer.allocUnsafe(TRACE_ID_BYTES);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes / 4; i++) {\n      // unsigned right shift drops decimal part of the number\n      // it is required because if a number between 2**32 and 2**32 - 1 is generated, an out of range error is thrown by writeUInt32BE\n      SHARED_BUFFER.writeUInt32BE((Math.random() * 2 ** 32) >>> 0, i * 4);\n    }\n\n    // If buffer is all 0, set the last byte to 1 to guarantee a valid w3c id is generated\n    for (let i = 0; i < bytes; i++) {\n      if (SHARED_BUFFER[i] > 0) {\n        break;\n      } else if (i === bytes - 1) {\n        SHARED_BUFFER[bytes - 1] = 1;\n      }\n    }\n\n    return SHARED_BUFFER.toString('hex', 0, bytes);\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { performance } from 'perf_hooks';\n\nexport const otperformance = performance;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.25.1';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../../version';\nimport {\n  SEMRESATTRS_TELEMETRY_SDK_NAME,\n  SEMRESATTRS_PROCESS_RUNTIME_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_LANGUAGE,\n  TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n} from '@opentelemetry/semantic-conventions';\n\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n  [SEMRESATTRS_TELEMETRY_SDK_NAME]: 'opentelemetry',\n  [SEMRESATTRS_PROCESS_RUNTIME_NAME]: 'node',\n  [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]: TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n  [SEMRESATTRS_TELEMETRY_SDK_VERSION]: VERSION,\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(timer: NodeJS.Timer): void {\n  timer.unref();\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { getEnvWithoutDefaults, getEnv } from './environment';\nexport * from './globalThis';\nexport * from './hex-to-base64';\nexport * from './RandomIdGenerator';\nexport * from './performance';\nexport * from './sdk-info';\nexport * from './timer-util';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './node';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substr(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\n\n/**\n * This interface defines a fallback to read a timeOrigin when it is not available on performance.timeOrigin,\n * this happens for example on Safari Mac\n * then the timeOrigin is taken from fetchStart - which is the closest to timeOrigin\n */\nexport interface TimeOriginLegacy {\n  timing: {\n    fetchStart: number;\n  };\n}\n\n/**\n * This interface defines the params that are be added to the wrapped function\n * using the \"shimmer.wrap\"\n */\nexport interface ShimWrapped extends Function {\n  __wrapped: boolean;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __unwrap: Function;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __original: Function;\n}\n\n/**\n * An instrumentation library consists of the name and optional version\n * used to obtain a tracer or meter from a provider. This metadata is made\n * available on ReadableSpan and MetricRecord for use by the export pipeline.\n * @deprecated Use {@link InstrumentationScope} instead.\n */\nexport interface InstrumentationLibrary {\n  readonly name: string;\n  readonly version?: string;\n  readonly schemaUrl?: string;\n}\n\n/**\n * An instrumentation scope consists of the name and optional version\n * used to obtain a tracer or meter from a provider. This metadata is made\n * available on ReadableSpan and MetricRecord for use by the export pipeline.\n */\nexport interface InstrumentationScope {\n  readonly name: string;\n  readonly version?: string;\n  readonly schemaUrl?: string;\n}\n\n/** Defines an error handler function */\nexport type ErrorHandler = (ex: Exception) => void;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  diag,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\n/** Configuration object for composite propagator */\nexport interface CompositePropagatorConfig {\n  /**\n   * List of propagators to run. Propagators run in the\n   * list order. If a propagator later in the list writes the same context\n   * key as a propagator earlier in the list, the later on will \"win\".\n   */\n  propagators?: TextMapPropagator[];\n}\n\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator implements TextMapPropagator {\n  private readonly _propagators: TextMapPropagator[];\n  private readonly _fields: string[];\n\n  /**\n   * Construct a composite propagator from a list of propagators.\n   *\n   * @param [config] Configuration object for composite propagator\n   */\n  constructor(config: CompositePropagatorConfig = {}) {\n    this._propagators = config.propagators ?? [];\n\n    this._fields = Array.from(\n      new Set(\n        this._propagators\n          // older propagators may not have fields function, null check to be sure\n          .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n          .reduce((x, y) => x.concat(y), [])\n      )\n    );\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same carrier key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to inject\n   * @param carrier Carrier into which context will be injected\n   */\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    for (const propagator of this._propagators) {\n      try {\n        propagator.inject(context, carrier, setter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same context key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to add values to\n   * @param carrier Carrier from which to extract context\n   */\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    return this._propagators.reduce((ctx, propagator) => {\n      try {\n        return propagator.extract(ctx, carrier, getter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n      return ctx;\n    }, context);\n  }\n\n  fields(): string[] {\n    // return a new array so our fields cannot be modified\n    return this._fields.slice();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * IdGenerator provides an interface for generating Trace Id and Span Id.\n */\nexport interface IdGenerator {\n  /** Returns a trace ID composed of 32 lowercase hex characters. */\n  generateTraceId(): string;\n  /** Returns a span ID composed of 16 lowercase hex characters. */\n  generateSpanId(): string;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey, Span } from '@opentelemetry/api';\n\nconst RPC_METADATA_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key RPC_METADATA'\n);\n\nexport enum RPCType {\n  HTTP = 'http',\n}\n\ntype HTTPMetadata = {\n  type: RPCType.HTTP;\n  route?: string;\n  span: Span;\n};\n\n/**\n * Allows for future rpc metadata to be used with this mechanism\n */\nexport type RPCMetadata = HTTPMetadata;\n\nexport function setRPCMetadata(context: Context, meta: RPCMetadata): Context {\n  return context.setValue(RPC_METADATA_KEY, meta);\n}\n\nexport function deleteRPCMetadata(context: Context): Context {\n  return context.deleteValue(RPC_METADATA_KEY);\n}\n\nexport function getRPCMetadata(context: Context): RPCMetadata | undefined {\n  return context.getValue(RPC_METADATA_KEY) as RPCMetadata | undefined;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  Sampler,\n  SamplingResult,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags,\n  trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Sampler,\n  SamplingDecision,\n  SamplingResult,\n  isValidTraceId,\n} from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\n\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototype = overArg(Object.getPrototypeOf, Object);\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func: Function, transform: any): any {\n  return function (arg: any) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value: any) {\n  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n    return false;\n  }\n  const proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (\n    typeof Ctor == 'function' &&\n    Ctor instanceof Ctor &&\n    funcToString.call(Ctor) === objectCtorString\n  );\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value: any) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value: any) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value: any) {\n  const isOwn = hasOwnProperty.call(value, symToStringTag as any),\n    tag = value[symToStringTag as any];\n  let unmasked = false;\n\n  try {\n    value[symToStringTag as any] = undefined;\n    unmasked = true;\n  } catch (e) {\n    // silence\n  }\n\n  const result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag as any] = tag;\n    } else {\n      delete value[symToStringTag as any];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value: any) {\n  return nativeObjectToString.call(value);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { isPlainObject } from './lodash.merge';\n\nconst MAX_LEVEL = 20;\n\ninterface ObjectInto {\n  obj: any;\n  key: string;\n}\n\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args: any[]): any {\n  let result: any = args.shift();\n  const objects: WeakMap<any, ObjectInto[]> | undefined = new WeakMap<\n    any,\n    ObjectInto[]\n  >();\n  while (args.length > 0) {\n    result = mergeTwoObjects(result, args.shift(), 0, objects);\n  }\n\n  return result;\n}\n\nfunction takeValue(value: any): any {\n  if (isArray(value)) {\n    return value.slice();\n  }\n  return value;\n}\n\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(\n  one: any,\n  two: any,\n  level = 0,\n  objects: WeakMap<any, ObjectInto[]>\n): any {\n  let result: any;\n  if (level > MAX_LEVEL) {\n    return undefined;\n  }\n  level++;\n  if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n    result = takeValue(two);\n  } else if (isArray(one)) {\n    result = one.slice();\n    if (isArray(two)) {\n      for (let i = 0, j = two.length; i < j; i++) {\n        result.push(takeValue(two[i]));\n      }\n    } else if (isObject(two)) {\n      const keys = Object.keys(two);\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        result[key] = takeValue(two[key]);\n      }\n    }\n  } else if (isObject(one)) {\n    if (isObject(two)) {\n      if (!shouldMerge(one, two)) {\n        return two;\n      }\n      result = Object.assign({}, one);\n      const keys = Object.keys(two);\n\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        const twoValue = two[key];\n\n        if (isPrimitive(twoValue)) {\n          if (typeof twoValue === 'undefined') {\n            delete result[key];\n          } else {\n            // result[key] = takeValue(twoValue);\n            result[key] = twoValue;\n          }\n        } else {\n          const obj1 = result[key];\n          const obj2 = twoValue;\n\n          if (\n            wasObjectReferenced(one, key, objects) ||\n            wasObjectReferenced(two, key, objects)\n          ) {\n            delete result[key];\n          } else {\n            if (isObject(obj1) && isObject(obj2)) {\n              const arr1 = objects.get(obj1) || [];\n              const arr2 = objects.get(obj2) || [];\n              arr1.push({ obj: one, key });\n              arr2.push({ obj: two, key });\n              objects.set(obj1, arr1);\n              objects.set(obj2, arr2);\n            }\n\n            result[key] = mergeTwoObjects(\n              result[key],\n              twoValue,\n              level,\n              objects\n            );\n          }\n        }\n      }\n    } else {\n      result = two;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(\n  obj: any,\n  key: string,\n  objects: WeakMap<any, ObjectInto[]>\n): boolean {\n  const arr = objects.get(obj[key]) || [];\n  for (let i = 0, j = arr.length; i < j; i++) {\n    const info = arr[i];\n    if (info.key === key && info.obj === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nfunction isObject(value: any): boolean {\n  return (\n    !isPrimitive(value) &&\n    !isArray(value) &&\n    !isFunction(value) &&\n    typeof value === 'object'\n  );\n}\n\nfunction isPrimitive(value: any): boolean {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    value instanceof Date ||\n    value instanceof RegExp ||\n    value === null\n  );\n}\n\nfunction shouldMerge(one: any, two: any): boolean {\n  if (!isPlainObject(one) || !isPlainObject(two)) {\n    return false;\n  }\n\n  return true;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error that is thrown on timeouts.\n */\nexport class TimeoutError extends Error {\n  constructor(message?: string) {\n    super(message);\n\n    // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n    // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout<T>(\n  promise: Promise<T>,\n  timeout: number\n): Promise<T> {\n  let timeoutHandle: ReturnType<typeof setTimeout>;\n\n  const timeoutPromise = new Promise<never>(function timeoutFunction(\n    _resolve,\n    reject\n  ) {\n    timeoutHandle = setTimeout(function timeoutHandler() {\n      reject(new TimeoutError('Operation timed out.'));\n    }, timeout);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then(\n    result => {\n      clearTimeout(timeoutHandle);\n      return result;\n    },\n    reason => {\n      clearTimeout(timeoutHandle);\n      throw reason;\n    }\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from '../common/types';\n\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R,\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(\n    private _callback: T,\n    private _that: This\n  ) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args)).then(\n          val => this._deferred.resolve(val),\n          err => this._deferred.reject(err)\n        );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context } from '@opentelemetry/api';\nimport { ExportResult } from '../ExportResult';\nimport { suppressTracing } from '../trace/suppress-tracing';\n\nexport interface Exporter<T> {\n  export(arg: T, resultCallback: (result: ExportResult) => void): void;\n}\n\n/**\n * @internal\n * Shared functionality used by Exporters while exporting data, including suppression of Traces.\n */\nexport function _export<T>(\n  exporter: Exporter<T>,\n  arg: T\n): Promise<ExportResult> {\n  return new Promise(resolve => {\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), () => {\n      exporter.export(arg, (result: ExportResult) => {\n        resolve(result);\n      });\n    });\n  });\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './baggage/propagation/W3CBaggagePropagator';\nexport * from './common/anchored-clock';\nexport * from './common/attributes';\nexport * from './common/global-error-handler';\nexport * from './common/logging-error-handler';\nexport * from './common/time';\nexport * from './common/types';\nexport * from './common/hex-to-binary';\nexport * from './ExportResult';\nexport * as baggageUtils from './baggage/utils';\nexport * from './platform';\nexport * from './propagation/composite';\nexport * from './trace/W3CTraceContextPropagator';\nexport * from './trace/IdGenerator';\nexport * from './trace/rpc-metadata';\nexport * from './trace/sampler/AlwaysOffSampler';\nexport * from './trace/sampler/AlwaysOnSampler';\nexport * from './trace/sampler/ParentBasedSampler';\nexport * from './trace/sampler/TraceIdRatioBasedSampler';\nexport * from './trace/suppress-tracing';\nexport * from './trace/TraceState';\nexport * from './utils/environment';\nexport * from './utils/merge';\nexport * from './utils/sampling';\nexport * from './utils/timeout';\nexport * from './utils/url';\nexport * from './utils/wrap';\nexport * from './utils/callback';\nexport * from './version';\nimport { _export } from './internal/exporter';\nexport const internal = {\n  _export,\n};\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, safeSrc: src, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const r = new RegExp(`^${this.options.loose ? src[t.PRERELEASELOOSE] : src[t.PRERELEASE]}$`)\n        const match = `-${identifier}`.match(r)\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport enum AttributeNames {\n  HTTP_ERROR_NAME = 'http.error_name',\n  HTTP_ERROR_MESSAGE = 'http.error_message',\n  HTTP_STATUS_TEXT = 'http.status_text',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MetricAttributes,\n  SpanAttributes,\n  SpanStatusCode,\n  Span,\n  context,\n  SpanKind,\n} from '@opentelemetry/api';\nimport {\n  NETTRANSPORTVALUES_IP_TCP,\n  NETTRANSPORTVALUES_IP_UDP,\n  SEMATTRS_HTTP_CLIENT_IP,\n  SEMATTRS_HTTP_FLAVOR,\n  SEMATTRS_HTTP_HOST,\n  SEMATTRS_HTTP_METHOD,\n  SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH,\n  SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n  SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH,\n  SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n  SEMATTRS_HTTP_ROUTE,\n  SEMATTRS_HTTP_SCHEME,\n  SEMATTRS_HTTP_SERVER_NAME,\n  SEMATTRS_HTTP_STATUS_CODE,\n  SEMATTRS_HTTP_TARGET,\n  SEMATTRS_HTTP_URL,\n  SEMATTRS_HTTP_USER_AGENT,\n  SEMATTRS_NET_HOST_IP,\n  SEMATTRS_NET_HOST_NAME,\n  SEMATTRS_NET_HOST_PORT,\n  SEMATTRS_NET_PEER_IP,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n  SEMATTRS_NET_TRANSPORT,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  IncomingHttpHeaders,\n  IncomingMessage,\n  OutgoingHttpHeaders,\n  RequestOptions,\n  ServerResponse,\n} from 'http';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport * as url from 'url';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { Err, IgnoreMatcher, ParsedRequestOptions } from './types';\n\n/**\n * Get an absolute url\n */\nexport const getAbsoluteUrl = (\n  requestUrl: ParsedRequestOptions | null,\n  headers: IncomingHttpHeaders | OutgoingHttpHeaders,\n  fallbackProtocol = 'http:'\n): string => {\n  const reqUrlObject = requestUrl || {};\n  const protocol = reqUrlObject.protocol || fallbackProtocol;\n  const port = (reqUrlObject.port || '').toString();\n  const path = reqUrlObject.path || '/';\n  let host =\n    reqUrlObject.host || reqUrlObject.hostname || headers.host || 'localhost';\n\n  // if there is no port in host and there is a port\n  // it should be displayed if it's not 80 and 443 (default ports)\n  if (\n    (host as string).indexOf(':') === -1 &&\n    port &&\n    port !== '80' &&\n    port !== '443'\n  ) {\n    host += `:${port}`;\n  }\n\n  return `${protocol}//${host}${path}`;\n};\n\n/**\n * Parse status code from HTTP response. [More details](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/data-http.md#status)\n */\nexport const parseResponseStatus = (\n  kind: SpanKind,\n  statusCode?: number\n): SpanStatusCode => {\n  const upperBound = kind === SpanKind.CLIENT ? 400 : 500;\n  // 1xx, 2xx, 3xx are OK on client and server\n  // 4xx is OK on server\n  if (statusCode && statusCode >= 100 && statusCode < upperBound) {\n    return SpanStatusCode.UNSET;\n  }\n\n  // All other codes are error\n  return SpanStatusCode.ERROR;\n};\n\n/**\n * Check whether the given obj match pattern\n * @param constant e.g URL of request\n * @param pattern Match pattern\n */\nexport const satisfiesPattern = (\n  constant: string,\n  pattern: IgnoreMatcher\n): boolean => {\n  if (typeof pattern === 'string') {\n    return pattern === constant;\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(constant);\n  } else if (typeof pattern === 'function') {\n    return pattern(constant);\n  } else {\n    throw new TypeError('Pattern is in unsupported datatype');\n  }\n};\n\n/**\n * Check whether the given request is ignored by configuration\n * It will not re-throw exceptions from `list` provided by the client\n * @param constant e.g URL of request\n * @param [list] List of ignore patterns\n * @param [onException] callback for doing something when an exception has\n *     occurred\n */\nexport const isIgnored = (\n  constant: string,\n  list?: IgnoreMatcher[],\n  onException?: (error: unknown) => void\n): boolean => {\n  if (!list) {\n    // No ignored urls - trace everything\n    return false;\n  }\n  // Try/catch outside the loop for failing fast\n  try {\n    for (const pattern of list) {\n      if (satisfiesPattern(constant, pattern)) {\n        return true;\n      }\n    }\n  } catch (e) {\n    if (onException) {\n      onException(e);\n    }\n  }\n\n  return false;\n};\n\n/**\n * Sets the span with the error passed in params\n * @param {Span} span the span that need to be set\n * @param {Error} error error that will be set to span\n */\nexport const setSpanWithError = (span: Span, error: Err): void => {\n  const message = error.message;\n\n  span.setAttribute(AttributeNames.HTTP_ERROR_NAME, error.name);\n  span.setAttribute(AttributeNames.HTTP_ERROR_MESSAGE, message);\n  span.setStatus({ code: SpanStatusCode.ERROR, message });\n  span.recordException(error);\n};\n\n/**\n * Adds attributes for request content-length and content-encoding HTTP headers\n * @param { IncomingMessage } Request object whose headers will be analyzed\n * @param { SpanAttributes } SpanAttributes object to be modified\n */\nexport const setRequestContentLengthAttribute = (\n  request: IncomingMessage,\n  attributes: SpanAttributes\n): void => {\n  const length = getContentLength(request.headers);\n  if (length === null) return;\n\n  if (isCompressed(request.headers)) {\n    attributes[SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH] = length;\n  } else {\n    attributes[SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED] = length;\n  }\n};\n\n/**\n * Adds attributes for response content-length and content-encoding HTTP headers\n * @param { IncomingMessage } Response object whose headers will be analyzed\n * @param { SpanAttributes } SpanAttributes object to be modified\n */\nexport const setResponseContentLengthAttribute = (\n  response: IncomingMessage,\n  attributes: SpanAttributes\n): void => {\n  const length = getContentLength(response.headers);\n  if (length === null) return;\n\n  if (isCompressed(response.headers)) {\n    attributes[SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH] = length;\n  } else {\n    attributes[SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED] = length;\n  }\n};\n\nfunction getContentLength(\n  headers: OutgoingHttpHeaders | IncomingHttpHeaders\n): number | null {\n  const contentLengthHeader = headers['content-length'];\n  if (contentLengthHeader === undefined) return null;\n\n  const contentLength = parseInt(contentLengthHeader as string, 10);\n  if (isNaN(contentLength)) return null;\n\n  return contentLength;\n}\n\nexport const isCompressed = (\n  headers: OutgoingHttpHeaders | IncomingHttpHeaders\n): boolean => {\n  const encoding = headers['content-encoding'];\n\n  return !!encoding && encoding !== 'identity';\n};\n\n/**\n * Makes sure options is an url object\n * return an object with default value and parsed options\n * @param options original options for the request\n * @param [extraOptions] additional options for the request\n */\nexport const getRequestInfo = (\n  options: url.URL | RequestOptions | string,\n  extraOptions?: RequestOptions\n): {\n  origin: string;\n  pathname: string;\n  method: string;\n  optionsParsed: RequestOptions;\n} => {\n  let pathname = '/';\n  let origin = '';\n  let optionsParsed: RequestOptions;\n  if (typeof options === 'string') {\n    optionsParsed = url.parse(options);\n    pathname = (optionsParsed as url.UrlWithStringQuery).pathname || '/';\n    origin = `${optionsParsed.protocol || 'http:'}//${optionsParsed.host}`;\n    if (extraOptions !== undefined) {\n      Object.assign(optionsParsed, extraOptions);\n    }\n  } else if (options instanceof url.URL) {\n    optionsParsed = {\n      protocol: options.protocol,\n      hostname:\n        typeof options.hostname === 'string' && options.hostname.startsWith('[')\n          ? options.hostname.slice(1, -1)\n          : options.hostname,\n      path: `${options.pathname || ''}${options.search || ''}`,\n    };\n    if (options.port !== '') {\n      optionsParsed.port = Number(options.port);\n    }\n    if (options.username || options.password) {\n      optionsParsed.auth = `${options.username}:${options.password}`;\n    }\n    pathname = options.pathname;\n    origin = options.origin;\n    if (extraOptions !== undefined) {\n      Object.assign(optionsParsed, extraOptions);\n    }\n  } else {\n    optionsParsed = Object.assign(\n      { protocol: options.host ? 'http:' : undefined },\n      options\n    );\n    pathname = (options as url.URL).pathname;\n    if (!pathname && optionsParsed.path) {\n      pathname = url.parse(optionsParsed.path).pathname || '/';\n    }\n    const hostname =\n      optionsParsed.host ||\n      (optionsParsed.port != null\n        ? `${optionsParsed.hostname}${optionsParsed.port}`\n        : optionsParsed.hostname);\n    origin = `${optionsParsed.protocol || 'http:'}//${hostname}`;\n  }\n\n  // some packages return method in lowercase..\n  // ensure upperCase for consistency\n  const method = optionsParsed.method\n    ? optionsParsed.method.toUpperCase()\n    : 'GET';\n\n  return { origin, pathname, method, optionsParsed };\n};\n\n/**\n * Makes sure options is of type string or object\n * @param options for the request\n */\nexport const isValidOptionsType = (options: unknown): boolean => {\n  if (!options) {\n    return false;\n  }\n\n  const type = typeof options;\n  return type === 'string' || (type === 'object' && !Array.isArray(options));\n};\n\nexport const extractHostnameAndPort = (\n  requestOptions: Pick<\n    ParsedRequestOptions,\n    'hostname' | 'host' | 'port' | 'protocol'\n  >\n): { hostname: string; port: number | string } => {\n  if (requestOptions.hostname && requestOptions.port) {\n    return { hostname: requestOptions.hostname, port: requestOptions.port };\n  }\n  const matches = requestOptions.host?.match(/^([^:/ ]+)(:\\d{1,5})?/) || null;\n  const hostname =\n    requestOptions.hostname || (matches === null ? 'localhost' : matches[1]);\n  let port = requestOptions.port;\n  if (!port) {\n    if (matches && matches[2]) {\n      // remove the leading \":\". The extracted port would be something like \":8080\"\n      port = matches[2].substring(1);\n    } else {\n      port = requestOptions.protocol === 'https:' ? '443' : '80';\n    }\n  }\n  return { hostname, port };\n};\n\n/**\n * Returns outgoing request attributes scoped to the options passed to the request\n * @param {ParsedRequestOptions} requestOptions the same options used to make the request\n * @param {{ component: string, hostname: string, hookAttributes?: SpanAttributes }} options used to pass data needed to create attributes\n */\nexport const getOutgoingRequestAttributes = (\n  requestOptions: ParsedRequestOptions,\n  options: {\n    component: string;\n    hostname: string;\n    port: string | number;\n    hookAttributes?: SpanAttributes;\n  }\n): SpanAttributes => {\n  const hostname = options.hostname;\n  const port = options.port;\n  const requestMethod = requestOptions.method;\n  const method = requestMethod ? requestMethod.toUpperCase() : 'GET';\n  const headers = requestOptions.headers || {};\n  const userAgent = headers['user-agent'];\n  const attributes: SpanAttributes = {\n    [SEMATTRS_HTTP_URL]: getAbsoluteUrl(\n      requestOptions,\n      headers,\n      `${options.component}:`\n    ),\n    [SEMATTRS_HTTP_METHOD]: method,\n    [SEMATTRS_HTTP_TARGET]: requestOptions.path || '/',\n    [SEMATTRS_NET_PEER_NAME]: hostname,\n    [SEMATTRS_HTTP_HOST]: headers.host ?? `${hostname}:${port}`,\n  };\n\n  if (userAgent !== undefined) {\n    attributes[SEMATTRS_HTTP_USER_AGENT] = userAgent;\n  }\n  return Object.assign(attributes, options.hookAttributes);\n};\n\n/**\n * Returns outgoing request Metric attributes scoped to the request data\n * @param {SpanAttributes} spanAttributes the span attributes\n */\nexport const getOutgoingRequestMetricAttributes = (\n  spanAttributes: SpanAttributes\n): MetricAttributes => {\n  const metricAttributes: MetricAttributes = {};\n  metricAttributes[SEMATTRS_HTTP_METHOD] = spanAttributes[SEMATTRS_HTTP_METHOD];\n  metricAttributes[SEMATTRS_NET_PEER_NAME] =\n    spanAttributes[SEMATTRS_NET_PEER_NAME];\n  //TODO: http.url attribute, it should substitute any parameters to avoid high cardinality.\n  return metricAttributes;\n};\n\n/**\n * Returns attributes related to the kind of HTTP protocol used\n * @param {string} [kind] Kind of HTTP protocol used: \"1.0\", \"1.1\", \"2\", \"SPDY\" or \"QUIC\".\n */\nexport const setAttributesFromHttpKind = (\n  kind: string | undefined,\n  attributes: SpanAttributes\n): void => {\n  if (kind) {\n    attributes[SEMATTRS_HTTP_FLAVOR] = kind;\n    if (kind.toUpperCase() !== 'QUIC') {\n      attributes[SEMATTRS_NET_TRANSPORT] = NETTRANSPORTVALUES_IP_TCP;\n    } else {\n      attributes[SEMATTRS_NET_TRANSPORT] = NETTRANSPORTVALUES_IP_UDP;\n    }\n  }\n};\n\n/**\n * Returns outgoing request attributes scoped to the response data\n * @param {IncomingMessage} response the response object\n * @param {{ hostname: string }} options used to pass data needed to create attributes\n */\nexport const getOutgoingRequestAttributesOnResponse = (\n  response: IncomingMessage\n): SpanAttributes => {\n  const { statusCode, statusMessage, httpVersion, socket } = response;\n  const attributes: SpanAttributes = {};\n  if (socket) {\n    const { remoteAddress, remotePort } = socket;\n    attributes[SEMATTRS_NET_PEER_IP] = remoteAddress;\n    attributes[SEMATTRS_NET_PEER_PORT] = remotePort;\n  }\n  setResponseContentLengthAttribute(response, attributes);\n\n  if (statusCode) {\n    attributes[SEMATTRS_HTTP_STATUS_CODE] = statusCode;\n    attributes[AttributeNames.HTTP_STATUS_TEXT] = (\n      statusMessage || ''\n    ).toUpperCase();\n  }\n\n  setAttributesFromHttpKind(httpVersion, attributes);\n  return attributes;\n};\n\n/**\n * Returns outgoing request Metric attributes scoped to the response data\n * @param {SpanAttributes} spanAttributes the span attributes\n */\nexport const getOutgoingRequestMetricAttributesOnResponse = (\n  spanAttributes: SpanAttributes\n): MetricAttributes => {\n  const metricAttributes: MetricAttributes = {};\n  metricAttributes[SEMATTRS_NET_PEER_PORT] =\n    spanAttributes[SEMATTRS_NET_PEER_PORT];\n  metricAttributes[SEMATTRS_HTTP_STATUS_CODE] =\n    spanAttributes[SEMATTRS_HTTP_STATUS_CODE];\n  metricAttributes[SEMATTRS_HTTP_FLAVOR] = spanAttributes[SEMATTRS_HTTP_FLAVOR];\n  return metricAttributes;\n};\n\n/**\n * Returns incoming request attributes scoped to the request data\n * @param {IncomingMessage} request the request object\n * @param {{ component: string, serverName?: string, hookAttributes?: SpanAttributes }} options used to pass data needed to create attributes\n */\nexport const getIncomingRequestAttributes = (\n  request: IncomingMessage,\n  options: {\n    component: string;\n    serverName?: string;\n    hookAttributes?: SpanAttributes;\n  }\n): SpanAttributes => {\n  const headers = request.headers;\n  const userAgent = headers['user-agent'];\n  const ips = headers['x-forwarded-for'];\n  const method = request.method || 'GET';\n  const httpVersion = request.httpVersion;\n  const requestUrl = request.url ? url.parse(request.url) : null;\n  const host = requestUrl?.host || headers.host;\n  const hostname =\n    requestUrl?.hostname ||\n    host?.replace(/^(.*)(:[0-9]{1,5})/, '$1') ||\n    'localhost';\n  const serverName = options.serverName;\n  const attributes: SpanAttributes = {\n    [SEMATTRS_HTTP_URL]: getAbsoluteUrl(\n      requestUrl,\n      headers,\n      `${options.component}:`\n    ),\n    [SEMATTRS_HTTP_HOST]: host,\n    [SEMATTRS_NET_HOST_NAME]: hostname,\n    [SEMATTRS_HTTP_METHOD]: method,\n    [SEMATTRS_HTTP_SCHEME]: options.component,\n  };\n\n  if (typeof ips === 'string') {\n    attributes[SEMATTRS_HTTP_CLIENT_IP] = ips.split(',')[0];\n  }\n\n  if (typeof serverName === 'string') {\n    attributes[SEMATTRS_HTTP_SERVER_NAME] = serverName;\n  }\n\n  if (requestUrl) {\n    attributes[SEMATTRS_HTTP_TARGET] = requestUrl.path || '/';\n  }\n\n  if (userAgent !== undefined) {\n    attributes[SEMATTRS_HTTP_USER_AGENT] = userAgent;\n  }\n  setRequestContentLengthAttribute(request, attributes);\n  setAttributesFromHttpKind(httpVersion, attributes);\n  return Object.assign(attributes, options.hookAttributes);\n};\n\n/**\n * Returns incoming request Metric attributes scoped to the request data\n * @param {SpanAttributes} spanAttributes the span attributes\n * @param {{ component: string }} options used to pass data needed to create attributes\n */\nexport const getIncomingRequestMetricAttributes = (\n  spanAttributes: SpanAttributes\n): MetricAttributes => {\n  const metricAttributes: MetricAttributes = {};\n  metricAttributes[SEMATTRS_HTTP_SCHEME] = spanAttributes[SEMATTRS_HTTP_SCHEME];\n  metricAttributes[SEMATTRS_HTTP_METHOD] = spanAttributes[SEMATTRS_HTTP_METHOD];\n  metricAttributes[SEMATTRS_NET_HOST_NAME] =\n    spanAttributes[SEMATTRS_NET_HOST_NAME];\n  metricAttributes[SEMATTRS_HTTP_FLAVOR] = spanAttributes[SEMATTRS_HTTP_FLAVOR];\n  //TODO: http.target attribute, it should substitute any parameters to avoid high cardinality.\n  return metricAttributes;\n};\n\n/**\n * Returns incoming request attributes scoped to the response data\n * @param {(ServerResponse & { socket: Socket; })} response the response object\n */\nexport const getIncomingRequestAttributesOnResponse = (\n  request: IncomingMessage,\n  response: ServerResponse\n): SpanAttributes => {\n  // take socket from the request,\n  // since it may be detached from the response object in keep-alive mode\n  const { socket } = request;\n  const { statusCode, statusMessage } = response;\n\n  const rpcMetadata = getRPCMetadata(context.active());\n  const attributes: SpanAttributes = {};\n  if (socket) {\n    const { localAddress, localPort, remoteAddress, remotePort } = socket;\n    attributes[SEMATTRS_NET_HOST_IP] = localAddress;\n    attributes[SEMATTRS_NET_HOST_PORT] = localPort;\n    attributes[SEMATTRS_NET_PEER_IP] = remoteAddress;\n    attributes[SEMATTRS_NET_PEER_PORT] = remotePort;\n  }\n  attributes[SEMATTRS_HTTP_STATUS_CODE] = statusCode;\n  attributes[AttributeNames.HTTP_STATUS_TEXT] = (\n    statusMessage || ''\n  ).toUpperCase();\n\n  if (rpcMetadata?.type === RPCType.HTTP && rpcMetadata.route !== undefined) {\n    attributes[SEMATTRS_HTTP_ROUTE] = rpcMetadata.route;\n  }\n  return attributes;\n};\n\n/**\n * Returns incoming request Metric attributes scoped to the request data\n * @param {SpanAttributes} spanAttributes the span attributes\n */\nexport const getIncomingRequestMetricAttributesOnResponse = (\n  spanAttributes: SpanAttributes\n): MetricAttributes => {\n  const metricAttributes: MetricAttributes = {};\n  metricAttributes[SEMATTRS_HTTP_STATUS_CODE] =\n    spanAttributes[SEMATTRS_HTTP_STATUS_CODE];\n  metricAttributes[SEMATTRS_NET_HOST_PORT] =\n    spanAttributes[SEMATTRS_NET_HOST_PORT];\n  if (spanAttributes[SEMATTRS_HTTP_ROUTE] !== undefined) {\n    metricAttributes[SEMATTRS_HTTP_ROUTE] = spanAttributes[SEMATTRS_HTTP_ROUTE];\n  }\n  return metricAttributes;\n};\n\nexport function headerCapture(type: 'request' | 'response', headers: string[]) {\n  const normalizedHeaders = new Map<string, string>();\n  for (let i = 0, len = headers.length; i < len; i++) {\n    const capturedHeader = headers[i].toLowerCase();\n    normalizedHeaders.set(capturedHeader, capturedHeader.replace(/-/g, '_'));\n  }\n\n  return (\n    span: Span,\n    getHeader: (key: string) => undefined | string | string[] | number\n  ) => {\n    for (const capturedHeader of normalizedHeaders.keys()) {\n      const value = getHeader(capturedHeader);\n\n      if (value === undefined) {\n        continue;\n      }\n\n      const normalizedHeader = normalizedHeaders.get(capturedHeader);\n      const key = `http.${type}.header.${normalizedHeader}`;\n\n      if (typeof value === 'string') {\n        span.setAttribute(key, [value]);\n      } else if (Array.isArray(value)) {\n        span.setAttribute(key, value);\n      } else {\n        span.setAttribute(key, [value]);\n      }\n    }\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.52.1';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogRecord } from './LogRecord';\n\nexport interface Logger {\n  /**\n   * Emit a log record. This method should only be used by log appenders.\n   *\n   * @param logRecord\n   */\n  emit(logRecord: LogRecord): void;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from './Logger';\nimport { LoggerOptions } from './LoggerOptions';\n\n/**\n * A registry for creating named {@link Logger}s.\n */\nexport interface LoggerProvider {\n  /**\n   * Returns a Logger, creating one if one with the given name, version, and\n   * schemaUrl pair is not already created.\n   *\n   * @param name The name of the logger or instrumentation library.\n   * @param version The version of the logger or instrumentation library.\n   * @param options The options of the logger or instrumentation library.\n   * @returns Logger A Logger with the given name and version\n   */\n  getLogger(name: string, version?: string, options?: LoggerOptions): Logger;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, TimeInput } from '@opentelemetry/api';\nimport { AnyValue, AnyValueMap } from './AnyValue';\n\nexport type LogBody = AnyValue;\nexport type LogAttributes = AnyValueMap;\n\nexport enum SeverityNumber {\n  UNSPECIFIED = 0,\n  TRACE = 1,\n  TRACE2 = 2,\n  TRACE3 = 3,\n  TRACE4 = 4,\n  DEBUG = 5,\n  DEBUG2 = 6,\n  DEBUG3 = 7,\n  DEBUG4 = 8,\n  INFO = 9,\n  INFO2 = 10,\n  INFO3 = 11,\n  INFO4 = 12,\n  WARN = 13,\n  WARN2 = 14,\n  WARN3 = 15,\n  WARN4 = 16,\n  ERROR = 17,\n  ERROR2 = 18,\n  ERROR3 = 19,\n  ERROR4 = 20,\n  FATAL = 21,\n  FATAL2 = 22,\n  FATAL3 = 23,\n  FATAL4 = 24,\n}\n\nexport interface LogRecord {\n  /**\n   * The time when the log record occurred as UNIX Epoch time in nanoseconds.\n   */\n  timestamp?: TimeInput;\n\n  /**\n   * Time when the event was observed by the collection system.\n   */\n  observedTimestamp?: TimeInput;\n\n  /**\n   * Numerical value of the severity.\n   */\n  severityNumber?: SeverityNumber;\n\n  /**\n   * The severity text.\n   */\n  severityText?: string;\n\n  /**\n   * A value containing the body of the log record.\n   */\n  body?: LogBody;\n\n  /**\n   * Attributes that define the log record.\n   */\n  attributes?: LogAttributes;\n\n  /**\n   * The Context associated with the LogRecord.\n   */\n  context?: Context;\n}\n","export {};\n//# sourceMappingURL=LoggerOptions.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AttributeValue } from '@opentelemetry/api';\n\n/**\n * AnyValueMap is a map from string to AnyValue (attribute value or a nested map)\n */\nexport interface AnyValueMap {\n  [attributeKey: string]: AnyValue | undefined;\n}\n\n/**\n * AnyValue is a either an attribute value or a map of AnyValue(s)\n */\nexport type AnyValue = AttributeValue | AnyValueMap;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from './types/Logger';\nimport { LogRecord } from './types/LogRecord';\n\nexport class NoopLogger implements Logger {\n  emit(_logRecord: LogRecord): void {}\n}\n\nexport const NOOP_LOGGER = new NoopLogger();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NoopLogger } from './NoopLogger';\n\nexport class NoopLoggerProvider implements LoggerProvider {\n  getLogger(\n    _name: string,\n    _version?: string | undefined,\n    _options?: LoggerOptions | undefined\n  ): Logger {\n    return new NoopLogger();\n  }\n}\n\nexport const NOOP_LOGGER_PROVIDER = new NoopLoggerProvider();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins\nexport const _globalThis = typeof globalThis === 'object' ? globalThis : global;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './globalThis';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './node';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { _globalThis } from '../platform';\n\nexport const GLOBAL_LOGS_API_KEY = Symbol.for('io.opentelemetry.js.api.logs');\n\ntype Get<T> = (version: number) => T;\ntype OtelGlobal = Partial<{\n  [GLOBAL_LOGS_API_KEY]: Get<LoggerProvider>;\n}>;\n\nexport const _global = _globalThis as OtelGlobal;\n\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter<T>(\n  requiredVersion: number,\n  instance: T,\n  fallback: T\n): Get<T> {\n  return (version: number): T =>\n    version === requiredVersion ? instance : fallback;\n}\n\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 1;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  API_BACKWARDS_COMPATIBILITY_VERSION,\n  GLOBAL_LOGS_API_KEY,\n  _global,\n  makeGetter,\n} from '../internal/global-utils';\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { NOOP_LOGGER_PROVIDER } from '../NoopLoggerProvider';\nimport { Logger } from '../types/Logger';\nimport { LoggerOptions } from '../types/LoggerOptions';\n\nexport class LogsAPI {\n  private static _instance?: LogsAPI;\n\n  private constructor() {}\n\n  public static getInstance(): LogsAPI {\n    if (!this._instance) {\n      this._instance = new LogsAPI();\n    }\n\n    return this._instance;\n  }\n\n  public setGlobalLoggerProvider(provider: LoggerProvider): LoggerProvider {\n    if (_global[GLOBAL_LOGS_API_KEY]) {\n      return this.getLoggerProvider();\n    }\n\n    _global[GLOBAL_LOGS_API_KEY] = makeGetter<LoggerProvider>(\n      API_BACKWARDS_COMPATIBILITY_VERSION,\n      provider,\n      NOOP_LOGGER_PROVIDER\n    );\n\n    return provider;\n  }\n\n  /**\n   * Returns the global logger provider.\n   *\n   * @returns LoggerProvider\n   */\n  public getLoggerProvider(): LoggerProvider {\n    return (\n      _global[GLOBAL_LOGS_API_KEY]?.(API_BACKWARDS_COMPATIBILITY_VERSION) ??\n      NOOP_LOGGER_PROVIDER\n    );\n  }\n\n  /**\n   * Returns a logger from the global logger provider.\n   *\n   * @returns Logger\n   */\n  public getLogger(\n    name: string,\n    version?: string,\n    options?: LoggerOptions\n  ): Logger {\n    return this.getLoggerProvider().getLogger(name, version, options);\n  }\n\n  /** Remove the global logger provider */\n  public disable(): void {\n    delete _global[GLOBAL_LOGS_API_KEY];\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './types/Logger';\nexport * from './types/LoggerProvider';\nexport * from './types/LogRecord';\nexport * from './types/LoggerOptions';\nexport * from './types/AnyValue';\nexport * from './NoopLogger';\nexport * from './NoopLoggerProvider';\n\nimport { LogsAPI } from './api/logs';\nexport const logs = LogsAPI.getInstance();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider, MeterProvider } from '@opentelemetry/api';\nimport { Instrumentation } from './types';\nimport { LoggerProvider } from '@opentelemetry/api-logs';\n\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nexport function enableInstrumentations(\n  instrumentations: Instrumentation[],\n  tracerProvider?: TracerProvider,\n  meterProvider?: MeterProvider,\n  loggerProvider?: LoggerProvider\n): void {\n  for (let i = 0, j = instrumentations.length; i < j; i++) {\n    const instrumentation = instrumentations[i];\n    if (tracerProvider) {\n      instrumentation.setTracerProvider(tracerProvider);\n    }\n    if (meterProvider) {\n      instrumentation.setMeterProvider(meterProvider);\n    }\n    if (loggerProvider && instrumentation.setLoggerProvider) {\n      instrumentation.setLoggerProvider(loggerProvider);\n    }\n    // instrumentations have been already enabled during creation\n    // so enable only if user prevented that by setting enabled to false\n    // this is to prevent double enabling but when calling register all\n    // instrumentations should be now enabled\n    if (!instrumentation.getConfig().enabled) {\n      instrumentation.enable();\n    }\n  }\n}\n\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nexport function disableInstrumentations(\n  instrumentations: Instrumentation[]\n): void {\n  instrumentations.forEach(instrumentation => instrumentation.disable());\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trace, metrics } from '@opentelemetry/api';\nimport { logs } from '@opentelemetry/api-logs';\nimport {\n  disableInstrumentations,\n  enableInstrumentations,\n} from './autoLoaderUtils';\nimport { AutoLoaderOptions } from './types_internal';\n\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nexport function registerInstrumentations(\n  options: AutoLoaderOptions\n): () => void {\n  const tracerProvider = options.tracerProvider || trace.getTracerProvider();\n  const meterProvider = options.meterProvider || metrics.getMeterProvider();\n  const loggerProvider = options.loggerProvider || logs.getLoggerProvider();\n  const instrumentations = options.instrumentations?.flat() ?? [];\n\n  enableInstrumentations(\n    instrumentations,\n    tracerProvider,\n    meterProvider,\n    loggerProvider\n  );\n\n  return () => {\n    disableInstrumentations(instrumentations);\n  };\n}\n","'use strict'\n\nfunction isFunction (funktion) {\n  return typeof funktion === 'function'\n}\n\n// Default to complaining loudly when things don't go according to plan.\nvar logger = console.error.bind(console)\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty (obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name)\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  })\n}\n\n// Keep initialization idempotent.\nfunction shimmer (options) {\n  if (options && options.logger) {\n    if (!isFunction(options.logger)) logger(\"new logger isn't a function, not replacing\")\n    else logger = options.logger\n  }\n}\n\nfunction wrap (nodule, name, wrapper) {\n  if (!nodule || !nodule[name]) {\n    logger('no original function ' + name + ' to wrap')\n    return\n  }\n\n  if (!wrapper) {\n    logger('no wrapper function')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!isFunction(nodule[name]) || !isFunction(wrapper)) {\n    logger('original object and wrapper must be functions')\n    return\n  }\n\n  var original = nodule[name]\n  var wrapped = wrapper(original, name)\n\n  defineProperty(wrapped, '__original', original)\n  defineProperty(wrapped, '__unwrap', function () {\n    if (nodule[name] === wrapped) defineProperty(nodule, name, original)\n  })\n  defineProperty(wrapped, '__wrapped', true)\n\n  defineProperty(nodule, name, wrapped)\n  return wrapped\n}\n\nfunction massWrap (nodules, names, wrapper) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to wrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      wrap(nodule, name, wrapper)\n    })\n  })\n}\n\nfunction unwrap (nodule, name) {\n  if (!nodule || !nodule[name]) {\n    logger('no function to unwrap.')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!nodule[name].__unwrap) {\n    logger('no original to unwrap to -- has ' + name + ' already been unwrapped?')\n  } else {\n    return nodule[name].__unwrap()\n  }\n}\n\nfunction massUnwrap (nodules, names) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to unwrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      unwrap(nodule, name)\n    })\n  })\n}\n\nshimmer.wrap = wrap\nshimmer.massWrap = massWrap\nshimmer.unwrap = unwrap\nshimmer.massUnwrap = massUnwrap\n\nmodule.exports = shimmer\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  DiagLogger,\n  metrics,\n  Meter,\n  MeterProvider,\n  trace,\n  Tracer,\n  TracerProvider,\n  Span,\n} from '@opentelemetry/api';\nimport { Logger, LoggerProvider, logs } from '@opentelemetry/api-logs';\nimport * as shimmer from 'shimmer';\nimport {\n  InstrumentationModuleDefinition,\n  Instrumentation,\n  InstrumentationConfig,\n  SpanCustomizationHook,\n} from './types';\n\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nexport abstract class InstrumentationAbstract<\n  ConfigType extends InstrumentationConfig = InstrumentationConfig,\n> implements Instrumentation<ConfigType>\n{\n  protected _config: ConfigType;\n\n  private _tracer: Tracer;\n  private _meter: Meter;\n  private _logger: Logger;\n  protected _diag: DiagLogger;\n\n  constructor(\n    public readonly instrumentationName: string,\n    public readonly instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    // copy config first level properties to ensure they are immutable.\n    // nested properties are not copied, thus are mutable from the outside.\n    this._config = {\n      enabled: true,\n      ...config,\n    };\n\n    this._diag = diag.createComponentLogger({\n      namespace: instrumentationName,\n    });\n\n    this._tracer = trace.getTracer(instrumentationName, instrumentationVersion);\n    this._meter = metrics.getMeter(instrumentationName, instrumentationVersion);\n    this._logger = logs.getLogger(instrumentationName, instrumentationVersion);\n    this._updateMetricInstruments();\n  }\n\n  /* Api to wrap instrumented method */\n  protected _wrap = shimmer.wrap;\n  /* Api to unwrap instrumented methods */\n  protected _unwrap = shimmer.unwrap;\n  /* Api to mass wrap instrumented method */\n  protected _massWrap = shimmer.massWrap;\n  /* Api to mass unwrap instrumented methods */\n  protected _massUnwrap = shimmer.massUnwrap;\n\n  /* Returns meter */\n  protected get meter(): Meter {\n    return this._meter;\n  }\n\n  /**\n   * Sets MeterProvider to this plugin\n   * @param meterProvider\n   */\n  public setMeterProvider(meterProvider: MeterProvider): void {\n    this._meter = meterProvider.getMeter(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n\n    this._updateMetricInstruments();\n  }\n\n  /* Returns logger */\n  protected get logger(): Logger {\n    return this._logger;\n  }\n\n  /**\n   * Sets LoggerProvider to this plugin\n   * @param loggerProvider\n   */\n  public setLoggerProvider(loggerProvider: LoggerProvider): void {\n    this._logger = loggerProvider.getLogger(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /**\n   * @experimental\n   *\n   * Get module definitions defined by {@link init}.\n   * This can be used for experimental compile-time instrumentation.\n   *\n   * @returns an array of {@link InstrumentationModuleDefinition}\n   */\n  public getModuleDefinitions(): InstrumentationModuleDefinition[] {\n    const initResult = this.init() ?? [];\n    if (!Array.isArray(initResult)) {\n      return [initResult];\n    }\n\n    return initResult;\n  }\n\n  /**\n   * Sets the new metric instruments with the current Meter.\n   */\n  protected _updateMetricInstruments(): void {\n    return;\n  }\n\n  /* Returns InstrumentationConfig */\n  public getConfig(): ConfigType {\n    return this._config;\n  }\n\n  /**\n   * Sets InstrumentationConfig to this plugin\n   * @param InstrumentationConfig\n   */\n  public setConfig(config: ConfigType): void {\n    // copy config first level properties to ensure they are immutable.\n    // nested properties are not copied, thus are mutable from the outside.\n    this._config = { ...config };\n  }\n\n  /**\n   * Sets TraceProvider to this plugin\n   * @param tracerProvider\n   */\n  public setTracerProvider(tracerProvider: TracerProvider): void {\n    this._tracer = tracerProvider.getTracer(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /* Returns tracer */\n  protected get tracer(): Tracer {\n    return this._tracer;\n  }\n\n  /* Disable plugin */\n  public abstract enable(): void;\n\n  /* Enable plugin */\n  public abstract disable(): void;\n\n  /**\n   * Init method in which plugin should define _modules and patches for\n   * methods.\n   */\n  protected abstract init():\n    | InstrumentationModuleDefinition\n    | InstrumentationModuleDefinition[]\n    | void;\n\n  /**\n   * Execute span customization hook, if configured, and log any errors.\n   * Any semantics of the trigger and info are defined by the specific instrumentation.\n   * @param hookHandler The optional hook handler which the user has configured via instrumentation config\n   * @param triggerName The name of the trigger for executing the hook for logging purposes\n   * @param span The span to which the hook should be applied\n   * @param info The info object to be passed to the hook, with useful data the hook may use\n   */\n  protected _runSpanCustomizationHook<SpanCustomizationInfoType>(\n    hookHandler: SpanCustomizationHook<SpanCustomizationInfoType> | undefined,\n    triggerName: string,\n    span: Span,\n    info: SpanCustomizationInfoType\n  ) {\n    if (!hookHandler) {\n      return;\n    }\n\n    try {\n      hookHandler(span, info);\n    } catch (e) {\n      this._diag.error(\n        `Error running span customization hook due to exception in handler`,\n        { triggerName },\n        e\n      );\n    }\n  }\n}\n","'use strict';\n\nvar os = require('os');\n\n// adapted from https://github.com/sindresorhus/os-homedir/blob/11e089f4754db38bb535e5a8416320c4446e8cfd/index.js\n\nmodule.exports = os.homedir || function homedir() {\n    var home = process.env.HOME;\n    var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n\n    if (process.platform === 'win32') {\n        return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;\n    }\n\n    if (process.platform === 'darwin') {\n        return home || (user ? '/Users/' + user : null);\n    }\n\n    if (process.platform === 'linux') {\n        return home || (process.getuid() === 0 ? '/root' : (user ? '/home/' + user : null)); // eslint-disable-line no-extra-parens\n    }\n\n    return home || null;\n};\n","module.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n","'use strict';\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into into [dir, root, basename, name, ext]\nvar splitWindowsRe =\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\n\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  return splitWindowsRe.exec(filename).slice(1);\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[1],\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3]\n  };\n};\n\n\n\n// Split a filename into [dir, root, basename, name, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3],\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n","var path = require('path');\nvar parse = path.parse || require('path-parse'); // eslint-disable-line global-require\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n","// Info: this file has been generated by Yarn with the approval of the\n// `resolve` maintainers. Bugs caused by a code located here should be\n// opened against the Yarn repository.\n\nconst path = require(`path`);\n\nmodule.exports = function (_, opts) {\n  opts = opts || {};\n\n  if (opts.forceNodeResolution || !process.versions.pnp)\n    return opts;\n\n  // It would be nice if we could throw, but that would break the transparent\n  // compatibility with packages that use `resolve` today (such as Gulp). Since\n  // it's the whole point of this patch, we don't.\n  //\n  // if (opts.packageIterator || opts.paths)\n  //   throw new Error(`The \"packageIterator\" and \"paths\" options cannot be used in PnP environments. Set \"forceNodeResolution: true\" if absolutely needed, or branch on process.versions.pnp otherwise.`);\n\n  const {findPnpApi} = require(`module`);\n\n  const runPnpResolution = (request, basedir) => {\n    // Extract the name of the package being requested (1=package name, 2=internal path)\n    const parts = request.match(/^((?:@[^/]+\\/)?[^/]+)(\\/.*)?/);\n    if (!parts)\n      throw new Error(`Assertion failed: Expected the \"resolve\" package to call the \"paths\" callback with package names only (got \"${request}\")`);\n\n    // Make sure that basedir ends with a slash\n    if (basedir.charAt(basedir.length - 1) !== `/`)\n      basedir = path.join(basedir, `/`);\n\n    const api = findPnpApi(basedir);\n    if (api === null)\n      return undefined;\n\n    // This is guaranteed to return the path to the \"package.json\" file from the given package\n    let manifestPath;\n    try {\n      manifestPath = api.resolveToUnqualified(`${parts[1]}/package.json`, basedir, {considerBuiltins: false});\n    } catch (err) {\n      return null;\n    }\n\n    if (manifestPath === null)\n      throw new Error(`Assertion failed: The resolution thinks that \"${parts[1]}\" is a Node builtin`);\n\n    // Strip the package.json to get the package folder\n    const packagePath = path.dirname(manifestPath);\n\n    // Attach the internal path to the resolved package directory\n    const unqualifiedPath = typeof parts[2] !== `undefined`\n      ? path.join(packagePath, parts[2])\n      : packagePath;\n\n    return {packagePath, unqualifiedPath};\n  };\n\n  const runPnpResolutionOnArray = (request, paths) => {\n    for (let i = 0; i < paths.length; i++) {\n      const resolution = runPnpResolution(request, paths[i]);\n      if (resolution || i === paths.length - 1) {\n        return resolution;\n      }\n    }\n\n    return null;\n  };\n\n  const originalPaths = Array.isArray(opts.paths) ? opts.paths : [];\n\n  const packageIterator = (request, basedir, getCandidates, opts) => {\n    const pathsToTest = [basedir].concat(originalPaths);\n    const resolution = runPnpResolutionOnArray(request, pathsToTest);\n    if (resolution == null)\n      return getCandidates();\n\n    return [resolution.unqualifiedPath];\n  };\n\n  const paths = (request, basedir, getNodeModulePaths, opts) => {\n    const pathsToTest = [basedir].concat(originalPaths);\n    const resolution = runPnpResolutionOnArray(request, pathsToTest);\n    if (resolution == null)\n      return getNodeModulePaths().concat(originalPaths);\n\n    // Stip the local named folder\n    let nodeModules = path.dirname(resolution.packagePath);\n\n    // Strip the scope named folder if needed\n    if (request.match(/^@[^/]+\\//))\n      nodeModules = path.dirname(nodeModules);\n\n    return [nodeModules];\n  };\n\n  // We need to keep track whether we're in `packageIterator` or not so that\n  // the code is compatible with both `resolve` 1.9+ and `resolve` 1.15+\n  let isInsideIterator = false;\n\n  if (!opts.__skipPackageIterator) {\n    opts.packageIterator = function (request, basedir, getCandidates, opts) {\n      isInsideIterator = true;\n      try {\n        return packageIterator(request, basedir, getCandidates, opts);\n      } finally {\n        isInsideIterator = false;\n      }\n    };\n  }\n\n  opts.paths = function (request, basedir, getNodeModulePaths, opts) {\n    if (isInsideIterator)\n      return getNodeModulePaths().concat(originalPaths);\n\n    return paths(request, basedir, getNodeModulePaths, opts);\n  };\n\n  return opts;\n};\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","{\n\t\"assert\": true,\n\t\"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"assert/strict\": \">= 15\",\n\t\"node:assert/strict\": \">= 16\",\n\t\"async_hooks\": \">= 8\",\n\t\"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"buffer_ieee754\": \">= 0.5 && < 0.9.7\",\n\t\"buffer\": true,\n\t\"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"child_process\": true,\n\t\"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"cluster\": \">= 0.5\",\n\t\"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"console\": true,\n\t\"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"constants\": true,\n\t\"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"crypto\": true,\n\t\"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_debug_agent\": \">= 1 && < 8\",\n\t\"_debugger\": \"< 8\",\n\t\"dgram\": true,\n\t\"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"diagnostics_channel\": [\">= 14.17 && < 15\", \">= 15.1\"],\n\t\"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns\": true,\n\t\"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns/promises\": \">= 15\",\n\t\"node:dns/promises\": \">= 16\",\n\t\"domain\": \">= 0.7.12\",\n\t\"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"events\": true,\n\t\"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"freelist\": \"< 6\",\n\t\"fs\": true,\n\t\"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n\t\"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_agent\": \">= 0.11.1\",\n\t\"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_client\": \">= 0.11.1\",\n\t\"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_common\": \">= 0.11.1\",\n\t\"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_incoming\": \">= 0.11.1\",\n\t\"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_outgoing\": \">= 0.11.1\",\n\t\"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_server\": \">= 0.11.1\",\n\t\"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http\": true,\n\t\"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http2\": \">= 8.8\",\n\t\"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"https\": true,\n\t\"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector\": \">= 8\",\n\t\"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector/promises\": [\">= 19\"],\n\t\"node:inspector/promises\": [\">= 19\"],\n\t\"_linklist\": \"< 8\",\n\t\"module\": true,\n\t\"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"net\": true,\n\t\"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n\t\"os\": true,\n\t\"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path\": true,\n\t\"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path/posix\": \">= 15.3\",\n\t\"node:path/posix\": \">= 16\",\n\t\"path/win32\": \">= 15.3\",\n\t\"node:path/win32\": \">= 16\",\n\t\"perf_hooks\": \">= 8.5\",\n\t\"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"process\": \">= 1\",\n\t\"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"punycode\": \">= 0.5\",\n\t\"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"querystring\": true,\n\t\"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline\": true,\n\t\"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline/promises\": \">= 17\",\n\t\"node:readline/promises\": \">= 17\",\n\t\"repl\": true,\n\t\"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node:sea\": [\">= 20.12 && < 21\", \">= 21.7\"],\n\t\"smalloc\": \">= 0.11.5 && < 3\",\n\t\"_stream_duplex\": \">= 0.9.4\",\n\t\"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_transform\": \">= 0.9.4\",\n\t\"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_wrap\": \">= 1.4.1\",\n\t\"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_passthrough\": \">= 0.9.4\",\n\t\"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_readable\": \">= 0.9.4\",\n\t\"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_writable\": \">= 0.9.4\",\n\t\"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream\": true,\n\t\"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream/consumers\": \">= 16.7\",\n\t\"node:stream/consumers\": \">= 16.7\",\n\t\"stream/promises\": \">= 15\",\n\t\"node:stream/promises\": \">= 16\",\n\t\"stream/web\": \">= 16.5\",\n\t\"node:stream/web\": \">= 16.5\",\n\t\"string_decoder\": true,\n\t\"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"sys\": [\">= 0.4 && < 0.7\", \">= 0.8\"],\n\t\"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"test/reporters\": \">= 19.9 && < 20.2\",\n\t\"node:test/reporters\": [\">= 18.17 && < 19\", \">= 19.9\", \">= 20\"],\n\t\"test/mock_loader\": \">= 22.3 && < 22.7\",\n\t\"node:test/mock_loader\": \">= 22.3 && < 22.7\",\n\t\"node:test\": [\">= 16.17 && < 17\", \">= 18\"],\n\t\"timers\": true,\n\t\"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"timers/promises\": \">= 15\",\n\t\"node:timers/promises\": \">= 16\",\n\t\"_tls_common\": \">= 0.11.13\",\n\t\"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_tls_legacy\": \">= 0.11.3 && < 10\",\n\t\"_tls_wrap\": \">= 0.11.3\",\n\t\"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tls\": true,\n\t\"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"trace_events\": \">= 10\",\n\t\"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tty\": true,\n\t\"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"url\": true,\n\t\"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util\": true,\n\t\"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util/types\": \">= 15.3\",\n\t\"node:util/types\": \">= 16\",\n\t\"v8/tools/arguments\": \">= 10 && < 12\",\n\t\"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8\": \">= 1\",\n\t\"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"vm\": true,\n\t\"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"wasi\": [\">= 13.4 && < 13.5\", \">= 18.17 && < 19\", \">= 20\"],\n\t\"node:wasi\": [\">= 18.17 && < 19\", \">= 20\"],\n\t\"worker_threads\": \">= 11.7\",\n\t\"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"zlib\": \">= 0.5\",\n\t\"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n}\n","'use strict';\n\nvar hasOwn = require('hasown');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn hasOwn(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n","var fs = require('fs');\nvar getHomedir = require('./homedir');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\nvar isCore = require('is-core-module');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultRealpath = function realpath(x, cb) {\n    realpathFS(x, function (realpathErr, realPath) {\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\n        else cb(null, realpathErr ? x : realPath);\n    });\n};\n\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n    if (opts && opts.preserveSymlinks === false) {\n        realpath(x, cb);\n    } else {\n        cb(null, x);\n    }\n};\n\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\n    readFile(pkgfile, function (readFileErr, body) {\n        if (readFileErr) cb(readFileErr);\n        else {\n            try {\n                var pkg = JSON.parse(body);\n                cb(null, pkg);\n            } catch (jsonErr) {\n                cb(null);\n            }\n        }\n    });\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n    var realpath = opts.realpath || defaultRealpath;\n    var readPackage = opts.readPackage || defaultReadPackage;\n    if (opts.readFile && opts.readPackage) {\n        var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\n        return process.nextTick(function () {\n            cb(conflictErr);\n        });\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    maybeRealpath(\n        realpath,\n        absoluteStart,\n        opts,\n        function (err, realStart) {\n            if (err) cb(err);\n            else init(realStart);\n        }\n    );\n\n    var res;\n    function init(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else if (includeCoreModules && isCore(x)) {\n            return cb(null, x);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) {\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realN, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) {\n                maybeRealpath(realpath, d, opts, function (err, realD) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realD, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                // on err, ex is false\n                if (!ex) return loadpkg(path.dirname(dir), cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n                    cb(null, pkg, dir);\n                });\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return cb(unwrapErr);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                if (err) return cb(err);\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) return cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return cb(mainError);\n                        }\n                        if (pkg.main === '.' || pkg.main === './') {\n                            pkg.main = 'index';\n                        }\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                            if (err) return cb(err);\n                            if (m) return cb(null, m, pkg);\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                            var dir = path.resolve(x, pkg.main);\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                                if (err) return cb(err);\n                                if (n) return cb(null, n, pkg);\n                                loadAsFile(path.join(x, 'index'), pkg, cb);\n                            });\n                        });\n                        return;\n                    }\n\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\n                });\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(path.dirname(dir), isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            loadAsFile(dir, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(dir, opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        processDirs(\n            cb,\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\n        );\n    }\n};\n","{\n\t\"assert\": true,\n\t\"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"assert/strict\": \">= 15\",\n\t\"node:assert/strict\": \">= 16\",\n\t\"async_hooks\": \">= 8\",\n\t\"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"buffer_ieee754\": \">= 0.5 && < 0.9.7\",\n\t\"buffer\": true,\n\t\"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"child_process\": true,\n\t\"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"cluster\": \">= 0.5\",\n\t\"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"console\": true,\n\t\"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"constants\": true,\n\t\"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"crypto\": true,\n\t\"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_debug_agent\": \">= 1 && < 8\",\n\t\"_debugger\": \"< 8\",\n\t\"dgram\": true,\n\t\"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"diagnostics_channel\": [\">= 14.17 && < 15\", \">= 15.1\"],\n\t\"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns\": true,\n\t\"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns/promises\": \">= 15\",\n\t\"node:dns/promises\": \">= 16\",\n\t\"domain\": \">= 0.7.12\",\n\t\"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"events\": true,\n\t\"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"freelist\": \"< 6\",\n\t\"fs\": true,\n\t\"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n\t\"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_agent\": \">= 0.11.1\",\n\t\"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_client\": \">= 0.11.1\",\n\t\"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_common\": \">= 0.11.1\",\n\t\"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_incoming\": \">= 0.11.1\",\n\t\"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_outgoing\": \">= 0.11.1\",\n\t\"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_server\": \">= 0.11.1\",\n\t\"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http\": true,\n\t\"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http2\": \">= 8.8\",\n\t\"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"https\": true,\n\t\"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector\": \">= 8\",\n\t\"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector/promises\": [\">= 19\"],\n\t\"node:inspector/promises\": [\">= 19\"],\n\t\"_linklist\": \"< 8\",\n\t\"module\": true,\n\t\"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"net\": true,\n\t\"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n\t\"os\": true,\n\t\"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path\": true,\n\t\"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path/posix\": \">= 15.3\",\n\t\"node:path/posix\": \">= 16\",\n\t\"path/win32\": \">= 15.3\",\n\t\"node:path/win32\": \">= 16\",\n\t\"perf_hooks\": \">= 8.5\",\n\t\"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"process\": \">= 1\",\n\t\"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"punycode\": \">= 0.5\",\n\t\"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"querystring\": true,\n\t\"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline\": true,\n\t\"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline/promises\": \">= 17\",\n\t\"node:readline/promises\": \">= 17\",\n\t\"repl\": true,\n\t\"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"smalloc\": \">= 0.11.5 && < 3\",\n\t\"_stream_duplex\": \">= 0.9.4\",\n\t\"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_transform\": \">= 0.9.4\",\n\t\"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_wrap\": \">= 1.4.1\",\n\t\"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_passthrough\": \">= 0.9.4\",\n\t\"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_readable\": \">= 0.9.4\",\n\t\"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_writable\": \">= 0.9.4\",\n\t\"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream\": true,\n\t\"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream/consumers\": \">= 16.7\",\n\t\"node:stream/consumers\": \">= 16.7\",\n\t\"stream/promises\": \">= 15\",\n\t\"node:stream/promises\": \">= 16\",\n\t\"stream/web\": \">= 16.5\",\n\t\"node:stream/web\": \">= 16.5\",\n\t\"string_decoder\": true,\n\t\"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"sys\": [\">= 0.4 && < 0.7\", \">= 0.8\"],\n\t\"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"test/reporters\": \">= 19.9 && < 20.2\",\n\t\"node:test/reporters\": [\">= 18.17 && < 19\", \">= 19.9\", \">= 20\"],\n\t\"node:test\": [\">= 16.17 && < 17\", \">= 18\"],\n\t\"timers\": true,\n\t\"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"timers/promises\": \">= 15\",\n\t\"node:timers/promises\": \">= 16\",\n\t\"_tls_common\": \">= 0.11.13\",\n\t\"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_tls_legacy\": \">= 0.11.3 && < 10\",\n\t\"_tls_wrap\": \">= 0.11.3\",\n\t\"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tls\": true,\n\t\"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"trace_events\": \">= 10\",\n\t\"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tty\": true,\n\t\"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"url\": true,\n\t\"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util\": true,\n\t\"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util/types\": \">= 15.3\",\n\t\"node:util/types\": \">= 16\",\n\t\"v8/tools/arguments\": \">= 10 && < 12\",\n\t\"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8\": \">= 1\",\n\t\"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"vm\": true,\n\t\"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"wasi\": [\">= 13.4 && < 13.5\", \">= 18.17 && < 19\", \">= 20\"],\n\t\"node:wasi\": [\">= 18.17 && < 19\", \">= 20\"],\n\t\"worker_threads\": \">= 11.7\",\n\t\"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"zlib\": \">= 0.5\",\n\t\"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n}\n","'use strict';\n\nvar isCoreModule = require('is-core-module');\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = isCoreModule(mod);\n    }\n}\nmodule.exports = core;\n","var isCoreModule = require('is-core-module');\n\nmodule.exports = function isCore(x) {\n    return isCoreModule(x);\n};\n","var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar getHomedir = require('./homedir');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && (stat.isFile() || stat.isFIFO());\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    var body = readFileSync(pkgfile);\n    try {\n        var pkg = JSON.parse(body);\n        return pkg;\n    } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg = readPackageSync(readFileSync, pkgfile);\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n","var async = require('./lib/async');\nasync.core = require('./lib/core');\nasync.isCore = require('./lib/is-core');\nasync.sync = require('./lib/sync');\n\nmodule.exports = async;\n","'use strict'\n\nvar path = require('path')\n\nmodule.exports = function (file) {\n  var segments = file.split(path.sep)\n  var index = segments.lastIndexOf('node_modules')\n  if (index === -1) return\n  if (!segments[index + 1]) return\n  var scoped = segments[index + 1][0] === '@'\n  var name = scoped ? segments[index + 1] + '/' + segments[index + 2] : segments[index + 1]\n  var offset = scoped ? 3 : 2\n  return {\n    name: name,\n    basedir: segments.slice(0, index + offset).join(path.sep),\n    path: segments.slice(index + offset).join(path.sep)\n  }\n}\n","{\n  \"name\": \"require-in-the-middle\",\n  \"version\": \"7.4.0\",\n  \"description\": \"Module to hook into the Node.js require function\",\n  \"main\": \"index.js\",\n  \"types\": \"types/index.d.ts\",\n  \"dependencies\": {\n    \"debug\": \"^4.3.5\",\n    \"module-details-from-path\": \"^1.0.3\",\n    \"resolve\": \"^1.22.8\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.9.0\",\n    \"@babel/preset-env\": \"^7.9.5\",\n    \"@babel/preset-typescript\": \"^7.9.0\",\n    \"@babel/register\": \"^7.9.0\",\n    \"ipp-printer\": \"^1.0.0\",\n    \"patterns\": \"^1.0.3\",\n    \"roundround\": \"^0.2.0\",\n    \"semver\": \"^6.3.0\",\n    \"standard\": \"^14.3.1\",\n    \"tape\": \"^4.11.0\"\n  },\n  \"scripts\": {\n    \"test\": \"npm run test:lint && npm run test:tape && npm run test:babel\",\n    \"test:lint\": \"standard\",\n    \"test:tape\": \"tape test/*.js\",\n    \"test:babel\": \"node test/babel/babel-register.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/elastic/require-in-the-middle.git\"\n  },\n  \"keywords\": [\n    \"require\",\n    \"hook\",\n    \"shim\",\n    \"shimmer\",\n    \"shimming\",\n    \"patch\",\n    \"monkey\",\n    \"monkeypatch\",\n    \"module\",\n    \"load\"\n  ],\n  \"files\": [\n    \"types\"\n  ],\n  \"author\": \"Thomas Watson Steen <w@tson.dk> (https://twitter.com/wa7son)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/elastic/require-in-the-middle/issues\"\n  },\n  \"homepage\": \"https://github.com/elastic/require-in-the-middle#readme\",\n  \"engines\": {\n    \"node\": \">=8.6.0\"\n  }\n}\n","'use strict'\n\nconst path = require('path')\nconst Module = require('module')\nconst resolve = require('resolve')\nconst debug = require('debug')('require-in-the-middle')\nconst moduleDetailsFromPath = require('module-details-from-path')\n\n// Using the default export is discouraged, but kept for backward compatibility.\n// Use this instead:\n//    const { Hook } = require('require-in-the-middle')\nmodule.exports = Hook\nmodule.exports.Hook = Hook\n\n/**\n * Is the given module a \"core\" module?\n * https://nodejs.org/api/modules.html#core-modules\n *\n * @type {(moduleName: string) => boolean}\n */\nlet isCore\nif (Module.isBuiltin) { // Added in node v18.6.0, v16.17.0\n  isCore = Module.isBuiltin\n} else {\n  const [major, minor] = process.versions.node.split('.').map(Number)\n  if (major === 8 && minor < 8) {\n    // For node versions `[8.0, 8.8)` the \"http2\" module was built-in but\n    // behind the `--expose-http2` flag. `resolve` only considers unflagged\n    // modules to be core: https://github.com/browserify/resolve/issues/139\n    // However, for `ExportsCache` to work for \"http2\" we need it to be\n    // considered core.\n    isCore = moduleName => {\n      if (moduleName === 'http2') {\n        return true\n      }\n      // Prefer `resolve.core` lookup to `resolve.isCore(moduleName)` because\n      // the latter is doing version range matches for every call.\n      return !!resolve.core[moduleName]\n    }\n  } else {\n    isCore = moduleName => {\n      // Prefer `resolve.core` lookup to `resolve.isCore(moduleName)` because\n      // the latter is doing version range matches for every call.\n      return !!resolve.core[moduleName]\n    }\n  }\n}\n\n// 'foo/bar.js' or 'foo/bar/index.js' => 'foo/bar'\nconst normalize = /([/\\\\]index)?(\\.js)?$/\n\n// Cache `onrequire`-patched exports for modules.\n//\n// Exports for built-in (a.k.a. \"core\") modules are stored in an internal Map.\n//\n// Exports for non-core modules are stored on a private field on the `Module`\n// object in `require.cache`. This allows users to delete from `require.cache`\n// to trigger a re-load (and re-run of the hook's `onrequire`) of a module the\n// next time it is required.\n// https://nodejs.org/docs/latest/api/all.html#all_modules_requirecache\n//\n// In some special cases -- e.g. some other `require()` hook swapping out\n// `Module._cache` like `@babel/register` -- a non-core module won't be in\n// `require.cache`. In that case this falls back to caching on the internal Map.\nclass ExportsCache {\n  constructor () {\n    this._localCache = new Map() // <module filename or id> -> <exports>\n    this._kRitmExports = Symbol('RitmExports')\n  }\n\n  has (filename, isBuiltin) {\n    if (this._localCache.has(filename)) {\n      return true\n    } else if (!isBuiltin) {\n      const mod = require.cache[filename]\n      return !!(mod && this._kRitmExports in mod)\n    } else {\n      return false\n    }\n  }\n\n  get (filename, isBuiltin) {\n    const cachedExports = this._localCache.get(filename)\n    if (cachedExports !== undefined) {\n      return cachedExports\n    } else if (!isBuiltin) {\n      const mod = require.cache[filename]\n      return (mod && mod[this._kRitmExports])\n    }\n  }\n\n  set (filename, exports, isBuiltin) {\n    if (isBuiltin) {\n      this._localCache.set(filename, exports)\n    } else if (filename in require.cache) {\n      require.cache[filename][this._kRitmExports] = exports\n    } else {\n      debug('non-core module is unexpectedly not in require.cache: \"%s\"', filename)\n      this._localCache.set(filename, exports)\n    }\n  }\n}\n\nfunction Hook (modules, options, onrequire) {\n  if ((this instanceof Hook) === false) return new Hook(modules, options, onrequire)\n  if (typeof modules === 'function') {\n    onrequire = modules\n    modules = null\n    options = null\n  } else if (typeof options === 'function') {\n    onrequire = options\n    options = null\n  }\n\n  if (typeof Module._resolveFilename !== 'function') {\n    console.error('Error: Expected Module._resolveFilename to be a function (was: %s) - aborting!', typeof Module._resolveFilename)\n    console.error('Please report this error as an issue related to Node.js %s at %s', process.version, require('./package.json').bugs.url)\n    return\n  }\n\n  this._cache = new ExportsCache()\n\n  this._unhooked = false\n  this._origRequire = Module.prototype.require\n\n  const self = this\n  const patching = new Set()\n  const internals = options ? options.internals === true : false\n  const hasWhitelist = Array.isArray(modules)\n\n  debug('registering require hook')\n\n  this._require = Module.prototype.require = function (id) {\n    if (self._unhooked === true) {\n      // if the patched require function could not be removed because\n      // someone else patched it after it was patched here, we just\n      // abort and pass the request onwards to the original require\n      debug('ignoring require call - module is soft-unhooked')\n      return self._origRequire.apply(this, arguments)\n    }\n\n    return patchedRequire.call(this, arguments, false)\n  }\n\n  if (typeof process.getBuiltinModule === 'function') {\n    this._origGetBuiltinModule = process.getBuiltinModule\n    this._getBuiltinModule = process.getBuiltinModule = function (id) {\n      if (self._unhooked === true) {\n        // if the patched process.getBuiltinModule function could not be removed because\n        // someone else patched it after it was patched here, we just abort and pass the\n        // request onwards to the original process.getBuiltinModule\n        debug('ignoring process.getBuiltinModule call - module is soft-unhooked')\n        return self._origGetBuiltinModule.apply(this, arguments)\n      }\n\n      return patchedRequire.call(this, arguments, true)\n    }\n  }\n\n  // Preserve the original require/process.getBuiltinModule arguments in `args`\n  function patchedRequire (args, coreOnly) {\n    const id = args[0]\n    const core = isCore(id)\n    let filename // the string used for caching\n    if (core) {\n      filename = id\n      // If this is a builtin module that can be identified both as 'foo' and\n      // 'node:foo', then prefer 'foo' as the caching key.\n      if (id.startsWith('node:')) {\n        const idWithoutPrefix = id.slice(5)\n        if (isCore(idWithoutPrefix)) {\n          filename = idWithoutPrefix\n        }\n      }\n    } else if (coreOnly) {\n      // `coreOnly` is `true` if this was a call to `process.getBuiltinModule`, in which case\n      // we don't want to return anything if the requested `id` isn't a core module. Falling\n      // back to default behaviour, which at the time of this wrting is simply returning `undefined`\n      debug('call to process.getBuiltinModule with unknown built-in id')\n      return self._origGetBuiltinModule.apply(this, args)\n    } else {\n      try {\n        filename = Module._resolveFilename(id, this)\n      } catch (resolveErr) {\n        // If someone *else* monkey-patches before this monkey-patch, then that\n        // code might expect `require(someId)` to get through so it can be\n        // handled, even if `someId` cannot be resolved to a filename. In this\n        // case, instead of throwing we defer to the underlying `require`.\n        //\n        // For example the Azure Functions Node.js worker module does this,\n        // where `@azure/functions-core` resolves to an internal object.\n        // https://github.com/Azure/azure-functions-nodejs-worker/blob/v3.5.2/src/setupCoreModule.ts#L46-L54\n        debug('Module._resolveFilename(\"%s\") threw %j, calling original Module.require', id, resolveErr.message)\n        return self._origRequire.apply(this, args)\n      }\n    }\n\n    let moduleName, basedir\n\n    debug('processing %s module require(\\'%s\\'): %s', core === true ? 'core' : 'non-core', id, filename)\n\n    // return known patched modules immediately\n    if (self._cache.has(filename, core) === true) {\n      debug('returning already patched cached module: %s', filename)\n      return self._cache.get(filename, core)\n    }\n\n    // Check if this module has a patcher in-progress already.\n    // Otherwise, mark this module as patching in-progress.\n    const isPatching = patching.has(filename)\n    if (isPatching === false) {\n      patching.add(filename)\n    }\n\n    const exports = coreOnly\n      ? self._origGetBuiltinModule.apply(this, args)\n      : self._origRequire.apply(this, args)\n\n    // If it's already patched, just return it as-is.\n    if (isPatching === true) {\n      debug('module is in the process of being patched already - ignoring: %s', filename)\n      return exports\n    }\n\n    // The module has already been loaded,\n    // so the patching mark can be cleaned up.\n    patching.delete(filename)\n\n    if (core === true) {\n      if (hasWhitelist === true && modules.includes(filename) === false) {\n        debug('ignoring core module not on whitelist: %s', filename)\n        return exports // abort if module name isn't on whitelist\n      }\n      moduleName = filename\n    } else if (hasWhitelist === true && modules.includes(filename)) {\n      // whitelist includes the absolute path to the file including extension\n      const parsedPath = path.parse(filename)\n      moduleName = parsedPath.name\n      basedir = parsedPath.dir\n    } else {\n      const stat = moduleDetailsFromPath(filename)\n      if (stat === undefined) {\n        debug('could not parse filename: %s', filename)\n        return exports // abort if filename could not be parsed\n      }\n      moduleName = stat.name\n      basedir = stat.basedir\n\n      // Ex: require('foo/lib/../bar.js')\n      // moduleName = 'foo'\n      // fullModuleName = 'foo/bar'\n      const fullModuleName = resolveModuleName(stat)\n\n      debug('resolved filename to module: %s (id: %s, resolved: %s, basedir: %s)', moduleName, id, fullModuleName, basedir)\n\n      let matchFound = false\n      if (hasWhitelist) {\n        if (!id.startsWith('.') && modules.includes(id)) {\n          // Not starting with '.' means `id` is identifying a module path,\n          // as opposed to a local file path. (Note: I'm not sure about\n          // absolute paths, but those are handled above.)\n          // If this `id` is in `modules`, then this could be a match to an\n          // package \"exports\" entry point that wouldn't otherwise match below.\n          moduleName = id\n          matchFound = true\n        }\n\n        // abort if module name isn't on whitelist\n        if (!modules.includes(moduleName) && !modules.includes(fullModuleName)) {\n          return exports\n        }\n\n        if (modules.includes(fullModuleName) && fullModuleName !== moduleName) {\n          // if we get to this point, it means that we're requiring a whitelisted sub-module\n          moduleName = fullModuleName\n          matchFound = true\n        }\n      }\n\n      if (!matchFound) {\n        // figure out if this is the main module file, or a file inside the module\n        let res\n        try {\n          res = resolve.sync(moduleName, { basedir })\n        } catch (e) {\n          debug('could not resolve module: %s', moduleName)\n          self._cache.set(filename, exports, core)\n          return exports // abort if module could not be resolved (e.g. no main in package.json and no index.js file)\n        }\n\n        if (res !== filename) {\n          // this is a module-internal file\n          if (internals === true) {\n            // use the module-relative path to the file, prefixed by original module name\n            moduleName = moduleName + path.sep + path.relative(basedir, filename)\n            debug('preparing to process require of internal file: %s', moduleName)\n          } else {\n            debug('ignoring require of non-main module file: %s', res)\n            self._cache.set(filename, exports, core)\n            return exports // abort if not main module file\n          }\n        }\n      }\n    }\n\n    // ensure that the cache entry is assigned a value before calling\n    // onrequire, in case calling onrequire requires the same module.\n    self._cache.set(filename, exports, core)\n    debug('calling require hook: %s', moduleName)\n    const patchedExports = onrequire(exports, moduleName, basedir)\n    self._cache.set(filename, patchedExports, core)\n\n    debug('returning module: %s', moduleName)\n    return patchedExports\n  }\n}\n\nHook.prototype.unhook = function () {\n  this._unhooked = true\n\n  if (this._require === Module.prototype.require) {\n    Module.prototype.require = this._origRequire\n    debug('require unhook successful')\n  } else {\n    debug('require unhook unsuccessful')\n  }\n\n  if (process.getBuiltinModule !== undefined) {\n    if (this._getBuiltinModule === process.getBuiltinModule) {\n      process.getBuiltinModule = this._origGetBuiltinModule\n      debug('process.getBuiltinModule unhook successful')\n    } else {\n      debug('process.getBuiltinModule unhook unsuccessful')\n    }\n  }\n}\n\nfunction resolveModuleName (stat) {\n  const normalizedPath = path.sep !== '/' ? stat.path.split(path.sep).join('/') : stat.path\n  return path.posix.join(stat.name, normalizedPath).replace(normalize, '')\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Hooked } from './RequireInTheMiddleSingleton';\n\nexport const ModuleNameSeparator = '/';\n\n/**\n * Node in a `ModuleNameTrie`\n */\nclass ModuleNameTrieNode {\n  hooks: Array<{ hook: Hooked; insertedId: number }> = [];\n  children: Map<string, ModuleNameTrieNode> = new Map();\n}\n\ntype ModuleNameTrieSearchOptions = {\n  /**\n   * Whether to return the results in insertion order\n   */\n  maintainInsertionOrder?: boolean;\n  /**\n   * Whether to return only full matches\n   */\n  fullOnly?: boolean;\n};\n\n/**\n * Trie containing nodes that represent a part of a module name (i.e. the parts separated by forward slash)\n */\nexport class ModuleNameTrie {\n  private _trie: ModuleNameTrieNode = new ModuleNameTrieNode();\n  private _counter: number = 0;\n\n  /**\n   * Insert a module hook into the trie\n   *\n   * @param {Hooked} hook Hook\n   */\n  insert(hook: Hooked) {\n    let trieNode = this._trie;\n\n    for (const moduleNamePart of hook.moduleName.split(ModuleNameSeparator)) {\n      let nextNode = trieNode.children.get(moduleNamePart);\n      if (!nextNode) {\n        nextNode = new ModuleNameTrieNode();\n        trieNode.children.set(moduleNamePart, nextNode);\n      }\n      trieNode = nextNode;\n    }\n    trieNode.hooks.push({ hook, insertedId: this._counter++ });\n  }\n\n  /**\n   * Search for matching hooks in the trie\n   *\n   * @param {string} moduleName Module name\n   * @param {boolean} maintainInsertionOrder Whether to return the results in insertion order\n   * @param {boolean} fullOnly Whether to return only full matches\n   * @returns {Hooked[]} Matching hooks\n   */\n  search(\n    moduleName: string,\n    { maintainInsertionOrder, fullOnly }: ModuleNameTrieSearchOptions = {}\n  ): Hooked[] {\n    let trieNode = this._trie;\n    const results: ModuleNameTrieNode['hooks'] = [];\n    let foundFull = true;\n\n    for (const moduleNamePart of moduleName.split(ModuleNameSeparator)) {\n      const nextNode = trieNode.children.get(moduleNamePart);\n      if (!nextNode) {\n        foundFull = false;\n        break;\n      }\n      if (!fullOnly) {\n        results.push(...nextNode.hooks);\n      }\n      trieNode = nextNode;\n    }\n\n    if (fullOnly && foundFull) {\n      results.push(...trieNode.hooks);\n    }\n\n    if (results.length === 0) {\n      return [];\n    }\n    if (results.length === 1) {\n      return [results[0].hook];\n    }\n    if (maintainInsertionOrder) {\n      results.sort((a, b) => a.insertedId - b.insertedId);\n    }\n    return results.map(({ hook }) => hook);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { OnRequireFn } from 'require-in-the-middle';\nimport { Hook } from 'require-in-the-middle';\nimport * as path from 'path';\nimport { ModuleNameTrie, ModuleNameSeparator } from './ModuleNameTrie';\n\nexport type Hooked = {\n  moduleName: string;\n  onRequire: OnRequireFn;\n};\n\n/**\n * Whether Mocha is running in this process\n * Inspired by https://github.com/AndreasPizsa/detect-mocha\n *\n * @type {boolean}\n */\nconst isMocha = [\n  'afterEach',\n  'after',\n  'beforeEach',\n  'before',\n  'describe',\n  'it',\n].every(fn => {\n  // @ts-expect-error TS7053: Element implicitly has an 'any' type\n  return typeof global[fn] === 'function';\n});\n\n/**\n * Singleton class for `require-in-the-middle`\n * Allows instrumentation plugins to patch modules with only a single `require` patch\n * WARNING: Because this class will create its own `require-in-the-middle` (RITM) instance,\n * we should minimize the number of new instances of this class.\n * Multiple instances of `@opentelemetry/instrumentation` (e.g. multiple versions) in a single process\n * will result in multiple instances of RITM, which will have an impact\n * on the performance of instrumentation hooks being applied.\n */\nexport class RequireInTheMiddleSingleton {\n  private _moduleNameTrie: ModuleNameTrie = new ModuleNameTrie();\n  private static _instance?: RequireInTheMiddleSingleton;\n\n  private constructor() {\n    this._initialize();\n  }\n\n  private _initialize() {\n    new Hook(\n      // Intercept all `require` calls; we will filter the matching ones below\n      null,\n      { internals: true },\n      (exports, name, basedir) => {\n        // For internal files on Windows, `name` will use backslash as the path separator\n        const normalizedModuleName = normalizePathSeparators(name);\n\n        const matches = this._moduleNameTrie.search(normalizedModuleName, {\n          maintainInsertionOrder: true,\n          // For core modules (e.g. `fs`), do not match on sub-paths (e.g. `fs/promises').\n          // This matches the behavior of `require-in-the-middle`.\n          // `basedir` is always `undefined` for core modules.\n          fullOnly: basedir === undefined,\n        });\n\n        for (const { onRequire } of matches) {\n          exports = onRequire(exports, name, basedir);\n        }\n\n        return exports;\n      }\n    );\n  }\n\n  /**\n   * Register a hook with `require-in-the-middle`\n   *\n   * @param {string} moduleName Module name\n   * @param {OnRequireFn} onRequire Hook function\n   * @returns {Hooked} Registered hook\n   */\n  register(moduleName: string, onRequire: OnRequireFn): Hooked {\n    const hooked = { moduleName, onRequire };\n    this._moduleNameTrie.insert(hooked);\n    return hooked;\n  }\n\n  /**\n   * Get the `RequireInTheMiddleSingleton` singleton\n   *\n   * @returns {RequireInTheMiddleSingleton} Singleton of `RequireInTheMiddleSingleton`\n   */\n  static getInstance(): RequireInTheMiddleSingleton {\n    // Mocha runs all test suites in the same process\n    // This prevents test suites from sharing a singleton\n    if (isMocha) return new RequireInTheMiddleSingleton();\n\n    return (this._instance =\n      this._instance ?? new RequireInTheMiddleSingleton());\n  }\n}\n\n/**\n * Normalize the path separators to forward slash in a module name or path\n *\n * @param {string} moduleNameOrPath Module name or path\n * @returns {string} Normalized module name or path\n */\nfunction normalizePathSeparators(moduleNameOrPath: string): string {\n  return path.sep !== ModuleNameSeparator\n    ? moduleNameOrPath.split(path.sep).join(ModuleNameSeparator)\n    : moduleNameOrPath;\n}\n","// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.\n//\n// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2021 Datadog, Inc.\n\nconst importHooks = [] // TODO should this be a Set?\nconst setters = new WeakMap()\nconst specifiers = new Map()\nconst toHook = []\n\nconst proxyHandler = {\n  set (target, name, value) {\n    return setters.get(target)[name](value)\n  },\n\n  defineProperty (target, property, descriptor) {\n    if ((!('value' in descriptor))) {\n      throw new Error('Getters/setters are not supported for exports property descriptors.')\n    }\n\n    return setters.get(target)[property](descriptor.value)\n  }\n}\n\nfunction register (name, namespace, set, specifier) {\n  specifiers.set(name, specifier)\n  setters.set(namespace, set)\n  const proxy = new Proxy(namespace, proxyHandler)\n  importHooks.forEach(hook => hook(name, proxy))\n  toHook.push([name, proxy])\n}\n\nexports.register = register\nexports.importHooks = importHooks\nexports.specifiers = specifiers\nexports.toHook = toHook\n","// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.\n//\n// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2021 Datadog, Inc.\n\nconst path = require('path')\nconst parse = require('module-details-from-path')\nconst { fileURLToPath } = require('url')\n\nconst {\n  importHooks,\n  specifiers,\n  toHook\n} = require('./lib/register')\n\nfunction addHook (hook) {\n  importHooks.push(hook)\n  toHook.forEach(([name, namespace]) => hook(name, namespace))\n}\n\nfunction removeHook (hook) {\n  const index = importHooks.indexOf(hook)\n  if (index > -1) {\n    importHooks.splice(index, 1)\n  }\n}\n\nfunction callHookFn (hookFn, namespace, name, baseDir) {\n  const newDefault = hookFn(namespace, name, baseDir)\n  if (newDefault && newDefault !== namespace) {\n    namespace.default = newDefault\n  }\n}\n\nfunction Hook (modules, options, hookFn) {\n  if ((this instanceof Hook) === false) return new Hook(modules, options, hookFn)\n  if (typeof modules === 'function') {\n    hookFn = modules\n    modules = null\n    options = null\n  } else if (typeof options === 'function') {\n    hookFn = options\n    options = null\n  }\n  const internals = options ? options.internals === true : false\n\n  this._iitmHook = (name, namespace) => {\n    const filename = name\n    const isBuiltin = name.startsWith('node:')\n    let baseDir\n\n    if (isBuiltin) {\n      name = name.replace(/^node:/, '')\n    } else {\n      if (name.startsWith('file://')) {\n        try {\n          name = fileURLToPath(name)\n        } catch (e) {}\n      }\n      const details = parse(name)\n      if (details) {\n        name = details.name\n        baseDir = details.basedir\n      }\n    }\n\n    if (modules) {\n      for (const moduleName of modules) {\n        if (moduleName === name) {\n          if (baseDir) {\n            if (internals) {\n              name = name + path.sep + path.relative(baseDir, fileURLToPath(filename))\n            } else {\n              if (!baseDir.endsWith(specifiers.get(filename))) continue\n            }\n          }\n          callHookFn(hookFn, namespace, name, baseDir)\n        }\n      }\n    } else {\n      callHookFn(hookFn, namespace, name, baseDir)\n    }\n  }\n\n  addHook(this._iitmHook)\n}\n\nHook.prototype.unhook = function () {\n  removeHook(this._iitmHook)\n}\n\nmodule.exports = Hook\nmodule.exports.Hook = Hook\nmodule.exports.addHook = addHook\nmodule.exports.removeHook = removeHook\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from './types';\n\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddle<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): T {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport async function safeExecuteInTheMiddleAsync<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): Promise<T> {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = await execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '../../types';\nimport * as path from 'path';\nimport { types as utilTypes } from 'util';\nimport { satisfies } from 'semver';\nimport { wrap, unwrap, massWrap, massUnwrap } from 'shimmer';\nimport { InstrumentationAbstract } from '../../instrumentation';\nimport {\n  RequireInTheMiddleSingleton,\n  Hooked,\n} from './RequireInTheMiddleSingleton';\nimport type { HookFn } from 'import-in-the-middle';\nimport { Hook as HookImport } from 'import-in-the-middle';\nimport {\n  InstrumentationConfig,\n  InstrumentationModuleDefinition,\n} from '../../types';\nimport { diag } from '@opentelemetry/api';\nimport type { OnRequireFn } from 'require-in-the-middle';\nimport { Hook as HookRequire } from 'require-in-the-middle';\nimport { readFileSync } from 'fs';\nimport { isWrapped } from '../../utils';\n\n/**\n * Base abstract class for instrumenting node plugins\n */\nexport abstract class InstrumentationBase<\n    ConfigType extends InstrumentationConfig = InstrumentationConfig,\n  >\n  extends InstrumentationAbstract<ConfigType>\n  implements types.Instrumentation<ConfigType>\n{\n  private _modules: InstrumentationModuleDefinition[];\n  private _hooks: (Hooked | HookRequire)[] = [];\n  private _requireInTheMiddleSingleton: RequireInTheMiddleSingleton =\n    RequireInTheMiddleSingleton.getInstance();\n  private _enabled = false;\n\n  constructor(\n    instrumentationName: string,\n    instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    super(instrumentationName, instrumentationVersion, config);\n\n    let modules = this.init();\n\n    if (modules && !Array.isArray(modules)) {\n      modules = [modules];\n    }\n\n    this._modules = (modules as InstrumentationModuleDefinition[]) || [];\n\n    if (this._modules.length === 0) {\n      diag.debug(\n        'No modules instrumentation has been defined for ' +\n          `'${this.instrumentationName}@${this.instrumentationVersion}'` +\n          ', nothing will be patched'\n      );\n    }\n\n    if (this._config.enabled) {\n      this.enable();\n    }\n  }\n\n  protected override _wrap: typeof wrap = (moduleExports, name, wrapper) => {\n    if (isWrapped(moduleExports[name])) {\n      this._unwrap(moduleExports, name);\n    }\n    if (!utilTypes.isProxy(moduleExports)) {\n      return wrap(moduleExports, name, wrapper);\n    } else {\n      const wrapped = wrap(Object.assign({}, moduleExports), name, wrapper);\n\n      return Object.defineProperty(moduleExports, name, {\n        value: wrapped,\n      });\n    }\n  };\n\n  protected override _unwrap: typeof unwrap = (moduleExports, name) => {\n    if (!utilTypes.isProxy(moduleExports)) {\n      return unwrap(moduleExports, name);\n    } else {\n      return Object.defineProperty(moduleExports, name, {\n        value: moduleExports[name],\n      });\n    }\n  };\n\n  protected override _massWrap: typeof massWrap = (\n    moduleExportsArray,\n    names,\n    wrapper\n  ) => {\n    if (!moduleExportsArray) {\n      diag.error('must provide one or more modules to patch');\n      return;\n    } else if (!Array.isArray(moduleExportsArray)) {\n      moduleExportsArray = [moduleExportsArray];\n    }\n\n    if (!(names && Array.isArray(names))) {\n      diag.error('must provide one or more functions to wrap on modules');\n      return;\n    }\n\n    moduleExportsArray.forEach(moduleExports => {\n      names.forEach(name => {\n        this._wrap(moduleExports, name, wrapper);\n      });\n    });\n  };\n\n  protected override _massUnwrap: typeof massUnwrap = (\n    moduleExportsArray,\n    names\n  ) => {\n    if (!moduleExportsArray) {\n      diag.error('must provide one or more modules to patch');\n      return;\n    } else if (!Array.isArray(moduleExportsArray)) {\n      moduleExportsArray = [moduleExportsArray];\n    }\n\n    if (!(names && Array.isArray(names))) {\n      diag.error('must provide one or more functions to wrap on modules');\n      return;\n    }\n\n    moduleExportsArray.forEach(moduleExports => {\n      names.forEach(name => {\n        this._unwrap(moduleExports, name);\n      });\n    });\n  };\n\n  private _warnOnPreloadedModules(): void {\n    this._modules.forEach((module: InstrumentationModuleDefinition) => {\n      const { name } = module;\n      try {\n        const resolvedModule = require.resolve(name);\n        if (require.cache[resolvedModule]) {\n          // Module is already cached, which means the instrumentation hook might not work\n          this._diag.warn(\n            `Module ${name} has been loaded before ${this.instrumentationName} so it might not work, please initialize it before requiring ${name}`\n          );\n        }\n      } catch {\n        // Module isn't available, we can simply skip\n      }\n    });\n  }\n\n  private _extractPackageVersion(baseDir: string): string | undefined {\n    try {\n      const json = readFileSync(path.join(baseDir, 'package.json'), {\n        encoding: 'utf8',\n      });\n      const version = JSON.parse(json).version;\n      return typeof version === 'string' ? version : undefined;\n    } catch (error) {\n      diag.warn('Failed extracting version', baseDir);\n    }\n\n    return undefined;\n  }\n\n  private _onRequire<T>(\n    module: InstrumentationModuleDefinition,\n    exports: T,\n    name: string,\n    baseDir?: string | void\n  ): T {\n    if (!baseDir) {\n      if (typeof module.patch === 'function') {\n        module.moduleExports = exports;\n        if (this._enabled) {\n          this._diag.debug(\n            'Applying instrumentation patch for nodejs core module on require hook',\n            {\n              module: module.name,\n            }\n          );\n          return module.patch(exports);\n        }\n      }\n      return exports;\n    }\n\n    const version = this._extractPackageVersion(baseDir);\n    module.moduleVersion = version;\n    if (module.name === name) {\n      // main module\n      if (\n        isSupported(module.supportedVersions, version, module.includePrerelease)\n      ) {\n        if (typeof module.patch === 'function') {\n          module.moduleExports = exports;\n          if (this._enabled) {\n            this._diag.debug(\n              'Applying instrumentation patch for module on require hook',\n              {\n                module: module.name,\n                version: module.moduleVersion,\n                baseDir,\n              }\n            );\n            return module.patch(exports, module.moduleVersion);\n          }\n        }\n      }\n      return exports;\n    }\n    // internal file\n    const files = module.files ?? [];\n    const normalizedName = path.normalize(name);\n    const supportedFileInstrumentations = files\n      .filter(f => f.name === normalizedName)\n      .filter(f =>\n        isSupported(f.supportedVersions, version, module.includePrerelease)\n      );\n    return supportedFileInstrumentations.reduce<T>((patchedExports, file) => {\n      file.moduleExports = patchedExports;\n      if (this._enabled) {\n        this._diag.debug(\n          'Applying instrumentation patch for nodejs module file on require hook',\n          {\n            module: module.name,\n            version: module.moduleVersion,\n            fileName: file.name,\n            baseDir,\n          }\n        );\n\n        // patch signature is not typed, so we cast it assuming it's correct\n        return file.patch(patchedExports, module.moduleVersion) as T;\n      }\n      return patchedExports;\n    }, exports);\n  }\n\n  public enable(): void {\n    if (this._enabled) {\n      return;\n    }\n    this._enabled = true;\n\n    // already hooked, just call patch again\n    if (this._hooks.length > 0) {\n      for (const module of this._modules) {\n        if (typeof module.patch === 'function' && module.moduleExports) {\n          this._diag.debug(\n            'Applying instrumentation patch for nodejs module on instrumentation enabled',\n            {\n              module: module.name,\n              version: module.moduleVersion,\n            }\n          );\n          module.patch(module.moduleExports, module.moduleVersion);\n        }\n        for (const file of module.files) {\n          if (file.moduleExports) {\n            this._diag.debug(\n              'Applying instrumentation patch for nodejs module file on instrumentation enabled',\n              {\n                module: module.name,\n                version: module.moduleVersion,\n                fileName: file.name,\n              }\n            );\n            file.patch(file.moduleExports, module.moduleVersion);\n          }\n        }\n      }\n      return;\n    }\n\n    this._warnOnPreloadedModules();\n    for (const module of this._modules) {\n      const hookFn: HookFn = (exports, name, baseDir) => {\n        return this._onRequire<typeof exports>(module, exports, name, baseDir);\n      };\n      const onRequire: OnRequireFn = (exports, name, baseDir) => {\n        return this._onRequire<typeof exports>(module, exports, name, baseDir);\n      };\n\n      // `RequireInTheMiddleSingleton` does not support absolute paths.\n      // For an absolute paths, we must create a separate instance of the\n      // require-in-the-middle `Hook`.\n      const hook = path.isAbsolute(module.name)\n        ? new HookRequire([module.name], { internals: true }, onRequire)\n        : this._requireInTheMiddleSingleton.register(module.name, onRequire);\n\n      this._hooks.push(hook);\n      const esmHook = new HookImport(\n        [module.name],\n        { internals: false },\n        <HookFn>hookFn\n      );\n      this._hooks.push(esmHook);\n    }\n  }\n\n  public disable(): void {\n    if (!this._enabled) {\n      return;\n    }\n    this._enabled = false;\n\n    for (const module of this._modules) {\n      if (typeof module.unpatch === 'function' && module.moduleExports) {\n        this._diag.debug(\n          'Removing instrumentation patch for nodejs module on instrumentation disabled',\n          {\n            module: module.name,\n            version: module.moduleVersion,\n          }\n        );\n        module.unpatch(module.moduleExports, module.moduleVersion);\n      }\n      for (const file of module.files) {\n        if (file.moduleExports) {\n          this._diag.debug(\n            'Removing instrumentation patch for nodejs module file on instrumentation disabled',\n            {\n              module: module.name,\n              version: module.moduleVersion,\n              fileName: file.name,\n            }\n          );\n          file.unpatch(file.moduleExports, module.moduleVersion);\n        }\n      }\n    }\n  }\n\n  public isEnabled(): boolean {\n    return this._enabled;\n  }\n}\n\nfunction isSupported(\n  supportedVersions: string[],\n  version?: string,\n  includePrerelease?: boolean\n): boolean {\n  if (typeof version === 'undefined') {\n    // If we don't have the version, accept the wildcard case only\n    return supportedVersions.includes('*');\n  }\n\n  return supportedVersions.some(supportedVersion => {\n    return satisfies(version, supportedVersion, { includePrerelease });\n  });\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { normalize } from 'path';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { InstrumentationBase } from './instrumentation';\nexport { normalize } from './normalize';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { InstrumentationBase, normalize } from './node';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  InstrumentationModuleDefinition,\n  InstrumentationModuleFile,\n} from './types';\n\nexport class InstrumentationNodeModuleDefinition\n  implements InstrumentationModuleDefinition\n{\n  files: InstrumentationModuleFile[];\n  constructor(\n    public name: string,\n    public supportedVersions: string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public patch?: (exports: any, moduleVersion?: string) => any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public unpatch?: (exports: any, moduleVersion?: string) => void,\n    files?: InstrumentationModuleFile[]\n  ) {\n    this.files = files || [];\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationModuleFile } from './types';\nimport { normalize } from './platform/index';\n\nexport class InstrumentationNodeModuleFile\n  implements InstrumentationModuleFile\n{\n  public name: string;\n  constructor(\n    name: string,\n    public supportedVersions: string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public patch: (moduleExports: any, moduleVersion?: string) => any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public unpatch: (moduleExports?: any, moduleVersion?: string) => void\n  ) {\n    this.name = normalize(name);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider, MeterProvider, Span } from '@opentelemetry/api';\nimport { LoggerProvider } from '@opentelemetry/api-logs';\n\n/** Interface Instrumentation to apply patch. */\nexport interface Instrumentation<\n  ConfigType extends InstrumentationConfig = InstrumentationConfig,\n> {\n  /** Instrumentation Name  */\n  instrumentationName: string;\n\n  /** Instrumentation Version  */\n  instrumentationVersion: string;\n\n  /**\n   * Instrumentation Description - please describe all useful information\n   * as Instrumentation might patch different version of different modules,\n   * or support different browsers etc.\n   */\n  instrumentationDescription?: string;\n\n  /** Method to disable the instrumentation  */\n  disable(): void;\n\n  /** Method to enable the instrumentation  */\n  enable(): void;\n\n  /** Method to set tracer provider  */\n  setTracerProvider(tracerProvider: TracerProvider): void;\n\n  /** Method to set meter provider  */\n  setMeterProvider(meterProvider: MeterProvider): void;\n\n  /** Method to set logger provider  */\n  setLoggerProvider?(loggerProvider: LoggerProvider): void;\n\n  /** Method to set instrumentation config  */\n  setConfig(config: ConfigType): void;\n\n  /** Method to get instrumentation config  */\n  getConfig(): ConfigType;\n}\n\n/**\n * Base interface for configuration options common to all instrumentations.\n * This interface can be extended by individual instrumentations to include\n * additional configuration options specific to that instrumentation.\n * All configuration options must be optional.\n */\nexport interface InstrumentationConfig {\n  /**\n   * Whether to enable the plugin.\n   * @default true\n   */\n  enabled?: boolean;\n}\n\n/**\n * This interface defines the params that are be added to the wrapped function\n * using the \"shimmer.wrap\"\n */\nexport interface ShimWrapped extends Function {\n  __wrapped: boolean;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __unwrap: Function;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __original: Function;\n}\n\nexport interface InstrumentationModuleFile {\n  /** Name of file to be patched with relative path */\n  name: string;\n\n  moduleExports?: unknown;\n\n  /** Supported versions for the file.\n   *\n   * A module version is supported if one of the supportedVersions in the array satisfies the module version.\n   * The syntax of the version is checked with the `satisfies` function of \"The semantic versioner for npm\", see\n   * [`semver` package](https://www.npmjs.com/package/semver)\n   * If the version is not supported, we won't apply instrumentation patch.\n   * If omitted, all versions of the module will be patched.\n   *\n   * It is recommended to always specify a range that is bound to a major version, to avoid breaking changes.\n   * New major versions should be reviewed and tested before being added to the supportedVersions array.\n   *\n   * Example: ['>=1.2.3 <3']\n   */\n  supportedVersions: string[];\n\n  /** Method to patch the instrumentation  */\n  patch(moduleExports: unknown, moduleVersion?: string): unknown;\n\n  /** Method to unpatch the instrumentation  */\n  unpatch(moduleExports?: unknown, moduleVersion?: string): void;\n}\n\nexport interface InstrumentationModuleDefinition {\n  /** Module name or path  */\n  name: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  moduleExports?: any;\n\n  /** Instrumented module version */\n  moduleVersion?: string;\n\n  /** Supported version of module.\n   *\n   * A module version is supported if one of the supportedVersions in the array satisfies the module version.\n   * The syntax of the version is checked with the `satisfies` function of \"The semantic versioner for npm\", see\n   * [`semver` package](https://www.npmjs.com/package/semver)\n   * If the version is not supported, we won't apply instrumentation patch (see `enable` method).\n   * If omitted, all versions of the module will be patched.\n   *\n   * It is recommended to always specify a range that is bound to a major version, to avoid breaking changes.\n   * New major versions should be reviewed and tested before being added to the supportedVersions array.\n   *\n   * Example: ['>=1.2.3 <3']\n   */\n  supportedVersions: string[];\n\n  /** Module internal files to be patched  */\n  files: InstrumentationModuleFile[];\n\n  /** If set to true, the includePrerelease check will be included when calling semver.satisfies */\n  includePrerelease?: boolean;\n\n  /** Method to patch the instrumentation  */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  patch?: (moduleExports: any, moduleVersion?: string) => any;\n\n  /** Method to unpatch the instrumentation  */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  unpatch?: (moduleExports: any, moduleVersion?: string) => void;\n}\n\n/**\n * SpanCustomizationHook is a common way for instrumentations to expose extension points\n * where users can add custom behavior to a span based on info object passed to the hook at different times of the span lifecycle.\n * This is an advanced feature, commonly used to add additional or non-spec-compliant attributes to the span,\n * capture payloads, modify the span in some way, or carry some other side effect.\n *\n * The hook is registered with the instrumentation specific config by implementing an handler function with this signature,\n * and if the hook is present, it will be called with the span and the event information\n * when the event is emitted.\n *\n * When and under what conditions the hook is called and what data is passed\n * in the info argument, is specific to each instrumentation and life-cycle event\n * and should be documented where it is used.\n *\n * Instrumentation may define multiple hooks, for different spans, or different span life-cycle events.\n */\nexport type SpanCustomizationHook<SpanCustomizationInfoType> = (\n  span: Span,\n  info: SpanCustomizationInfoType\n) => void;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider, MeterProvider } from '@opentelemetry/api';\nimport { Instrumentation } from './types';\nimport { LoggerProvider } from '@opentelemetry/api-logs';\n\nexport interface AutoLoaderResult {\n  instrumentations: Instrumentation[];\n}\n\nexport interface AutoLoaderOptions {\n  instrumentations?: (Instrumentation | Instrumentation[])[];\n  tracerProvider?: TracerProvider;\n  meterProvider?: MeterProvider;\n  loggerProvider?: LoggerProvider;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { registerInstrumentations } from './autoLoader';\nexport { InstrumentationBase } from './platform/index';\nexport { InstrumentationNodeModuleDefinition } from './instrumentationNodeModuleDefinition';\nexport { InstrumentationNodeModuleFile } from './instrumentationNodeModuleFile';\nexport * from './types';\nexport * from './types_internal';\nexport * from './utils';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  context,\n  HrTime,\n  INVALID_SPAN_CONTEXT,\n  propagation,\n  ROOT_CONTEXT,\n  Span,\n  SpanKind,\n  SpanOptions,\n  SpanStatus,\n  SpanStatusCode,\n  trace,\n  Histogram,\n  MetricAttributes,\n  ValueType,\n} from '@opentelemetry/api';\nimport {\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMilliseconds,\n  suppressTracing,\n} from '@opentelemetry/core';\nimport type * as http from 'http';\nimport type * as https from 'https';\nimport { Socket } from 'net';\nimport * as semver from 'semver';\nimport * as url from 'url';\nimport {\n  Err,\n  Func,\n  Http,\n  HttpInstrumentationConfig,\n  HttpRequestArgs,\n  Https,\n} from './types';\nimport * as utils from './utils';\nimport { VERSION } from './version';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { RPCMetadata, RPCType, setRPCMetadata } from '@opentelemetry/core';\nimport { errorMonitor } from 'events';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\n\n/**\n * Http instrumentation instrumentation for Opentelemetry\n */\nexport class HttpInstrumentation extends InstrumentationBase<HttpInstrumentationConfig> {\n  /** keep track on spans not ended */\n  private readonly _spanNotEnded: WeakSet<Span> = new WeakSet<Span>();\n  private _headerCapture;\n  private _httpServerDurationHistogram!: Histogram;\n  private _httpClientDurationHistogram!: Histogram;\n\n  constructor(config: HttpInstrumentationConfig = {}) {\n    super('@opentelemetry/instrumentation-http', VERSION, config);\n    this._headerCapture = this._createHeaderCapture();\n  }\n\n  protected override _updateMetricInstruments() {\n    this._httpServerDurationHistogram = this.meter.createHistogram(\n      'http.server.duration',\n      {\n        description: 'Measures the duration of inbound HTTP requests.',\n        unit: 'ms',\n        valueType: ValueType.DOUBLE,\n      }\n    );\n    this._httpClientDurationHistogram = this.meter.createHistogram(\n      'http.client.duration',\n      {\n        description: 'Measures the duration of outbound HTTP requests.',\n        unit: 'ms',\n        valueType: ValueType.DOUBLE,\n      }\n    );\n  }\n\n  override setConfig(config: HttpInstrumentationConfig = {}): void {\n    super.setConfig(config);\n    this._headerCapture = this._createHeaderCapture();\n  }\n\n  init(): [\n    InstrumentationNodeModuleDefinition,\n    InstrumentationNodeModuleDefinition,\n  ] {\n    return [this._getHttpsInstrumentation(), this._getHttpInstrumentation()];\n  }\n\n  private _getHttpInstrumentation() {\n    return new InstrumentationNodeModuleDefinition(\n      'http',\n      ['*'],\n      (moduleExports: Http): Http => {\n        this._wrap(\n          moduleExports,\n          'request',\n          this._getPatchOutgoingRequestFunction('http')\n        );\n        this._wrap(\n          moduleExports,\n          'get',\n          this._getPatchOutgoingGetFunction(moduleExports.request)\n        );\n        this._wrap(\n          moduleExports.Server.prototype,\n          'emit',\n          this._getPatchIncomingRequestFunction('http')\n        );\n        return moduleExports;\n      },\n      (moduleExports: Http) => {\n        if (moduleExports === undefined) return;\n\n        this._unwrap(moduleExports, 'request');\n        this._unwrap(moduleExports, 'get');\n        this._unwrap(moduleExports.Server.prototype, 'emit');\n      }\n    );\n  }\n\n  private _getHttpsInstrumentation() {\n    return new InstrumentationNodeModuleDefinition(\n      'https',\n      ['*'],\n      (moduleExports: Https): Https => {\n        this._wrap(\n          moduleExports,\n          'request',\n          this._getPatchHttpsOutgoingRequestFunction('https')\n        );\n        this._wrap(\n          moduleExports,\n          'get',\n          this._getPatchHttpsOutgoingGetFunction(moduleExports.request)\n        );\n        this._wrap(\n          moduleExports.Server.prototype,\n          'emit',\n          this._getPatchIncomingRequestFunction('https')\n        );\n        return moduleExports;\n      },\n      (moduleExports: Https) => {\n        if (moduleExports === undefined) return;\n\n        this._unwrap(moduleExports, 'request');\n        this._unwrap(moduleExports, 'get');\n        this._unwrap(moduleExports.Server.prototype, 'emit');\n      }\n    );\n  }\n\n  /**\n   * Creates spans for incoming requests, restoring spans' context if applied.\n   */\n  protected _getPatchIncomingRequestFunction(component: 'http' | 'https') {\n    return (\n      original: (event: string, ...args: unknown[]) => boolean\n    ): ((this: unknown, event: string, ...args: unknown[]) => boolean) => {\n      return this._incomingRequestFunction(component, original);\n    };\n  }\n\n  /**\n   * Creates spans for outgoing requests, sending spans' context for distributed\n   * tracing.\n   */\n  protected _getPatchOutgoingRequestFunction(component: 'http' | 'https') {\n    return (original: Func<http.ClientRequest>): Func<http.ClientRequest> => {\n      return this._outgoingRequestFunction(component, original);\n    };\n  }\n\n  protected _getPatchOutgoingGetFunction(\n    clientRequest: (\n      options: http.RequestOptions | string | url.URL,\n      ...args: HttpRequestArgs\n    ) => http.ClientRequest\n  ) {\n    return (_original: Func<http.ClientRequest>): Func<http.ClientRequest> => {\n      // Re-implement http.get. This needs to be done (instead of using\n      // getPatchOutgoingRequestFunction to patch it) because we need to\n      // set the trace context header before the returned http.ClientRequest is\n      // ended. The Node.js docs state that the only differences between\n      // request and get are that (1) get defaults to the HTTP GET method and\n      // (2) the returned request object is ended immediately. The former is\n      // already true (at least in supported Node versions up to v10), so we\n      // simply follow the latter. Ref:\n      // https://nodejs.org/dist/latest/docs/api/http.html#http_http_get_options_callback\n      // https://github.com/googleapis/cloud-trace-nodejs/blob/master/src/instrumentations/instrumentation-http.ts#L198\n      return function outgoingGetRequest<\n        T extends http.RequestOptions | string | url.URL,\n      >(options: T, ...args: HttpRequestArgs): http.ClientRequest {\n        const req = clientRequest(options, ...args);\n        req.end();\n        return req;\n      };\n    };\n  }\n\n  /** Patches HTTPS outgoing requests */\n  private _getPatchHttpsOutgoingRequestFunction(component: 'http' | 'https') {\n    return (original: Func<http.ClientRequest>): Func<http.ClientRequest> => {\n      const instrumentation = this;\n      return function httpsOutgoingRequest(\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        options: https.RequestOptions | string | URL,\n        ...args: HttpRequestArgs\n      ): http.ClientRequest {\n        // Makes sure options will have default HTTPS parameters\n        if (\n          component === 'https' &&\n          typeof options === 'object' &&\n          options?.constructor?.name !== 'URL'\n        ) {\n          options = Object.assign({}, options);\n          instrumentation._setDefaultOptions(options);\n        }\n        return instrumentation._getPatchOutgoingRequestFunction(component)(\n          original\n        )(options, ...args);\n      };\n    };\n  }\n\n  private _setDefaultOptions(options: https.RequestOptions) {\n    options.protocol = options.protocol || 'https:';\n    options.port = options.port || 443;\n  }\n\n  /** Patches HTTPS outgoing get requests */\n  private _getPatchHttpsOutgoingGetFunction(\n    clientRequest: (\n      // eslint-disable-next-line node/no-unsupported-features/node-builtins\n      options: http.RequestOptions | string | URL,\n      ...args: HttpRequestArgs\n    ) => http.ClientRequest\n  ) {\n    return (original: Func<http.ClientRequest>): Func<http.ClientRequest> => {\n      const instrumentation = this;\n      return function httpsOutgoingRequest(\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        options: https.RequestOptions | string | URL,\n        ...args: HttpRequestArgs\n      ): http.ClientRequest {\n        return instrumentation._getPatchOutgoingGetFunction(clientRequest)(\n          original\n        )(options, ...args);\n      };\n    };\n  }\n\n  /**\n   * Attach event listeners to a client request to end span and add span attributes.\n   *\n   * @param request The original request object.\n   * @param span representing the current operation\n   * @param startTime representing the start time of the request to calculate duration in Metric\n   * @param metricAttributes metric attributes\n   */\n  private _traceClientRequest(\n    request: http.ClientRequest,\n    span: Span,\n    startTime: HrTime,\n    metricAttributes: MetricAttributes\n  ): http.ClientRequest {\n    if (this.getConfig().requestHook) {\n      this._callRequestHook(span, request);\n    }\n\n    /**\n     * Determines if the request has errored or the response has ended/errored.\n     */\n    let responseFinished = false;\n\n    /*\n     * User 'response' event listeners can be added before our listener,\n     * force our listener to be the first, so response emitter is bound\n     * before any user listeners are added to it.\n     */\n    request.prependListener(\n      'response',\n      (response: http.IncomingMessage & { aborted?: boolean }) => {\n        this._diag.debug('outgoingRequest on response()');\n        if (request.listenerCount('response') <= 1) {\n          response.resume();\n        }\n        const responseAttributes =\n          utils.getOutgoingRequestAttributesOnResponse(response);\n        span.setAttributes(responseAttributes);\n        metricAttributes = Object.assign(\n          metricAttributes,\n          utils.getOutgoingRequestMetricAttributesOnResponse(responseAttributes)\n        );\n\n        if (this.getConfig().responseHook) {\n          this._callResponseHook(span, response);\n        }\n\n        this._headerCapture.client.captureRequestHeaders(span, header =>\n          request.getHeader(header)\n        );\n        this._headerCapture.client.captureResponseHeaders(\n          span,\n          header => response.headers[header]\n        );\n\n        context.bind(context.active(), response);\n\n        const endHandler = () => {\n          this._diag.debug('outgoingRequest on end()');\n          if (responseFinished) {\n            return;\n          }\n          responseFinished = true;\n          let status: SpanStatus;\n\n          if (response.aborted && !response.complete) {\n            status = { code: SpanStatusCode.ERROR };\n          } else {\n            status = {\n              code: utils.parseResponseStatus(\n                SpanKind.CLIENT,\n                response.statusCode\n              ),\n            };\n          }\n\n          span.setStatus(status);\n\n          if (this.getConfig().applyCustomAttributesOnSpan) {\n            safeExecuteInTheMiddle(\n              () =>\n                this.getConfig().applyCustomAttributesOnSpan!(\n                  span,\n                  request,\n                  response\n                ),\n              () => {},\n              true\n            );\n          }\n\n          this._closeHttpSpan(\n            span,\n            SpanKind.CLIENT,\n            startTime,\n            metricAttributes\n          );\n        };\n\n        response.on('end', endHandler);\n        // See https://github.com/open-telemetry/opentelemetry-js/pull/3625#issuecomment-1475673533\n        if (semver.lt(process.version, '16.0.0')) {\n          response.on('close', endHandler);\n        }\n        response.on(errorMonitor, (error: Err) => {\n          this._diag.debug('outgoingRequest on error()', error);\n          if (responseFinished) {\n            return;\n          }\n          responseFinished = true;\n          utils.setSpanWithError(span, error);\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error.message,\n          });\n          this._closeHttpSpan(\n            span,\n            SpanKind.CLIENT,\n            startTime,\n            metricAttributes\n          );\n        });\n      }\n    );\n    request.on('close', () => {\n      this._diag.debug('outgoingRequest on request close()');\n      if (request.aborted || responseFinished) {\n        return;\n      }\n      responseFinished = true;\n      this._closeHttpSpan(span, SpanKind.CLIENT, startTime, metricAttributes);\n    });\n    request.on(errorMonitor, (error: Err) => {\n      this._diag.debug('outgoingRequest on request error()', error);\n      if (responseFinished) {\n        return;\n      }\n      responseFinished = true;\n      utils.setSpanWithError(span, error);\n      this._closeHttpSpan(span, SpanKind.CLIENT, startTime, metricAttributes);\n    });\n\n    this._diag.debug('http.ClientRequest return request');\n    return request;\n  }\n\n  private _incomingRequestFunction(\n    component: 'http' | 'https',\n    original: (event: string, ...args: unknown[]) => boolean\n  ) {\n    const instrumentation = this;\n    return function incomingRequest(\n      this: unknown,\n      event: string,\n      ...args: unknown[]\n    ): boolean {\n      // Only traces request events\n      if (event !== 'request') {\n        return original.apply(this, [event, ...args]);\n      }\n\n      const request = args[0] as http.IncomingMessage;\n      const response = args[1] as http.ServerResponse & { socket: Socket };\n      const pathname = request.url\n        ? url.parse(request.url).pathname || '/'\n        : '/';\n      const method = request.method || 'GET';\n\n      instrumentation._diag.debug(\n        `${component} instrumentation incomingRequest`\n      );\n\n      if (\n        utils.isIgnored(\n          pathname,\n          instrumentation.getConfig().ignoreIncomingPaths,\n          (e: unknown) =>\n            instrumentation._diag.error('caught ignoreIncomingPaths error: ', e)\n        ) ||\n        safeExecuteInTheMiddle(\n          () =>\n            instrumentation.getConfig().ignoreIncomingRequestHook?.(request),\n          (e: unknown) => {\n            if (e != null) {\n              instrumentation._diag.error(\n                'caught ignoreIncomingRequestHook error: ',\n                e\n              );\n            }\n          },\n          true\n        )\n      ) {\n        return context.with(suppressTracing(context.active()), () => {\n          context.bind(context.active(), request);\n          context.bind(context.active(), response);\n          return original.apply(this, [event, ...args]);\n        });\n      }\n\n      const headers = request.headers;\n\n      const spanAttributes = utils.getIncomingRequestAttributes(request, {\n        component: component,\n        serverName: instrumentation.getConfig().serverName,\n        hookAttributes: instrumentation._callStartSpanHook(\n          request,\n          instrumentation.getConfig().startIncomingSpanHook\n        ),\n      });\n\n      const spanOptions: SpanOptions = {\n        kind: SpanKind.SERVER,\n        attributes: spanAttributes,\n      };\n\n      const startTime = hrTime();\n      const metricAttributes =\n        utils.getIncomingRequestMetricAttributes(spanAttributes);\n\n      const ctx = propagation.extract(ROOT_CONTEXT, headers);\n      const span = instrumentation._startHttpSpan(method, spanOptions, ctx);\n      const rpcMetadata: RPCMetadata = {\n        type: RPCType.HTTP,\n        span,\n      };\n\n      return context.with(\n        setRPCMetadata(trace.setSpan(ctx, span), rpcMetadata),\n        () => {\n          context.bind(context.active(), request);\n          context.bind(context.active(), response);\n\n          if (instrumentation.getConfig().requestHook) {\n            instrumentation._callRequestHook(span, request);\n          }\n          if (instrumentation.getConfig().responseHook) {\n            instrumentation._callResponseHook(span, response);\n          }\n\n          instrumentation._headerCapture.server.captureRequestHeaders(\n            span,\n            header => request.headers[header]\n          );\n\n          // After 'error', no further events other than 'close' should be emitted.\n          let hasError = false;\n          response.on('close', () => {\n            if (hasError) {\n              return;\n            }\n            instrumentation._onServerResponseFinish(\n              request,\n              response,\n              span,\n              metricAttributes,\n              startTime\n            );\n          });\n          response.on(errorMonitor, (err: Err) => {\n            hasError = true;\n            instrumentation._onServerResponseError(\n              span,\n              metricAttributes,\n              startTime,\n              err\n            );\n          });\n\n          return safeExecuteInTheMiddle(\n            () => original.apply(this, [event, ...args]),\n            error => {\n              if (error) {\n                utils.setSpanWithError(span, error);\n                instrumentation._closeHttpSpan(\n                  span,\n                  SpanKind.SERVER,\n                  startTime,\n                  metricAttributes\n                );\n                throw error;\n              }\n            }\n          );\n        }\n      );\n    };\n  }\n\n  private _outgoingRequestFunction(\n    component: 'http' | 'https',\n    original: Func<http.ClientRequest>\n  ): Func<http.ClientRequest> {\n    const instrumentation = this;\n    return function outgoingRequest(\n      this: unknown,\n      options: url.URL | http.RequestOptions | string,\n      ...args: unknown[]\n    ): http.ClientRequest {\n      if (!utils.isValidOptionsType(options)) {\n        return original.apply(this, [options, ...args]);\n      }\n      const extraOptions =\n        typeof args[0] === 'object' &&\n        (typeof options === 'string' || options instanceof url.URL)\n          ? (args.shift() as http.RequestOptions)\n          : undefined;\n      const { origin, pathname, method, optionsParsed } = utils.getRequestInfo(\n        options,\n        extraOptions\n      );\n      /**\n       * Node 8's https module directly call the http one so to avoid creating\n       * 2 span for the same request we need to check that the protocol is correct\n       * See: https://github.com/nodejs/node/blob/v8.17.0/lib/https.js#L245\n       */\n      if (\n        component === 'http' &&\n        semver.lt(process.version, '9.0.0') &&\n        optionsParsed.protocol === 'https:'\n      ) {\n        return original.apply(this, [optionsParsed, ...args]);\n      }\n\n      if (\n        utils.isIgnored(\n          origin + pathname,\n          instrumentation.getConfig().ignoreOutgoingUrls,\n          (e: unknown) =>\n            instrumentation._diag.error('caught ignoreOutgoingUrls error: ', e)\n        ) ||\n        safeExecuteInTheMiddle(\n          () =>\n            instrumentation\n              .getConfig()\n              .ignoreOutgoingRequestHook?.(optionsParsed),\n          (e: unknown) => {\n            if (e != null) {\n              instrumentation._diag.error(\n                'caught ignoreOutgoingRequestHook error: ',\n                e\n              );\n            }\n          },\n          true\n        )\n      ) {\n        return original.apply(this, [optionsParsed, ...args]);\n      }\n\n      const { hostname, port } = utils.extractHostnameAndPort(optionsParsed);\n\n      const attributes = utils.getOutgoingRequestAttributes(optionsParsed, {\n        component,\n        port,\n        hostname,\n        hookAttributes: instrumentation._callStartSpanHook(\n          optionsParsed,\n          instrumentation.getConfig().startOutgoingSpanHook\n        ),\n      });\n\n      const startTime = hrTime();\n      const metricAttributes: MetricAttributes =\n        utils.getOutgoingRequestMetricAttributes(attributes);\n\n      const spanOptions: SpanOptions = {\n        kind: SpanKind.CLIENT,\n        attributes,\n      };\n      const span = instrumentation._startHttpSpan(method, spanOptions);\n\n      const parentContext = context.active();\n      const requestContext = trace.setSpan(parentContext, span);\n\n      if (!optionsParsed.headers) {\n        optionsParsed.headers = {};\n      } else {\n        // Make a copy of the headers object to avoid mutating an object the\n        // caller might have a reference to.\n        optionsParsed.headers = Object.assign({}, optionsParsed.headers);\n      }\n      propagation.inject(requestContext, optionsParsed.headers);\n\n      return context.with(requestContext, () => {\n        /*\n         * The response callback is registered before ClientRequest is bound,\n         * thus it is needed to bind it before the function call.\n         */\n        const cb = args[args.length - 1];\n        if (typeof cb === 'function') {\n          args[args.length - 1] = context.bind(parentContext, cb);\n        }\n\n        const request: http.ClientRequest = safeExecuteInTheMiddle(\n          () => original.apply(this, [optionsParsed, ...args]),\n          error => {\n            if (error) {\n              utils.setSpanWithError(span, error);\n              instrumentation._closeHttpSpan(\n                span,\n                SpanKind.CLIENT,\n                startTime,\n                metricAttributes\n              );\n              throw error;\n            }\n          }\n        );\n\n        instrumentation._diag.debug(\n          `${component} instrumentation outgoingRequest`\n        );\n        context.bind(parentContext, request);\n        return instrumentation._traceClientRequest(\n          request,\n          span,\n          startTime,\n          metricAttributes\n        );\n      });\n    };\n  }\n\n  private _onServerResponseFinish(\n    request: http.IncomingMessage,\n    response: http.ServerResponse,\n    span: Span,\n    metricAttributes: MetricAttributes,\n    startTime: HrTime\n  ) {\n    const attributes = utils.getIncomingRequestAttributesOnResponse(\n      request,\n      response\n    );\n    metricAttributes = Object.assign(\n      metricAttributes,\n      utils.getIncomingRequestMetricAttributesOnResponse(attributes)\n    );\n\n    this._headerCapture.server.captureResponseHeaders(span, header =>\n      response.getHeader(header)\n    );\n\n    span.setAttributes(attributes).setStatus({\n      code: utils.parseResponseStatus(SpanKind.SERVER, response.statusCode),\n    });\n\n    const route = attributes[SEMATTRS_HTTP_ROUTE];\n    if (route) {\n      span.updateName(`${request.method || 'GET'} ${route}`);\n    }\n\n    if (this.getConfig().applyCustomAttributesOnSpan) {\n      safeExecuteInTheMiddle(\n        () =>\n          this.getConfig().applyCustomAttributesOnSpan!(\n            span,\n            request,\n            response\n          ),\n        () => {},\n        true\n      );\n    }\n\n    this._closeHttpSpan(span, SpanKind.SERVER, startTime, metricAttributes);\n  }\n\n  private _onServerResponseError(\n    span: Span,\n    metricAttributes: MetricAttributes,\n    startTime: HrTime,\n    error: Err\n  ) {\n    utils.setSpanWithError(span, error);\n    this._closeHttpSpan(span, SpanKind.SERVER, startTime, metricAttributes);\n  }\n\n  private _startHttpSpan(\n    name: string,\n    options: SpanOptions,\n    ctx = context.active()\n  ) {\n    /*\n     * If a parent is required but not present, we use a `NoopSpan` to still\n     * propagate context without recording it.\n     */\n    const requireParent =\n      options.kind === SpanKind.CLIENT\n        ? this.getConfig().requireParentforOutgoingSpans\n        : this.getConfig().requireParentforIncomingSpans;\n\n    let span: Span;\n    const currentSpan = trace.getSpan(ctx);\n\n    if (requireParent === true && currentSpan === undefined) {\n      span = trace.wrapSpanContext(INVALID_SPAN_CONTEXT);\n    } else if (requireParent === true && currentSpan?.spanContext().isRemote) {\n      span = currentSpan;\n    } else {\n      span = this.tracer.startSpan(name, options, ctx);\n    }\n    this._spanNotEnded.add(span);\n    return span;\n  }\n\n  private _closeHttpSpan(\n    span: Span,\n    spanKind: SpanKind,\n    startTime: HrTime,\n    metricAttributes: MetricAttributes\n  ) {\n    if (!this._spanNotEnded.has(span)) {\n      return;\n    }\n\n    span.end();\n    this._spanNotEnded.delete(span);\n\n    // Record metrics\n    const duration = hrTimeToMilliseconds(hrTimeDuration(startTime, hrTime()));\n    if (spanKind === SpanKind.SERVER) {\n      this._httpServerDurationHistogram.record(duration, metricAttributes);\n    } else if (spanKind === SpanKind.CLIENT) {\n      this._httpClientDurationHistogram.record(duration, metricAttributes);\n    }\n  }\n\n  private _callResponseHook(\n    span: Span,\n    response: http.IncomingMessage | http.ServerResponse\n  ) {\n    safeExecuteInTheMiddle(\n      () => this.getConfig().responseHook!(span, response),\n      () => {},\n      true\n    );\n  }\n\n  private _callRequestHook(\n    span: Span,\n    request: http.ClientRequest | http.IncomingMessage\n  ) {\n    safeExecuteInTheMiddle(\n      () => this.getConfig().requestHook!(span, request),\n      () => {},\n      true\n    );\n  }\n\n  private _callStartSpanHook(\n    request: http.IncomingMessage | http.RequestOptions,\n    hookFunc: Function | undefined\n  ) {\n    if (typeof hookFunc === 'function') {\n      return safeExecuteInTheMiddle(\n        () => hookFunc(request),\n        () => {},\n        true\n      );\n    }\n  }\n\n  private _createHeaderCapture() {\n    const config = this.getConfig();\n\n    return {\n      client: {\n        captureRequestHeaders: utils.headerCapture(\n          'request',\n          config.headersToSpanAttributes?.client?.requestHeaders ?? []\n        ),\n        captureResponseHeaders: utils.headerCapture(\n          'response',\n          config.headersToSpanAttributes?.client?.responseHeaders ?? []\n        ),\n      },\n      server: {\n        captureRequestHeaders: utils.headerCapture(\n          'request',\n          config.headersToSpanAttributes?.server?.requestHeaders ?? []\n        ),\n        captureResponseHeaders: utils.headerCapture(\n          'response',\n          config.headersToSpanAttributes?.server?.responseHeaders ?? []\n        ),\n      },\n    };\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './http';\nexport * from './types';\nexport * from './utils';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum ExpressLayerType {\n  ROUTER = 'router',\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request_handler',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  EXPRESS_TYPE = 'express.type',\n  EXPRESS_NAME = 'express.name',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Request } from 'express';\nimport { Attributes } from '@opentelemetry/api';\n\n/**\n * This symbol is used to mark express layer as being already instrumented\n * since its possible to use a given layer multiple times (ex: middlewares)\n */\nexport const kLayerPatched: unique symbol = Symbol('express-layer-patched');\n\n/**\n * This const define where on the `request` object the Instrumentation will mount the\n * current stack of express layer.\n *\n * It is necessary because express doesn't store the different layers\n * (ie: middleware, router etc) that it called to get to the current layer.\n * Given that, the only way to know the route of a given layer is to\n * store the path of where each previous layer has been mounted.\n *\n * ex: bodyParser > auth middleware > /users router > get /:id\n *  in this case the stack would be: [\"/users\", \"/:id\"]\n *\n * ex2: bodyParser > /api router > /v1 router > /users router > get /:id\n *  stack: [\"/api\", \"/v1\", \"/users\", \":id\"]\n *\n */\nexport const _LAYERS_STORE_PROPERTY = '__ot_middlewares';\n\nexport type PatchedRequest = {\n  [_LAYERS_STORE_PROPERTY]?: string[];\n} & Request;\nexport type PathParams = string | RegExp | Array<string | RegExp>;\n\n// https://github.com/expressjs/express/blob/main/lib/router/index.js#L53\nexport type ExpressRouter = {\n  params: { [key: string]: string };\n  _params: string[];\n  caseSensitive: boolean;\n  mergeParams: boolean;\n  strict: boolean;\n  stack: ExpressLayer[];\n};\n\n// https://github.com/expressjs/express/blob/main/lib/router/layer.js#L33\nexport type ExpressLayer = {\n  handle: Function & Record<string, any>;\n  [kLayerPatched]?: boolean;\n  name: string;\n  params: { [key: string]: string };\n  path: string;\n  regexp: RegExp;\n};\n\nexport type LayerMetadata = {\n  attributes: Attributes;\n  name: string;\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes } from '@opentelemetry/api';\nimport {\n  IgnoreMatcher,\n  ExpressInstrumentationConfig,\n  LayerPathSegment,\n} from './types';\nimport { ExpressLayerType } from './enums/ExpressLayerType';\nimport { AttributeNames } from './enums/AttributeNames';\nimport {\n  ExpressLayer,\n  PatchedRequest,\n  _LAYERS_STORE_PROPERTY,\n} from './internal-types';\n\n/**\n * Store layers path in the request to be able to construct route later\n * @param request The request where\n * @param [value] the value to push into the array\n */\nexport const storeLayerPath = (request: PatchedRequest, value?: string) => {\n  if (Array.isArray(request[_LAYERS_STORE_PROPERTY]) === false) {\n    Object.defineProperty(request, _LAYERS_STORE_PROPERTY, {\n      enumerable: false,\n      value: [],\n    });\n  }\n  if (value === undefined) return;\n  (request[_LAYERS_STORE_PROPERTY] as string[]).push(value);\n};\n\n/**\n * Parse express layer context to retrieve a name and attributes.\n * @param layer Express layer\n * @param [layerPath] if present, the path on which the layer has been mounted\n */\nexport const getLayerMetadata = (\n  layer: ExpressLayer,\n  layerPath?: string\n): {\n  attributes: Attributes;\n  name: string;\n} => {\n  if (layer.name === 'router') {\n    return {\n      attributes: {\n        [AttributeNames.EXPRESS_NAME]: layerPath,\n        [AttributeNames.EXPRESS_TYPE]: ExpressLayerType.ROUTER,\n      },\n      name: `router - ${layerPath}`,\n    };\n  } else if (layer.name === 'bound dispatch') {\n    return {\n      attributes: {\n        [AttributeNames.EXPRESS_NAME]: layerPath ?? 'request handler',\n        [AttributeNames.EXPRESS_TYPE]: ExpressLayerType.REQUEST_HANDLER,\n      },\n      name: `request handler${layer.path ? ` - ${layerPath}` : ''}`,\n    };\n  } else {\n    return {\n      attributes: {\n        [AttributeNames.EXPRESS_NAME]: layer.name,\n        [AttributeNames.EXPRESS_TYPE]: ExpressLayerType.MIDDLEWARE,\n      },\n      name: `middleware - ${layer.name}`,\n    };\n  }\n};\n\n/**\n * Check whether the given obj match pattern\n * @param constant e.g URL of request\n * @param obj obj to inspect\n * @param pattern Match pattern\n */\nconst satisfiesPattern = (\n  constant: string,\n  pattern: IgnoreMatcher\n): boolean => {\n  if (typeof pattern === 'string') {\n    return pattern === constant;\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(constant);\n  } else if (typeof pattern === 'function') {\n    return pattern(constant);\n  } else {\n    throw new TypeError('Pattern is in unsupported datatype');\n  }\n};\n\n/**\n * Check whether the given request is ignored by configuration\n * It will not re-throw exceptions from `list` provided by the client\n * @param constant e.g URL of request\n * @param [list] List of ignore patterns\n * @param [onException] callback for doing something when an exception has\n *     occurred\n */\nexport const isLayerIgnored = (\n  name: string,\n  type: ExpressLayerType,\n  config?: ExpressInstrumentationConfig\n): boolean => {\n  if (\n    Array.isArray(config?.ignoreLayersType) &&\n    config?.ignoreLayersType?.includes(type)\n  ) {\n    return true;\n  }\n  if (Array.isArray(config?.ignoreLayers) === false) return false;\n  try {\n    for (const pattern of config!.ignoreLayers!) {\n      if (satisfiesPattern(name, pattern)) {\n        return true;\n      }\n    }\n  } catch (e) {\n    /* catch block*/\n  }\n\n  return false;\n};\n\n/**\n * Converts a user-provided error value into an error and error message pair\n *\n * @param error - User-provided error value\n * @returns Both an Error or string representation of the value and an error message\n */\nexport const asErrorAndMessage = (\n  error: unknown\n): [error: string | Error, message: string] =>\n  error instanceof Error\n    ? [error, error.message]\n    : [String(error), String(error)];\n\n/**\n * Extracts the layer path from the route arguments\n *\n * @param args - Arguments of the route\n * @returns The layer path\n */\nexport const getLayerPath = (\n  args: [LayerPathSegment | LayerPathSegment[], ...unknown[]]\n): string | undefined => {\n  if (Array.isArray(args[0])) {\n    return args[0].map(arg => extractLayerPathSegment(arg) || '').join(',');\n  }\n\n  return extractLayerPathSegment(args[0]);\n};\n\nconst extractLayerPathSegment = (arg: LayerPathSegment) => {\n  if (typeof arg === 'string') {\n    return arg;\n  }\n\n  if (arg instanceof RegExp || typeof arg === 'number') {\n    return arg.toString();\n  }\n\n  return;\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.41.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-express';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport {\n  trace,\n  context,\n  diag,\n  Attributes,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport type * as express from 'express';\nimport { ExpressInstrumentationConfig, ExpressRequestInfo } from './types';\nimport { ExpressLayerType } from './enums/ExpressLayerType';\nimport { AttributeNames } from './enums/AttributeNames';\nimport {\n  asErrorAndMessage,\n  getLayerMetadata,\n  getLayerPath,\n  isLayerIgnored,\n  storeLayerPath,\n} from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\nimport {\n  ExpressLayer,\n  ExpressRouter,\n  kLayerPatched,\n  PatchedRequest,\n  _LAYERS_STORE_PROPERTY,\n} from './internal-types';\n\n/** Express instrumentation for OpenTelemetry */\nexport class ExpressInstrumentation extends InstrumentationBase {\n  constructor(config: ExpressInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  override setConfig(config: ExpressInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n  }\n\n  override getConfig(): ExpressInstrumentationConfig {\n    return this._config as ExpressInstrumentationConfig;\n  }\n\n  init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'express',\n        ['>=4.0.0 <5'],\n        moduleExports => {\n          const routerProto = moduleExports.Router as unknown as express.Router;\n          // patch express.Router.route\n          if (isWrapped(routerProto.route)) {\n            this._unwrap(routerProto, 'route');\n          }\n          this._wrap(routerProto, 'route', this._getRoutePatch());\n          // patch express.Router.use\n          if (isWrapped(routerProto.use)) {\n            this._unwrap(routerProto, 'use');\n          }\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          this._wrap(routerProto, 'use', this._getRouterUsePatch() as any);\n          // patch express.Application.use\n          if (isWrapped(moduleExports.application.use)) {\n            this._unwrap(moduleExports.application, 'use');\n          }\n          this._wrap(\n            moduleExports.application,\n            'use',\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this._getAppUsePatch() as any\n          );\n          return moduleExports;\n        },\n        moduleExports => {\n          if (moduleExports === undefined) return;\n          const routerProto = moduleExports.Router as unknown as express.Router;\n          this._unwrap(routerProto, 'route');\n          this._unwrap(routerProto, 'use');\n          this._unwrap(moduleExports.application, 'use');\n        }\n      ),\n    ];\n  }\n\n  /**\n   * Get the patch for Router.route function\n   */\n  private _getRoutePatch() {\n    const instrumentation = this;\n    return function (original: express.Router['route']) {\n      return function route_trace(\n        this: ExpressRouter,\n        ...args: Parameters<typeof original>\n      ) {\n        const route = original.apply(this, args);\n        const layer = this.stack[this.stack.length - 1] as ExpressLayer;\n        instrumentation._applyPatch(layer, getLayerPath(args));\n        return route;\n      };\n    };\n  }\n\n  /**\n   * Get the patch for Router.use function\n   */\n  private _getRouterUsePatch() {\n    const instrumentation = this;\n    return function (original: express.Router['use']) {\n      return function use(\n        this: express.Application,\n        ...args: Parameters<typeof original>\n      ) {\n        const route = original.apply(this, args);\n        const layer = this.stack[this.stack.length - 1] as ExpressLayer;\n        instrumentation._applyPatch(layer, getLayerPath(args));\n        return route;\n      };\n    };\n  }\n\n  /**\n   * Get the patch for Application.use function\n   */\n  private _getAppUsePatch() {\n    const instrumentation = this;\n    return function (original: express.Application['use']) {\n      return function use(\n        this: { _router: ExpressRouter },\n        ...args: Parameters<typeof original>\n      ) {\n        const route = original.apply(this, args);\n        const layer = this._router.stack[this._router.stack.length - 1];\n        instrumentation._applyPatch(layer, getLayerPath(args));\n        return route;\n      };\n    };\n  }\n\n  /** Patch each express layer to create span and propagate context */\n  private _applyPatch(\n    this: ExpressInstrumentation,\n    layer: ExpressLayer,\n    layerPath?: string\n  ) {\n    const instrumentation = this;\n    // avoid patching multiple times the same layer\n    if (layer[kLayerPatched] === true) return;\n    layer[kLayerPatched] = true;\n\n    this._wrap(layer, 'handle', original => {\n      // TODO: instrument error handlers\n      if (original.length === 4) return original;\n\n      const patched = function (\n        this: ExpressLayer,\n        req: PatchedRequest,\n        res: express.Response\n      ) {\n        storeLayerPath(req, layerPath);\n        const route = (req[_LAYERS_STORE_PROPERTY] as string[])\n          .filter(path => path !== '/' && path !== '/*')\n          .join('')\n          // remove duplicate slashes to normalize route\n          .replace(/\\/{2,}/g, '/');\n\n        const attributes: Attributes = {\n          [SEMATTRS_HTTP_ROUTE]: route.length > 0 ? route : '/',\n        };\n        const metadata = getLayerMetadata(layer, layerPath);\n        const type = metadata.attributes[\n          AttributeNames.EXPRESS_TYPE\n        ] as ExpressLayerType;\n\n        const rpcMetadata = getRPCMetadata(context.active());\n        if (rpcMetadata?.type === RPCType.HTTP) {\n          rpcMetadata.route = route || '/';\n        }\n\n        // verify against the config if the layer should be ignored\n        if (isLayerIgnored(metadata.name, type, instrumentation._config)) {\n          if (type === ExpressLayerType.MIDDLEWARE) {\n            (req[_LAYERS_STORE_PROPERTY] as string[]).pop();\n          }\n          return original.apply(this, arguments);\n        }\n\n        if (trace.getSpan(context.active()) === undefined) {\n          return original.apply(this, arguments);\n        }\n\n        const spanName = instrumentation._getSpanName(\n          {\n            request: req,\n            layerType: type,\n            route,\n          },\n          metadata.name\n        );\n        const span = instrumentation.tracer.startSpan(spanName, {\n          attributes: Object.assign(attributes, metadata.attributes),\n        });\n\n        if (instrumentation.getConfig().requestHook) {\n          safeExecuteInTheMiddle(\n            () =>\n              instrumentation.getConfig().requestHook!(span, {\n                request: req,\n                layerType: type,\n                route,\n              }),\n            e => {\n              if (e) {\n                diag.error('express instrumentation: request hook failed', e);\n              }\n            },\n            true\n          );\n        }\n\n        let spanHasEnded = false;\n        if (\n          metadata.attributes[AttributeNames.EXPRESS_TYPE] !==\n          ExpressLayerType.MIDDLEWARE\n        ) {\n          span.end();\n          spanHasEnded = true;\n        }\n        // listener for response.on('finish')\n        const onResponseFinish = () => {\n          if (spanHasEnded === false) {\n            spanHasEnded = true;\n            span.end();\n          }\n        };\n\n        // verify we have a callback\n        const args = Array.from(arguments);\n        const callbackIdx = args.findIndex(arg => typeof arg === 'function');\n        if (callbackIdx >= 0) {\n          arguments[callbackIdx] = function () {\n            // express considers anything but an empty value, \"route\" or \"router\"\n            // passed to its callback to be an error\n            const maybeError = arguments[0];\n            const isError = ![undefined, null, 'route', 'router'].includes(\n              maybeError\n            );\n            if (!spanHasEnded && isError) {\n              const [error, message] = asErrorAndMessage(maybeError);\n              span.recordException(error);\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message,\n              });\n            }\n\n            if (spanHasEnded === false) {\n              spanHasEnded = true;\n              req.res?.removeListener('finish', onResponseFinish);\n              span.end();\n            }\n            if (!(req.route && isError)) {\n              (req[_LAYERS_STORE_PROPERTY] as string[]).pop();\n            }\n            const callback = args[callbackIdx] as Function;\n            return callback.apply(this, arguments);\n          };\n        }\n\n        try {\n          return original.apply(this, arguments);\n        } catch (anyError) {\n          const [error, message] = asErrorAndMessage(anyError);\n          span.recordException(error);\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message,\n          });\n          throw anyError;\n        } finally {\n          /**\n           * At this point if the callback wasn't called, that means either the\n           * layer is asynchronous (so it will call the callback later on) or that\n           * the layer directly end the http response, so we'll hook into the \"finish\"\n           * event to handle the later case.\n           */\n          if (!spanHasEnded) {\n            res.once('finish', onResponseFinish);\n          }\n        }\n      };\n\n      // `handle` isn't just a regular function in some cases. It also contains\n      // some properties holding metadata and state so we need to proxy them\n      // through through patched function\n      // ref: https://github.com/open-telemetry/opentelemetry-js-contrib/issues/1950\n      Object.keys(original).forEach(key => {\n        Object.defineProperty(patched, key, {\n          get() {\n            return original[key];\n          },\n          set(value) {\n            original[key] = value;\n          },\n        });\n      });\n\n      return patched;\n    });\n  }\n\n  _getSpanName(info: ExpressRequestInfo, defaultName: string) {\n    const hook = this.getConfig().spanNameHook;\n\n    if (!(hook instanceof Function)) {\n      return defaultName;\n    }\n\n    try {\n      return hook(info, defaultName) ?? defaultName;\n    } catch (err) {\n      diag.error(\n        'express instrumentation: error calling span name rewrite hook',\n        err\n      );\n      return defaultName;\n    }\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './enums/ExpressLayerType';\nexport * from './enums/AttributeNames';\nexport * from './types';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  FASTIFY_NAME = 'fastify.name',\n  FASTIFY_TYPE = 'fastify.type',\n  HOOK_NAME = 'hook.name',\n  PLUGIN_NAME = 'plugin.name',\n}\n\nexport enum FastifyTypes {\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request_handler',\n}\n\nexport enum FastifyNames {\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request handler',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const spanRequestSymbol = Symbol(\n  'opentelemetry.instrumentation.fastify.request_active_span'\n);\n\n// The instrumentation creates a span for invocations of lifecycle hook handlers\n// that take `(request, reply, ...[, done])` arguments. Currently this is all\n// lifecycle hooks except `onRequestAbort`.\n// https://fastify.dev/docs/latest/Reference/Hooks\nexport const hooksNamesToWrap = new Set([\n  'onTimeout',\n  'onRequest',\n  'preParsing',\n  'preValidation',\n  'preSerialization',\n  'preHandler',\n  'onSend',\n  'onResponse',\n  'onError',\n]);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes, Span, SpanStatusCode, Tracer } from '@opentelemetry/api';\nimport { spanRequestSymbol } from './constants';\n\nimport type { PluginFastifyReply } from './internal-types';\n\n/**\n * Starts Span\n * @param reply - reply function\n * @param tracer - tracer\n * @param spanName - span name\n * @param spanAttributes - span attributes\n */\nexport function startSpan(\n  reply: PluginFastifyReply,\n  tracer: Tracer,\n  spanName: string,\n  spanAttributes: Attributes = {}\n) {\n  const span = tracer.startSpan(spanName, { attributes: spanAttributes });\n\n  const spans: Span[] = reply[spanRequestSymbol] || [];\n  spans.push(span);\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  Object.defineProperty(reply, spanRequestSymbol, {\n    enumerable: false,\n    configurable: true,\n    value: spans,\n  });\n\n  return span;\n}\n\n/**\n * Ends span\n * @param reply - reply function\n * @param err - error\n */\nexport function endSpan(reply: PluginFastifyReply, err?: any) {\n  const spans = reply[spanRequestSymbol] || [];\n  // there is no active span, or it has already ended\n  if (!spans.length) {\n    return;\n  }\n  spans.forEach(span => {\n    if (err) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: err.message,\n      });\n      span.recordException(err);\n    }\n    span.end();\n  });\n  delete reply[spanRequestSymbol];\n}\n\n// @TODO after approve add this to instrumentation package and replace usage\n// when it will be released\n\n/**\n * This function handles the missing case from instrumentation package when\n * execute can either return a promise or void. And using async is not an\n * option as it is producing unwanted side effects.\n * @param execute - function to be executed\n * @param onFinish - function called when function executed\n * @param preventThrowingError - prevent to throw error when execute\n * function fails\n */\nexport function safeExecuteInTheMiddleMaybePromise<T>(\n  execute: () => Promise<T>,\n  onFinish: (e: unknown, result?: T) => void,\n  preventThrowingError?: boolean\n): Promise<T>;\nexport function safeExecuteInTheMiddleMaybePromise<T>(\n  execute: () => T,\n  onFinish: (e: unknown, result?: T) => void,\n  preventThrowingError?: boolean\n): T;\nexport function safeExecuteInTheMiddleMaybePromise<T>(\n  execute: () => T | Promise<T>,\n  onFinish: (e: unknown, result?: T) => void,\n  preventThrowingError?: boolean\n): T | Promise<T> | undefined {\n  let error: unknown;\n  let result: T | Promise<T> | undefined = undefined;\n  try {\n    result = execute();\n\n    if (isPromise(result)) {\n      result.then(\n        res => onFinish(undefined, res),\n        err => onFinish(err)\n      );\n    }\n  } catch (e) {\n    error = e;\n  } finally {\n    if (!isPromise(result)) {\n      onFinish(error, result);\n      if (error && !preventThrowingError) {\n        // eslint-disable-next-line no-unsafe-finally\n        throw error;\n      }\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result;\n  }\n}\n\nfunction isPromise<T>(val: T | Promise<T>): val is Promise<T> {\n  return (\n    (typeof val === 'object' &&\n      val &&\n      typeof Object.getOwnPropertyDescriptor(val, 'then')?.value ===\n        'function') ||\n    false\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.38.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-fastify';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Attributes, SpanStatusCode, trace } from '@opentelemetry/api';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\nimport type {\n  HookHandlerDoneFunction,\n  FastifyInstance,\n  FastifyRequest,\n  FastifyReply,\n} from 'fastify';\nimport { hooksNamesToWrap } from './constants';\nimport {\n  AttributeNames,\n  FastifyNames,\n  FastifyTypes,\n} from './enums/AttributeNames';\nimport type { HandlerOriginal, PluginFastifyReply } from './internal-types';\nimport type { FastifyInstrumentationConfig } from './types';\nimport {\n  endSpan,\n  safeExecuteInTheMiddleMaybePromise,\n  startSpan,\n} from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nexport const ANONYMOUS_NAME = 'anonymous';\n\n/** Fastify instrumentation for OpenTelemetry */\nexport class FastifyInstrumentation extends InstrumentationBase {\n  constructor(config: FastifyInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  override setConfig(config: FastifyInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n  }\n\n  override getConfig(): FastifyInstrumentationConfig {\n    return this._config as FastifyInstrumentationConfig;\n  }\n\n  init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'fastify',\n        ['>=3.0.0 <5'],\n        moduleExports => {\n          return this._patchConstructor(moduleExports);\n        }\n      ),\n    ];\n  }\n\n  private _hookOnRequest() {\n    const instrumentation = this;\n    return function onRequest(\n      request: FastifyRequest,\n      reply: FastifyReply,\n      done: HookHandlerDoneFunction\n    ) {\n      if (!instrumentation.isEnabled()) {\n        return done();\n      }\n      instrumentation._wrap(reply, 'send', instrumentation._patchSend());\n\n      const anyRequest = request as any;\n\n      const rpcMetadata = getRPCMetadata(context.active());\n      const routeName = anyRequest.routeOptions\n        ? anyRequest.routeOptions.url // since fastify@4.10.0\n        : request.routerPath;\n      if (routeName && rpcMetadata?.type === RPCType.HTTP) {\n        rpcMetadata.route = routeName;\n      }\n      done();\n    };\n  }\n\n  private _wrapHandler(\n    pluginName: string,\n    hookName: string,\n    original: (...args: unknown[]) => Promise<unknown>,\n    syncFunctionWithDone: boolean\n  ): () => Promise<unknown> {\n    const instrumentation = this;\n    this._diag.debug('Patching fastify route.handler function');\n\n    return function (this: any, ...args: unknown[]): Promise<unknown> {\n      if (!instrumentation.isEnabled()) {\n        return original.apply(this, args);\n      }\n\n      const name = original.name || pluginName || ANONYMOUS_NAME;\n      const spanName = `${FastifyNames.MIDDLEWARE} - ${name}`;\n\n      const reply = args[1] as PluginFastifyReply;\n\n      const span = startSpan(reply, instrumentation.tracer, spanName, {\n        [AttributeNames.FASTIFY_TYPE]: FastifyTypes.MIDDLEWARE,\n        [AttributeNames.PLUGIN_NAME]: pluginName,\n        [AttributeNames.HOOK_NAME]: hookName,\n      });\n\n      const origDone =\n        syncFunctionWithDone &&\n        (args[args.length - 1] as HookHandlerDoneFunction);\n      if (origDone) {\n        args[args.length - 1] = function (\n          ...doneArgs: Parameters<HookHandlerDoneFunction>\n        ) {\n          endSpan(reply);\n          origDone.apply(this, doneArgs);\n        };\n      }\n\n      return context.with(trace.setSpan(context.active(), span), () => {\n        return safeExecuteInTheMiddleMaybePromise(\n          () => {\n            return original.apply(this, args);\n          },\n          err => {\n            if (err instanceof Error) {\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message,\n              });\n              span.recordException(err);\n            }\n            // async hooks should end the span as soon as the promise is resolved\n            if (!syncFunctionWithDone) {\n              endSpan(reply);\n            }\n          }\n        );\n      });\n    };\n  }\n\n  private _wrapAddHook(): (\n    original: FastifyInstance['addHook']\n  ) => () => FastifyInstance {\n    const instrumentation = this;\n    this._diag.debug('Patching fastify server.addHook function');\n\n    return function (\n      original: FastifyInstance['addHook']\n    ): () => FastifyInstance {\n      return function wrappedAddHook(this: any, ...args: any) {\n        const name = args[0] as string;\n        const handler = args[1] as HandlerOriginal;\n        const pluginName = this.pluginName;\n        if (!hooksNamesToWrap.has(name)) {\n          return original.apply(this, args);\n        }\n\n        const syncFunctionWithDone =\n          typeof args[args.length - 1] === 'function' &&\n          handler.constructor.name !== 'AsyncFunction';\n\n        return original.apply(this, [\n          name,\n          instrumentation._wrapHandler(\n            pluginName,\n            name,\n            handler,\n            syncFunctionWithDone\n          ),\n        ] as never);\n      };\n    };\n  }\n\n  private _patchConstructor(moduleExports: {\n    fastify: () => FastifyInstance;\n  }): () => FastifyInstance {\n    const instrumentation = this;\n\n    function fastify(this: FastifyInstance, ...args: any) {\n      const app: FastifyInstance = moduleExports.fastify.apply(this, args);\n      app.addHook('onRequest', instrumentation._hookOnRequest());\n      app.addHook('preHandler', instrumentation._hookPreHandler());\n\n      instrumentation._wrap(app, 'addHook', instrumentation._wrapAddHook());\n\n      return app;\n    }\n\n    fastify.fastify = fastify;\n    fastify.default = fastify;\n    return fastify;\n  }\n\n  private _patchSend() {\n    const instrumentation = this;\n    this._diag.debug('Patching fastify reply.send function');\n\n    return function patchSend(\n      original: () => FastifyReply\n    ): () => FastifyReply {\n      return function send(this: FastifyReply, ...args: any) {\n        const maybeError: any = args[0];\n\n        if (!instrumentation.isEnabled()) {\n          return original.apply(this, args);\n        }\n\n        return safeExecuteInTheMiddle<FastifyReply>(\n          () => {\n            return original.apply(this, args);\n          },\n          err => {\n            if (!err && maybeError instanceof Error) {\n              err = maybeError;\n            }\n            endSpan(this, err);\n          }\n        );\n      };\n    };\n  }\n\n  private _hookPreHandler() {\n    const instrumentation = this;\n    this._diag.debug('Patching fastify preHandler function');\n\n    return function preHandler(\n      this: any,\n      request: FastifyRequest,\n      reply: FastifyReply,\n      done: HookHandlerDoneFunction\n    ) {\n      if (!instrumentation.isEnabled()) {\n        return done();\n      }\n      const anyRequest = request as any;\n\n      const handler =\n        anyRequest.routeOptions?.handler || anyRequest.context?.handler;\n\n      const handlerName = handler?.name.startsWith('bound ')\n        ? handler.name.substr(6)\n        : handler?.name;\n      const spanName = `${FastifyNames.REQUEST_HANDLER} - ${\n        handlerName || this.pluginName || ANONYMOUS_NAME\n      }`;\n\n      const spanAttributes: Attributes = {\n        [AttributeNames.PLUGIN_NAME]: this.pluginName,\n        [AttributeNames.FASTIFY_TYPE]: FastifyTypes.REQUEST_HANDLER,\n        [SEMATTRS_HTTP_ROUTE]: anyRequest.routeOptions\n          ? anyRequest.routeOptions.url // since fastify@4.10.0\n          : request.routerPath,\n      };\n      if (handlerName) {\n        spanAttributes[AttributeNames.FASTIFY_NAME] = handlerName;\n      }\n      const span = startSpan(\n        reply,\n        instrumentation.tracer,\n        spanName,\n        spanAttributes\n      );\n\n      if (instrumentation.getConfig().requestHook) {\n        safeExecuteInTheMiddle(\n          () => instrumentation.getConfig().requestHook!(span, { request }),\n          e => {\n            if (e) {\n              instrumentation._diag.error('request hook failed', e);\n            }\n          },\n          true\n        );\n      }\n\n      return context.with(trace.setSpan(context.active(), span), () => {\n        done();\n      });\n    };\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './enums/AttributeNames';\nexport * from './types';\nexport * from './instrumentation';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AllowedOperationTypes {\n  QUERY = 'query',\n  MUTATION = 'mutation',\n  SUBSCRIPTION = 'subscription',\n}\n\nexport enum TokenKind {\n  SOF = '<SOF>',\n  EOF = '<EOF>',\n  BANG = '!',\n  DOLLAR = '$',\n  AMP = '&',\n  PAREN_L = '(',\n  PAREN_R = ')',\n  SPREAD = '...',\n  COLON = ':',\n  EQUALS = '=',\n  AT = '@',\n  BRACKET_L = '[',\n  BRACKET_R = ']',\n  BRACE_L = '{',\n  PIPE = '|',\n  BRACE_R = '}',\n  NAME = 'Name',\n  INT = 'Int',\n  FLOAT = 'Float',\n  STRING = 'String',\n  BLOCK_STRING = 'BlockString',\n  COMMENT = 'Comment',\n}\n\nexport enum SpanNames {\n  EXECUTE = 'graphql.execute',\n  PARSE = 'graphql.parse',\n  RESOLVE = 'graphql.resolve',\n  VALIDATE = 'graphql.validate',\n  SCHEMA_VALIDATE = 'graphql.validateSchema',\n  SCHEMA_PARSE = 'graphql.parseSchema',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  SOURCE = 'graphql.source',\n  FIELD_NAME = 'graphql.field.name',\n  FIELD_PATH = 'graphql.field.path',\n  FIELD_TYPE = 'graphql.field.type',\n  OPERATION_TYPE = 'graphql.operation.type',\n  OPERATION_NAME = 'graphql.operation.name',\n  VARIABLES = 'graphql.variables.',\n  ERROR_VALIDATION_NAME = 'graphql.validation.error',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const OTEL_PATCHED_SYMBOL = Symbol.for('opentelemetry.patched');\n\nexport const OTEL_GRAPHQL_DATA_SYMBOL = Symbol.for(\n  'opentelemetry.graphql_data'\n);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport type * as graphqlTypes from 'graphql';\nimport type * as api from '@opentelemetry/api';\nimport type { PromiseOrValue } from 'graphql/jsutils/PromiseOrValue';\nimport type { DocumentNode } from 'graphql/language/ast';\nimport type {\n  GraphQLFieldResolver,\n  GraphQLTypeResolver,\n} from 'graphql/type/definition';\nimport { OTEL_GRAPHQL_DATA_SYMBOL, OTEL_PATCHED_SYMBOL } from './symbols';\nimport { GraphQLInstrumentationConfig } from './types';\n\nexport const OPERATION_NOT_SUPPORTED =\n  'Operation$operationName$not' + ' supported';\n\n/**\n * Merged and parsed config of default instrumentation config and GraphQL\n */\nexport type GraphQLInstrumentationParsedConfig =\n  Required<GraphQLInstrumentationConfig> & InstrumentationConfig;\n\nexport type executeFunctionWithObj = (\n  args: graphqlTypes.ExecutionArgs\n) => PromiseOrValue<graphqlTypes.ExecutionResult>;\n\nexport type executeArgumentsArray = [\n  graphqlTypes.GraphQLSchema,\n  graphqlTypes.DocumentNode,\n  any,\n  any,\n  Maybe<{ [key: string]: any }>,\n  Maybe<string>,\n  Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n  Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>\n];\n\nexport type executeFunctionWithArgs = (\n  schema: graphqlTypes.GraphQLSchema,\n  document: graphqlTypes.DocumentNode,\n  rootValue?: any,\n  contextValue?: any,\n  variableValues?: Maybe<{ [key: string]: any }>,\n  operationName?: Maybe<string>,\n  fieldResolver?: Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n  typeResolver?: Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>\n) => PromiseOrValue<graphqlTypes.ExecutionResult>;\n\nexport interface OtelExecutionArgs {\n  schema: graphqlTypes.GraphQLSchema;\n  document: DocumentNode & ObjectWithGraphQLData;\n  rootValue?: any;\n  contextValue?: any & ObjectWithGraphQLData;\n  variableValues?: Maybe<{ [key: string]: any }>;\n  operationName?: Maybe<string>;\n  fieldResolver?: Maybe<GraphQLFieldResolver<any, any> & OtelPatched>;\n  typeResolver?: Maybe<GraphQLTypeResolver<any, any>>;\n}\n\nexport type executeType = executeFunctionWithObj | executeFunctionWithArgs;\n\nexport type parseType = (\n  source: string | graphqlTypes.Source,\n  options?: graphqlTypes.ParseOptions\n) => graphqlTypes.DocumentNode;\n\nexport type validateType = (\n  schema: graphqlTypes.GraphQLSchema,\n  documentAST: graphqlTypes.DocumentNode,\n  rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n  options?: { maxErrors?: number },\n  typeInfo?: graphqlTypes.TypeInfo\n) => ReadonlyArray<graphqlTypes.GraphQLError>;\n\nexport interface GraphQLField {\n  parent: api.Span;\n  span: api.Span;\n  error: Error | null;\n}\n\ninterface OtelGraphQLData {\n  source?: any;\n  span: api.Span;\n  fields: { [key: string]: GraphQLField };\n}\n\nexport interface ObjectWithGraphQLData {\n  [OTEL_GRAPHQL_DATA_SYMBOL]?: OtelGraphQLData;\n}\n\nexport interface OtelPatched {\n  [OTEL_PATCHED_SYMBOL]?: boolean;\n}\n\nexport interface GraphQLPath {\n  prev: GraphQLPath | undefined;\n  key: string | number;\n  /**\n   * optional as it didn't exist yet in ver 14\n   */\n  typename?: string | undefined;\n}\n\n/**\n * Moving this type from ver 15 of graphql as it is nto available in ver. 14s\n * this way it can compile against ver 14.\n */\nexport type Maybe<T> = null | undefined | T;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as graphqlTypes from 'graphql';\nimport * as api from '@opentelemetry/api';\nimport { AllowedOperationTypes, SpanNames, TokenKind } from './enum';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { OTEL_GRAPHQL_DATA_SYMBOL, OTEL_PATCHED_SYMBOL } from './symbols';\nimport {\n  GraphQLField,\n  GraphQLPath,\n  GraphQLInstrumentationParsedConfig,\n  ObjectWithGraphQLData,\n  OtelPatched,\n  Maybe,\n} from './internal-types';\nimport { GraphQLInstrumentationConfig } from './types';\n\nconst OPERATION_VALUES = Object.values(AllowedOperationTypes);\n\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/isPromise.ts\nexport const isPromise = (value: any): value is Promise<unknown> => {\n  return typeof value?.then === 'function';\n};\n\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/isObjectLike.ts\nconst isObjectLike = (value: unknown): value is { [key: string]: unknown } => {\n  return typeof value == 'object' && value !== null;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction addInputVariableAttribute(span: api.Span, key: string, variable: any) {\n  if (Array.isArray(variable)) {\n    variable.forEach((value, idx) => {\n      addInputVariableAttribute(span, `${key}.${idx}`, value);\n    });\n  } else if (variable instanceof Object) {\n    Object.entries(variable).forEach(([nestedKey, value]) => {\n      addInputVariableAttribute(span, `${key}.${nestedKey}`, value);\n    });\n  } else {\n    span.setAttribute(`${AttributeNames.VARIABLES}${String(key)}`, variable);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function addInputVariableAttributes(\n  span: api.Span,\n  variableValues: { [key: string]: any }\n) {\n  Object.entries(variableValues).forEach(([key, value]) => {\n    addInputVariableAttribute(span, key, value);\n  });\n}\n\nexport function addSpanSource(\n  span: api.Span,\n  loc?: graphqlTypes.Location,\n  allowValues?: boolean,\n  start?: number,\n  end?: number\n): void {\n  const source = getSourceFromLocation(loc, allowValues, start, end);\n  span.setAttribute(AttributeNames.SOURCE, source);\n}\n\nfunction createFieldIfNotExists(\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n  contextValue: any,\n  info: graphqlTypes.GraphQLResolveInfo,\n  path: string[]\n): {\n  field: any;\n  spanAdded: boolean;\n} {\n  let field = getField(contextValue, path);\n\n  let spanAdded = false;\n\n  if (!field) {\n    spanAdded = true;\n    const parent = getParentField(contextValue, path);\n\n    field = {\n      parent,\n      span: createResolverSpan(\n        tracer,\n        getConfig,\n        contextValue,\n        info,\n        path,\n        parent.span\n      ),\n      error: null,\n    };\n\n    addField(contextValue, path, field);\n  }\n\n  return { spanAdded, field };\n}\n\nfunction createResolverSpan(\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n  contextValue: any,\n  info: graphqlTypes.GraphQLResolveInfo,\n  path: string[],\n  parentSpan?: api.Span\n): api.Span {\n  const attributes: api.SpanAttributes = {\n    [AttributeNames.FIELD_NAME]: info.fieldName,\n    [AttributeNames.FIELD_PATH]: path.join('.'),\n    [AttributeNames.FIELD_TYPE]: info.returnType.toString(),\n  };\n\n  const span = tracer.startSpan(\n    `${SpanNames.RESOLVE} ${attributes[AttributeNames.FIELD_PATH]}`,\n    {\n      attributes,\n    },\n    parentSpan ? api.trace.setSpan(api.context.active(), parentSpan) : undefined\n  );\n\n  const document = contextValue[OTEL_GRAPHQL_DATA_SYMBOL].source;\n  const fieldNode = info.fieldNodes.find(\n    fieldNode => fieldNode.kind === 'Field'\n  );\n\n  if (fieldNode) {\n    addSpanSource(\n      span,\n      document.loc,\n      getConfig().allowValues,\n      fieldNode.loc?.start,\n      fieldNode.loc?.end\n    );\n  }\n\n  return span;\n}\n\nexport function endSpan(span: api.Span, error?: Error): void {\n  if (error) {\n    span.recordException(error);\n  }\n  span.end();\n}\n\nexport function getOperation(\n  document: graphqlTypes.DocumentNode,\n  operationName?: Maybe<string>\n): graphqlTypes.DefinitionNode | undefined {\n  if (!document || !Array.isArray(document.definitions)) {\n    return undefined;\n  }\n\n  if (operationName) {\n    return document.definitions\n      .filter(\n        definition =>\n          OPERATION_VALUES.indexOf((definition as any)?.operation) !== -1\n      )\n      .find(definition => operationName === (definition as any)?.name?.value);\n  } else {\n    return document.definitions.find(\n      definition =>\n        OPERATION_VALUES.indexOf((definition as any)?.operation) !== -1\n    );\n  }\n}\n\nfunction addField(contextValue: any, path: string[], field: GraphQLField) {\n  return (contextValue[OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')] =\n    field);\n}\n\nfunction getField(contextValue: any, path: string[]) {\n  return contextValue[OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')];\n}\n\nfunction getParentField(contextValue: any, path: string[]) {\n  for (let i = path.length - 1; i > 0; i--) {\n    const field = getField(contextValue, path.slice(0, i));\n\n    if (field) {\n      return field;\n    }\n  }\n\n  return {\n    span: contextValue[OTEL_GRAPHQL_DATA_SYMBOL].span,\n  };\n}\n\nfunction pathToArray(mergeItems: boolean, path: GraphQLPath): string[] {\n  const flattened: string[] = [];\n  let curr: GraphQLPath | undefined = path;\n  while (curr) {\n    let key = curr.key;\n\n    if (mergeItems && typeof key === 'number') {\n      key = '*';\n    }\n    flattened.push(String(key));\n    curr = curr.prev;\n  }\n  return flattened.reverse();\n}\n\nfunction repeatBreak(i: number): string {\n  return repeatChar('\\n', i);\n}\n\nfunction repeatSpace(i: number): string {\n  return repeatChar(' ', i);\n}\n\nfunction repeatChar(char: string, to: number): string {\n  let text = '';\n  for (let i = 0; i < to; i++) {\n    text += char;\n  }\n  return text;\n}\n\nconst KindsToBeRemoved: string[] = [\n  TokenKind.FLOAT,\n  TokenKind.STRING,\n  TokenKind.INT,\n  TokenKind.BLOCK_STRING,\n];\n\nexport function getSourceFromLocation(\n  loc?: graphqlTypes.Location,\n  allowValues = false,\n  inputStart?: number,\n  inputEnd?: number\n): string {\n  let source = '';\n\n  if (loc?.startToken) {\n    const start = typeof inputStart === 'number' ? inputStart : loc.start;\n    const end = typeof inputEnd === 'number' ? inputEnd : loc.end;\n\n    let next: graphqlTypes.Token | null = loc.startToken.next;\n    let previousLine: number | undefined = 1;\n    while (next) {\n      if (next.start < start) {\n        next = next.next;\n        previousLine = next?.line;\n        continue;\n      }\n      if (next.end > end) {\n        next = next.next;\n        previousLine = next?.line;\n        continue;\n      }\n      let value = next.value || next.kind;\n      let space = '';\n      if (!allowValues && KindsToBeRemoved.indexOf(next.kind) >= 0) {\n        // value = repeatChar('*', value.length);\n        value = '*';\n      }\n      if (next.kind === TokenKind.STRING) {\n        value = `\"${value}\"`;\n      }\n      if (next.kind === TokenKind.EOF) {\n        value = '';\n      }\n      if (next.line > previousLine!) {\n        source += repeatBreak(next.line - previousLine!);\n        previousLine = next.line;\n        space = repeatSpace(next.column - 1);\n      } else {\n        if (next.line === next.prev?.line) {\n          space = repeatSpace(next.start - (next.prev?.end || 0));\n        }\n      }\n      source += space + value;\n      if (next) {\n        next = next.next!;\n      }\n    }\n  }\n\n  return source;\n}\n\nexport function wrapFields(\n  type: Maybe<graphqlTypes.GraphQLObjectType & OtelPatched>,\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig\n): void {\n  if (\n    !type ||\n    typeof type.getFields !== 'function' ||\n    type[OTEL_PATCHED_SYMBOL]\n  ) {\n    return;\n  }\n  const fields = type.getFields();\n\n  type[OTEL_PATCHED_SYMBOL] = true;\n\n  Object.keys(fields).forEach(key => {\n    const field = fields[key];\n\n    if (!field) {\n      return;\n    }\n\n    if (field.resolve) {\n      field.resolve = wrapFieldResolver(tracer, getConfig, field.resolve);\n    }\n\n    if (field.type) {\n      let unwrappedType: any = field.type;\n\n      while (unwrappedType.ofType) {\n        unwrappedType = unwrappedType.ofType;\n      }\n      wrapFields(unwrappedType, tracer, getConfig);\n    }\n  });\n}\n\nconst handleResolveSpanError = (\n  resolveSpan: api.Span,\n  err: any,\n  shouldEndSpan: boolean\n) => {\n  if (!shouldEndSpan) {\n    return;\n  }\n  resolveSpan.recordException(err);\n  resolveSpan.setStatus({\n    code: api.SpanStatusCode.ERROR,\n    message: err.message,\n  });\n  resolveSpan.end();\n};\n\nconst handleResolveSpanSuccess = (\n  resolveSpan: api.Span,\n  shouldEndSpan: boolean\n) => {\n  if (!shouldEndSpan) {\n    return;\n  }\n  resolveSpan.end();\n};\n\nexport function wrapFieldResolver<TSource = any, TContext = any, TArgs = any>(\n  tracer: api.Tracer,\n  getConfig: () => Required<GraphQLInstrumentationConfig>,\n  fieldResolver: Maybe<\n    graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs> & OtelPatched\n  >,\n  isDefaultResolver = false\n): graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs> & OtelPatched {\n  if (\n    (wrappedFieldResolver as OtelPatched)[OTEL_PATCHED_SYMBOL] ||\n    typeof fieldResolver !== 'function'\n  ) {\n    return fieldResolver!;\n  }\n\n  function wrappedFieldResolver(\n    this: graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>,\n    source: TSource,\n    args: TArgs,\n    contextValue: TContext & ObjectWithGraphQLData,\n    info: graphqlTypes.GraphQLResolveInfo\n  ) {\n    if (!fieldResolver) {\n      return undefined;\n    }\n    const config = getConfig();\n\n    // follows what graphql is doing to decide if this is a trivial resolver\n    // for which we don't need to create a resolve span\n    if (\n      config.ignoreTrivialResolveSpans &&\n      isDefaultResolver &&\n      (isObjectLike(source) || typeof source === 'function')\n    ) {\n      const property = (source as any)[info.fieldName];\n      // a function execution is not trivial and should be recorder.\n      // property which is not a function is just a value and we don't want a \"resolve\" span for it\n      if (typeof property !== 'function') {\n        return fieldResolver.call(this, source, args, contextValue, info);\n      }\n    }\n\n    if (!contextValue[OTEL_GRAPHQL_DATA_SYMBOL]) {\n      return fieldResolver.call(this, source, args, contextValue, info);\n    }\n    const path = pathToArray(config.mergeItems, info && info.path);\n    const depth = path.filter((item: any) => typeof item === 'string').length;\n\n    let field: any;\n    let shouldEndSpan = false;\n    if (config.depth >= 0 && config.depth < depth) {\n      field = getParentField(contextValue, path);\n    } else {\n      const newField = createFieldIfNotExists(\n        tracer,\n        getConfig,\n        contextValue,\n        info,\n        path\n      );\n      field = newField.field;\n      shouldEndSpan = newField.spanAdded;\n    }\n\n    return api.context.with(\n      api.trace.setSpan(api.context.active(), field.span),\n      () => {\n        try {\n          const res = fieldResolver.call(\n            this,\n            source,\n            args,\n            contextValue,\n            info\n          );\n          if (isPromise(res)) {\n            return res.then(\n              (r: any) => {\n                handleResolveSpanSuccess(field.span, shouldEndSpan);\n                return r;\n              },\n              (err: Error) => {\n                handleResolveSpanError(field.span, err, shouldEndSpan);\n                throw err;\n              }\n            );\n          } else {\n            handleResolveSpanSuccess(field.span, shouldEndSpan);\n            return res;\n          }\n        } catch (err: any) {\n          handleResolveSpanError(field.span, err, shouldEndSpan);\n          throw err;\n        }\n      }\n    );\n  }\n\n  (wrappedFieldResolver as OtelPatched)[OTEL_PATCHED_SYMBOL] = true;\n\n  return wrappedFieldResolver;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.42.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-graphql';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, trace } from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport type * as graphqlTypes from 'graphql';\nimport { SpanNames } from './enum';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { OTEL_GRAPHQL_DATA_SYMBOL } from './symbols';\n\nimport {\n  executeFunctionWithObj,\n  executeArgumentsArray,\n  executeType,\n  parseType,\n  validateType,\n  GraphQLInstrumentationParsedConfig,\n  OtelExecutionArgs,\n  ObjectWithGraphQLData,\n  OPERATION_NOT_SUPPORTED,\n  Maybe,\n} from './internal-types';\nimport {\n  addInputVariableAttributes,\n  addSpanSource,\n  endSpan,\n  getOperation,\n  isPromise,\n  wrapFieldResolver,\n  wrapFields,\n} from './utils';\n\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport * as api from '@opentelemetry/api';\nimport type { PromiseOrValue } from 'graphql/jsutils/PromiseOrValue';\nimport { GraphQLInstrumentationConfig } from './types';\n\nconst DEFAULT_CONFIG: GraphQLInstrumentationConfig = {\n  mergeItems: false,\n  depth: -1,\n  allowValues: false,\n  ignoreResolveSpans: false,\n};\n\nconst supportedVersions = ['>=14.0.0 <17'];\n\nexport class GraphQLInstrumentation extends InstrumentationBase {\n  constructor(config: GraphQLInstrumentationConfig = {}) {\n    super(\n      PACKAGE_NAME,\n      PACKAGE_VERSION,\n      Object.assign({}, DEFAULT_CONFIG, config)\n    );\n  }\n\n  private _getConfig(): GraphQLInstrumentationParsedConfig {\n    return this._config as GraphQLInstrumentationParsedConfig;\n  }\n\n  override setConfig(config: GraphQLInstrumentationConfig = {}) {\n    this._config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  protected init() {\n    const module = new InstrumentationNodeModuleDefinition(\n      'graphql',\n      supportedVersions\n    );\n    module.files.push(this._addPatchingExecute());\n    module.files.push(this._addPatchingParser());\n    module.files.push(this._addPatchingValidate());\n\n    return module;\n  }\n\n  private _addPatchingExecute(): InstrumentationNodeModuleFile {\n    return new InstrumentationNodeModuleFile(\n      'graphql/execution/execute.js',\n      supportedVersions,\n      // cannot make it work with appropriate type as execute function has 2\n      //types and/cannot import function but only types\n      (moduleExports: any) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'execute');\n        }\n        this._wrap(\n          moduleExports,\n          'execute',\n          this._patchExecute(moduleExports.defaultFieldResolver)\n        );\n        return moduleExports;\n      },\n      moduleExports => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'execute');\n        }\n      }\n    );\n  }\n\n  private _addPatchingParser(): InstrumentationNodeModuleFile {\n    return new InstrumentationNodeModuleFile(\n      'graphql/language/parser.js',\n      supportedVersions,\n      (moduleExports: typeof graphqlTypes) => {\n        if (isWrapped(moduleExports.parse)) {\n          this._unwrap(moduleExports, 'parse');\n        }\n        this._wrap(moduleExports, 'parse', this._patchParse());\n        return moduleExports;\n      },\n      (moduleExports: typeof graphqlTypes) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'parse');\n        }\n      }\n    );\n  }\n\n  private _addPatchingValidate(): InstrumentationNodeModuleFile {\n    return new InstrumentationNodeModuleFile(\n      'graphql/validation/validate.js',\n      supportedVersions,\n      moduleExports => {\n        if (isWrapped(moduleExports.validate)) {\n          this._unwrap(moduleExports, 'validate');\n        }\n        this._wrap(moduleExports, 'validate', this._patchValidate());\n        return moduleExports;\n      },\n      moduleExports => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'validate');\n        }\n      }\n    );\n  }\n\n  private _patchExecute(\n    defaultFieldResolved: graphqlTypes.GraphQLFieldResolver<any, any>\n  ): (original: executeType) => executeType {\n    const instrumentation = this;\n    return function execute(original) {\n      return function patchExecute(\n        this: executeType\n      ): PromiseOrValue<graphqlTypes.ExecutionResult> {\n        let processedArgs: OtelExecutionArgs;\n\n        // case when apollo server is used for example\n        if (arguments.length >= 2) {\n          const args = arguments as unknown as executeArgumentsArray;\n          processedArgs = instrumentation._wrapExecuteArgs(\n            args[0],\n            args[1],\n            args[2],\n            args[3],\n            args[4],\n            args[5],\n            args[6],\n            args[7],\n            defaultFieldResolved\n          );\n        } else {\n          const args = arguments[0] as graphqlTypes.ExecutionArgs;\n          processedArgs = instrumentation._wrapExecuteArgs(\n            args.schema,\n            args.document,\n            args.rootValue,\n            args.contextValue,\n            args.variableValues,\n            args.operationName,\n            args.fieldResolver,\n            args.typeResolver,\n            defaultFieldResolved\n          );\n        }\n\n        const operation = getOperation(\n          processedArgs.document,\n          processedArgs.operationName\n        );\n\n        const span = instrumentation._createExecuteSpan(\n          operation,\n          processedArgs\n        );\n\n        processedArgs.contextValue[OTEL_GRAPHQL_DATA_SYMBOL] = {\n          source: processedArgs.document\n            ? processedArgs.document ||\n              (processedArgs.document as ObjectWithGraphQLData)[\n                OTEL_GRAPHQL_DATA_SYMBOL\n              ]\n            : undefined,\n          span,\n          fields: {},\n        };\n\n        return context.with(trace.setSpan(context.active(), span), () => {\n          return safeExecuteInTheMiddle<\n            PromiseOrValue<graphqlTypes.ExecutionResult>\n          >(\n            () => {\n              return (original as executeFunctionWithObj).apply(this, [\n                processedArgs,\n              ]);\n            },\n            (err, result) => {\n              instrumentation._handleExecutionResult(span, err, result);\n            }\n          );\n        });\n      };\n    };\n  }\n\n  private _handleExecutionResult(\n    span: api.Span,\n    err?: Error,\n    result?: PromiseOrValue<graphqlTypes.ExecutionResult>\n  ) {\n    const config = this._getConfig();\n    if (result === undefined || err) {\n      endSpan(span, err);\n      return;\n    }\n\n    if (isPromise(result)) {\n      (result as Promise<graphqlTypes.ExecutionResult>).then(\n        resultData => {\n          if (typeof config.responseHook !== 'function') {\n            endSpan(span);\n            return;\n          }\n          this._executeResponseHook(span, resultData);\n        },\n        error => {\n          endSpan(span, error);\n        }\n      );\n    } else {\n      if (typeof config.responseHook !== 'function') {\n        endSpan(span);\n        return;\n      }\n      this._executeResponseHook(span, result as graphqlTypes.ExecutionResult);\n    }\n  }\n\n  private _executeResponseHook(\n    span: api.Span,\n    result: graphqlTypes.ExecutionResult\n  ) {\n    const config = this._getConfig();\n    safeExecuteInTheMiddle(\n      () => {\n        config.responseHook(span, result);\n      },\n      err => {\n        if (err) {\n          this._diag.error('Error running response hook', err);\n        }\n\n        endSpan(span, undefined);\n      },\n      true\n    );\n  }\n\n  private _patchParse(): (original: parseType) => parseType {\n    const instrumentation = this;\n    return function parse(original) {\n      return function patchParse(\n        this: parseType,\n        source: string | graphqlTypes.Source,\n        options?: graphqlTypes.ParseOptions\n      ): graphqlTypes.DocumentNode {\n        return instrumentation._parse(this, original, source, options);\n      };\n    };\n  }\n\n  private _patchValidate(): (original: validateType) => validateType {\n    const instrumentation = this;\n    return function validate(original: validateType) {\n      return function patchValidate(\n        this: validateType,\n        schema: graphqlTypes.GraphQLSchema,\n        documentAST: graphqlTypes.DocumentNode,\n        rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n        options?: { maxErrors?: number },\n        typeInfo?: graphqlTypes.TypeInfo\n      ): ReadonlyArray<graphqlTypes.GraphQLError> {\n        return instrumentation._validate(\n          this,\n          original,\n          schema,\n          documentAST,\n          rules,\n          typeInfo,\n          options\n        );\n      };\n    };\n  }\n\n  private _parse(\n    obj: parseType,\n    original: parseType,\n    source: string | graphqlTypes.Source,\n    options?: graphqlTypes.ParseOptions\n  ): graphqlTypes.DocumentNode {\n    const config = this._getConfig();\n    const span = this.tracer.startSpan(SpanNames.PARSE);\n\n    return context.with(trace.setSpan(context.active(), span), () => {\n      return safeExecuteInTheMiddle<\n        graphqlTypes.DocumentNode & ObjectWithGraphQLData\n      >(\n        () => {\n          return original.call(obj, source, options);\n        },\n        (err, result) => {\n          if (result) {\n            const operation = getOperation(result);\n            if (!operation) {\n              span.updateName(SpanNames.SCHEMA_PARSE);\n            } else if (result.loc) {\n              addSpanSource(span, result.loc, config.allowValues);\n            }\n          }\n          endSpan(span, err);\n        }\n      );\n    });\n  }\n\n  private _validate(\n    obj: validateType,\n    original: validateType,\n    schema: graphqlTypes.GraphQLSchema,\n    documentAST: graphqlTypes.DocumentNode,\n    rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n    typeInfo?: graphqlTypes.TypeInfo,\n    options?: { maxErrors?: number }\n  ): ReadonlyArray<graphqlTypes.GraphQLError> {\n    const span = this.tracer.startSpan(SpanNames.VALIDATE, {});\n\n    return context.with(trace.setSpan(context.active(), span), () => {\n      return safeExecuteInTheMiddle<ReadonlyArray<graphqlTypes.GraphQLError>>(\n        () => {\n          return original.call(\n            obj,\n            schema,\n            documentAST,\n            rules,\n            options,\n            typeInfo\n          );\n        },\n        (err, errors) => {\n          if (!documentAST.loc) {\n            span.updateName(SpanNames.SCHEMA_VALIDATE);\n          }\n          if (errors && errors.length) {\n            span.recordException({\n              name: AttributeNames.ERROR_VALIDATION_NAME,\n              message: JSON.stringify(errors),\n            });\n          }\n          endSpan(span, err);\n        }\n      );\n    });\n  }\n\n  private _createExecuteSpan(\n    operation: graphqlTypes.DefinitionNode | undefined,\n    processedArgs: graphqlTypes.ExecutionArgs\n  ): api.Span {\n    const config = this._getConfig();\n\n    const span = this.tracer.startSpan(SpanNames.EXECUTE, {});\n    if (operation) {\n      const { operation: operationType, name: nameNode } =\n        operation as graphqlTypes.OperationDefinitionNode;\n\n      span.setAttribute(AttributeNames.OPERATION_TYPE, operationType);\n\n      const operationName = nameNode?.value;\n\n      // https://opentelemetry.io/docs/reference/specification/trace/semantic_conventions/instrumentation/graphql/\n      // > The span name MUST be of the format <graphql.operation.type> <graphql.operation.name> provided that graphql.operation.type and graphql.operation.name are available.\n      // > If graphql.operation.name is not available, the span SHOULD be named <graphql.operation.type>.\n      if (operationName) {\n        span.setAttribute(AttributeNames.OPERATION_NAME, operationName);\n        span.updateName(`${operationType} ${operationName}`);\n      } else {\n        span.updateName(operationType);\n      }\n    } else {\n      let operationName = ' ';\n      if (processedArgs.operationName) {\n        operationName = ` \"${processedArgs.operationName}\" `;\n      }\n      operationName = OPERATION_NOT_SUPPORTED.replace(\n        '$operationName$',\n        operationName\n      );\n      span.setAttribute(AttributeNames.OPERATION_NAME, operationName);\n    }\n\n    if (processedArgs.document?.loc) {\n      addSpanSource(span, processedArgs.document.loc, config.allowValues);\n    }\n\n    if (processedArgs.variableValues && config.allowValues) {\n      addInputVariableAttributes(span, processedArgs.variableValues);\n    }\n\n    return span;\n  }\n\n  private _wrapExecuteArgs(\n    schema: graphqlTypes.GraphQLSchema,\n    document: graphqlTypes.DocumentNode,\n    rootValue: any,\n    contextValue: any,\n    variableValues: Maybe<{ [key: string]: any }>,\n    operationName: Maybe<string>,\n    fieldResolver: Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n    typeResolver: Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n    defaultFieldResolved: graphqlTypes.GraphQLFieldResolver<any, any>\n  ): OtelExecutionArgs {\n    if (!contextValue) {\n      contextValue = {};\n    }\n\n    if (\n      contextValue[OTEL_GRAPHQL_DATA_SYMBOL] ||\n      this._getConfig().ignoreResolveSpans\n    ) {\n      return {\n        schema,\n        document,\n        rootValue,\n        contextValue,\n        variableValues,\n        operationName,\n        fieldResolver,\n        typeResolver,\n      };\n    }\n\n    const isUsingDefaultResolver = fieldResolver == null;\n    // follows graphql implementation here:\n    // https://github.com/graphql/graphql-js/blob/0b7daed9811731362c71900e12e5ea0d1ecc7f1f/src/execution/execute.ts#L494\n    const fieldResolverForExecute = fieldResolver ?? defaultFieldResolved;\n    fieldResolver = wrapFieldResolver(\n      this.tracer,\n      this._getConfig.bind(this),\n      fieldResolverForExecute,\n      isUsingDefaultResolver\n    );\n\n    if (schema) {\n      wrapFields(\n        schema.getQueryType(),\n        this.tracer,\n        this._getConfig.bind(this)\n      );\n      wrapFields(\n        schema.getMutationType(),\n        this.tracer,\n        this._getConfig.bind(this)\n      );\n    }\n\n    return {\n      schema,\n      document,\n      rootValue,\n      contextValue,\n      variableValues,\n      operationName,\n      fieldResolver,\n      typeResolver,\n    };\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport { Span } from '@opentelemetry/api';\n\nexport interface MongoDBInstrumentationExecutionResponseHook {\n  (span: Span, responseInfo: MongoResponseHookInformation): void;\n}\n\n/**\n * Function that can be used to serialize db.statement tag\n * @param cmd - MongoDB command object\n *\n * @returns serialized string that will be used as the db.statement attribute.\n */\nexport type DbStatementSerializer = (cmd: Record<string, unknown>) => string;\n\nexport interface MongoDBInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * If true, additional information about query parameters and\n   * results will be attached (as `attributes`) to spans representing\n   * database operations.\n   */\n  enhancedDatabaseReporting?: boolean;\n\n  /**\n   * Hook that allows adding custom span attributes based on the data\n   * returned from MongoDB actions.\n   *\n   * @default undefined\n   */\n  responseHook?: MongoDBInstrumentationExecutionResponseHook;\n\n  /**\n   * Custom serializer function for the db.statement tag\n   */\n  dbStatementSerializer?: DbStatementSerializer;\n}\n\nexport type Func<T> = (...args: unknown[]) => T;\nexport type MongoInternalCommand = {\n  findandmodify: boolean;\n  createIndexes: boolean;\n  count: boolean;\n  aggregate: boolean;\n  ismaster: boolean;\n  indexes?: unknown[];\n  query?: Record<string, unknown>;\n  limit?: number;\n  q?: Record<string, unknown>;\n  u?: Record<string, unknown>;\n};\n\nexport type ServerSession = {\n  id: any;\n  lastUse: number;\n  txnNumber: number;\n  isDirty: boolean;\n};\n\nexport type CursorState = { cmd: MongoInternalCommand } & Record<\n  string,\n  unknown\n>;\n\nexport interface MongoResponseHookInformation {\n  data: CommandResult;\n}\n\n// https://github.com/mongodb/node-mongodb-native/blob/3.6/lib/core/connection/command_result.js\nexport type CommandResult = {\n  result?: unknown;\n  connection?: unknown;\n  message?: unknown;\n};\n\n// https://github.com/mongodb/node-mongodb-native/blob/3.6/lib/core/wireprotocol/index.js\nexport type WireProtocolInternal = {\n  insert: (\n    server: MongoInternalTopology,\n    ns: string,\n    ops: unknown[],\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n  update: (\n    server: MongoInternalTopology,\n    ns: string,\n    ops: unknown[],\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n  remove: (\n    server: MongoInternalTopology,\n    ns: string,\n    ops: unknown[],\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n  killCursors: (\n    server: MongoInternalTopology,\n    ns: string,\n    cursorState: CursorState,\n    callback: Function\n  ) => unknown;\n  getMore: (\n    server: MongoInternalTopology,\n    ns: string,\n    cursorState: CursorState,\n    batchSize: number,\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n  query: (\n    server: MongoInternalTopology,\n    ns: string,\n    cmd: MongoInternalCommand,\n    cursorState: CursorState,\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n  command: (\n    server: MongoInternalTopology,\n    ns: string,\n    cmd: MongoInternalCommand,\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n};\n\n// https://github.com/mongodb/node-mongodb-native/blob/3.6/lib/topologies/server.js#L172\n// https://github.com/mongodb/node-mongodb-native/blob/2.2/lib/server.js#L174\nexport type MongoInternalTopology = {\n  s?: {\n    // those are for mongodb@3\n    options?: {\n      host?: string;\n      port?: number;\n      servername?: string;\n    };\n    // those are for mongodb@2\n    host?: string;\n    port?: number;\n  };\n  // mongodb@3 with useUnifiedTopology option\n  description?: {\n    address?: string;\n  };\n};\n\nexport enum MongodbCommandType {\n  CREATE_INDEXES = 'createIndexes',\n  FIND_AND_MODIFY = 'findAndModify',\n  IS_MASTER = 'isMaster',\n  COUNT = 'count',\n  AGGREGATE = 'aggregate',\n  UNKNOWN = 'unknown',\n}\n\n// https://github.com/mongodb/js-bson/blob/main/src/bson.ts\nexport type Document = {\n  [key: string]: any;\n};\n\n// https://github.com/mongodb/node-mongodb-native/blob/v6.4.0/src/utils.ts#L281\nexport interface MongodbNamespace {\n  db: string;\n  collection?: string;\n}\n\nexport type V4Connection = {\n  command: Function;\n  // From version 6.4.0 the method does not expect a callback and returns a promise\n  // https://github.com/mongodb/node-mongodb-native/blob/v6.4.2/src/cmap/connection.ts\n  commandPromise(\n    ns: MongodbNamespace,\n    cmd: Document,\n    options: undefined | unknown,\n    // From v6.6.0 we have this new param which is a constructor function\n    // https://github.com/mongodb/node-mongodb-native/blob/v6.6.0/src/cmap/connection.ts#L588\n    responseType: undefined | unknown\n  ): Promise<any>;\n  // Earlier versions expect a callback param and return void\n  // https://github.com/mongodb/node-mongodb-native/blob/v4.2.2/src/cmap/connection.ts\n  commandCallback(\n    ns: MongodbNamespace,\n    cmd: Document,\n    options: undefined | unknown,\n    callback: any\n  ): void;\n};\n\n// https://github.com/mongodb/node-mongodb-native/blob/v4.2.2/src/cmap/connection_pool.ts\nexport type V4ConnectionPool = {\n  // Instrumentation just cares about carrying the async context so\n  // types of callback params are not needed\n  checkOut: (callback: (error: any, connection: any) => void) => void;\n};\n\nexport type V4Connect = {\n  connect: Function;\n  // From version 6.4.0 the method does not expect a callback and returns a promise\n  // https://github.com/mongodb/node-mongodb-native/blob/v6.4.0/src/cmap/connect.ts\n  connectPromise: (options: any) => Promise<any>;\n  // Earlier versions expect a callback param and return void\n  // https://github.com/mongodb/node-mongodb-native/blob/v4.2.2/src/cmap/connect.ts\n  connectCallback: (options: any, callback: any) => void;\n};\n\n// https://github.com/mongodb/node-mongodb-native/blob/v4.2.2/src/sessions.ts\nexport type V4Session = {\n  acquire: () => ServerSession;\n  release: (session: ServerSession) => void;\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.46.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-mongodb';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  context,\n  trace,\n  Span,\n  SpanKind,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  DBSYSTEMVALUES_MONGODB,\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_DB_MONGODB_COLLECTION,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_OPERATION,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\nimport { MongoDBInstrumentationConfig, CommandResult } from './types';\nimport {\n  CursorState,\n  ServerSession,\n  MongodbCommandType,\n  MongoInternalCommand,\n  MongodbNamespace,\n  MongoInternalTopology,\n  WireProtocolInternal,\n  V4Connection,\n  V4ConnectionPool,\n} from './internal-types';\nimport { V4Connect, V4Session } from './internal-types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { UpDownCounter } from '@opentelemetry/api';\n\n/** mongodb instrumentation plugin for OpenTelemetry */\nexport class MongoDBInstrumentation extends InstrumentationBase {\n  private _connectionsUsage!: UpDownCounter;\n  private _poolName!: string;\n\n  protected override _config!: MongoDBInstrumentationConfig;\n\n  constructor(config: MongoDBInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  override _updateMetricInstruments() {\n    this._connectionsUsage = this.meter.createUpDownCounter(\n      'db.client.connections.usage',\n      {\n        description:\n          'The number of connections that are currently in state described by the state attribute.',\n        unit: '{connection}',\n      }\n    );\n  }\n\n  init() {\n    const {\n      v3PatchConnection: v3PatchConnection,\n      v3UnpatchConnection: v3UnpatchConnection,\n    } = this._getV3ConnectionPatches();\n\n    const { v4PatchConnect, v4UnpatchConnect } = this._getV4ConnectPatches();\n    const {\n      v4PatchConnectionCallback,\n      v4PatchConnectionPromise,\n      v4UnpatchConnection,\n    } = this._getV4ConnectionPatches();\n    const { v4PatchConnectionPool, v4UnpatchConnectionPool } =\n      this._getV4ConnectionPoolPatches();\n    const { v4PatchSessions, v4UnpatchSessions } = this._getV4SessionsPatches();\n\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'mongodb',\n        ['>=3.3.0 <4'],\n        undefined,\n        undefined,\n        [\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/core/wireprotocol/index.js',\n            ['>=3.3.0 <4'],\n            v3PatchConnection,\n            v3UnpatchConnection\n          ),\n        ]\n      ),\n      new InstrumentationNodeModuleDefinition(\n        'mongodb',\n        ['>=4.0.0 <7'],\n        undefined,\n        undefined,\n        [\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/cmap/connection.js',\n            ['>=4.0.0 <6.4'],\n            v4PatchConnectionCallback,\n            v4UnpatchConnection\n          ),\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/cmap/connection.js',\n            ['>=6.4.0 <7'],\n            v4PatchConnectionPromise,\n            v4UnpatchConnection\n          ),\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/cmap/connection_pool.js',\n            ['>=4.0.0 <6.4'],\n            v4PatchConnectionPool,\n            v4UnpatchConnectionPool\n          ),\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/cmap/connect.js',\n            ['>=4.0.0 <7'],\n            v4PatchConnect,\n            v4UnpatchConnect\n          ),\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/sessions.js',\n            ['>=4.0.0 <7'],\n            v4PatchSessions,\n            v4UnpatchSessions\n          ),\n        ]\n      ),\n    ];\n  }\n\n  private _getV3ConnectionPatches<T extends WireProtocolInternal>() {\n    return {\n      v3PatchConnection: (moduleExports: T) => {\n        // patch insert operation\n        if (isWrapped(moduleExports.insert)) {\n          this._unwrap(moduleExports, 'insert');\n        }\n        this._wrap(\n          moduleExports,\n          'insert',\n          this._getV3PatchOperation('insert')\n        );\n        // patch remove operation\n        if (isWrapped(moduleExports.remove)) {\n          this._unwrap(moduleExports, 'remove');\n        }\n        this._wrap(\n          moduleExports,\n          'remove',\n          this._getV3PatchOperation('remove')\n        );\n        // patch update operation\n        if (isWrapped(moduleExports.update)) {\n          this._unwrap(moduleExports, 'update');\n        }\n        this._wrap(\n          moduleExports,\n          'update',\n          this._getV3PatchOperation('update')\n        );\n        // patch other command\n        if (isWrapped(moduleExports.command)) {\n          this._unwrap(moduleExports, 'command');\n        }\n        this._wrap(moduleExports, 'command', this._getV3PatchCommand());\n        // patch query\n        if (isWrapped(moduleExports.query)) {\n          this._unwrap(moduleExports, 'query');\n        }\n        this._wrap(moduleExports, 'query', this._getV3PatchFind());\n        // patch get more operation on cursor\n        if (isWrapped(moduleExports.getMore)) {\n          this._unwrap(moduleExports, 'getMore');\n        }\n        this._wrap(moduleExports, 'getMore', this._getV3PatchCursor());\n        return moduleExports;\n      },\n      v3UnpatchConnection: (moduleExports?: T) => {\n        if (moduleExports === undefined) return;\n        this._unwrap(moduleExports, 'insert');\n        this._unwrap(moduleExports, 'remove');\n        this._unwrap(moduleExports, 'update');\n        this._unwrap(moduleExports, 'command');\n        this._unwrap(moduleExports, 'query');\n        this._unwrap(moduleExports, 'getMore');\n      },\n    };\n  }\n\n  private _getV4SessionsPatches<T extends V4Session>() {\n    return {\n      v4PatchSessions: (moduleExports: any) => {\n        if (isWrapped(moduleExports.acquire)) {\n          this._unwrap(moduleExports, 'acquire');\n        }\n        this._wrap(\n          moduleExports.ServerSessionPool.prototype,\n          'acquire',\n          this._getV4AcquireCommand()\n        );\n\n        if (isWrapped(moduleExports.release)) {\n          this._unwrap(moduleExports, 'release');\n        }\n        this._wrap(\n          moduleExports.ServerSessionPool.prototype,\n          'release',\n          this._getV4ReleaseCommand()\n        );\n        return moduleExports;\n      },\n      v4UnpatchSessions: (moduleExports?: T) => {\n        if (moduleExports === undefined) return;\n        if (isWrapped(moduleExports.acquire)) {\n          this._unwrap(moduleExports, 'acquire');\n        }\n        if (isWrapped(moduleExports.release)) {\n          this._unwrap(moduleExports, 'release');\n        }\n      },\n    };\n  }\n\n  private _getV4AcquireCommand() {\n    const instrumentation = this;\n    return (original: V4Session['acquire']) => {\n      return function patchAcquire(this: any) {\n        const nSessionsBeforeAcquire = this.sessions.length;\n        const session = original.call(this);\n        const nSessionsAfterAcquire = this.sessions.length;\n\n        if (nSessionsBeforeAcquire === nSessionsAfterAcquire) {\n          //no session in the pool. a new session was created and used\n          instrumentation._connectionsUsage.add(1, {\n            state: 'used',\n            'pool.name': instrumentation._poolName,\n          });\n        } else if (nSessionsBeforeAcquire - 1 === nSessionsAfterAcquire) {\n          //a session was already in the pool. remove it from the pool and use it.\n          instrumentation._connectionsUsage.add(-1, {\n            state: 'idle',\n            'pool.name': instrumentation._poolName,\n          });\n          instrumentation._connectionsUsage.add(1, {\n            state: 'used',\n            'pool.name': instrumentation._poolName,\n          });\n        }\n        return session;\n      };\n    };\n  }\n\n  private _getV4ReleaseCommand() {\n    const instrumentation = this;\n    return (original: V4Session['release']) => {\n      return function patchRelease(this: any, session: ServerSession) {\n        const cmdPromise = original.call(this, session);\n\n        instrumentation._connectionsUsage.add(-1, {\n          state: 'used',\n          'pool.name': instrumentation._poolName,\n        });\n        instrumentation._connectionsUsage.add(1, {\n          state: 'idle',\n          'pool.name': instrumentation._poolName,\n        });\n        return cmdPromise;\n      };\n    };\n  }\n\n  private _getV4ConnectionPoolPatches<T extends V4ConnectionPool>() {\n    return {\n      v4PatchConnectionPool: (moduleExports: any) => {\n        const poolPrototype = moduleExports.ConnectionPool.prototype;\n\n        if (isWrapped(poolPrototype.checkOut)) {\n          this._unwrap(poolPrototype, 'checkOut');\n        }\n\n        this._wrap(\n          poolPrototype,\n          'checkOut',\n          this._getV4ConnectionPoolCheckOut()\n        );\n        return moduleExports;\n      },\n      v4UnpatchConnectionPool: (moduleExports?: any) => {\n        if (moduleExports === undefined) return;\n\n        this._unwrap(moduleExports.ConnectionPool.prototype, 'checkOut');\n      },\n    };\n  }\n\n  private _getV4ConnectPatches<T extends V4Connect>() {\n    return {\n      v4PatchConnect: (moduleExports: any) => {\n        if (isWrapped(moduleExports.connect)) {\n          this._unwrap(moduleExports, 'connect');\n        }\n\n        this._wrap(moduleExports, 'connect', this._getV4ConnectCommand());\n        return moduleExports;\n      },\n      v4UnpatchConnect: (moduleExports?: T) => {\n        if (moduleExports === undefined) return;\n\n        this._unwrap(moduleExports, 'connect');\n      },\n    };\n  }\n\n  // This patch will become unnecessary once\n  // https://jira.mongodb.org/browse/NODE-5639 is done.\n  private _getV4ConnectionPoolCheckOut() {\n    return (original: V4ConnectionPool['checkOut']) => {\n      return function patchedCheckout(this: unknown, callback: any) {\n        const patchedCallback = context.bind(context.active(), callback);\n        return original.call(this, patchedCallback);\n      };\n    };\n  }\n\n  private _getV4ConnectCommand() {\n    const instrumentation = this;\n\n    return (\n      original: V4Connect['connectCallback'] | V4Connect['connectPromise']\n    ) => {\n      return function patchedConnect(\n        this: unknown,\n        options: any,\n        callback: any\n      ) {\n        // from v6.4 `connect` method only accepts an options param and returns a promise\n        // with the connection\n        if (original.length === 1) {\n          const result = (original as V4Connect['connectPromise']).call(\n            this,\n            options\n          );\n          if (result && typeof result.then === 'function') {\n            result.then(\n              () => instrumentation.setPoolName(options),\n              // this handler is set to pass the lint rules\n              () => undefined\n            );\n          }\n          return result;\n        }\n\n        // Earlier versions expects a callback param and return void\n        const patchedCallback = function (err: any, conn: any) {\n          if (err || !conn) {\n            callback(err, conn);\n            return;\n          }\n          instrumentation.setPoolName(options);\n          callback(err, conn);\n        };\n\n        return (original as V4Connect['connectCallback']).call(\n          this,\n          options,\n          patchedCallback\n        );\n      };\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private _getV4ConnectionPatches<T extends V4Connection>() {\n    return {\n      v4PatchConnectionCallback: (moduleExports: any) => {\n        // patch insert operation\n        if (isWrapped(moduleExports.Connection.prototype.command)) {\n          this._unwrap(moduleExports.Connection.prototype, 'command');\n        }\n\n        this._wrap(\n          moduleExports.Connection.prototype,\n          'command',\n          this._getV4PatchCommandCallback()\n        );\n        return moduleExports;\n      },\n      v4PatchConnectionPromise: (moduleExports: any) => {\n        // patch insert operation\n        if (isWrapped(moduleExports.Connection.prototype.command)) {\n          this._unwrap(moduleExports.Connection.prototype, 'command');\n        }\n\n        this._wrap(\n          moduleExports.Connection.prototype,\n          'command',\n          this._getV4PatchCommandPromise()\n        );\n        return moduleExports;\n      },\n      v4UnpatchConnection: (moduleExports?: any) => {\n        if (moduleExports === undefined) return;\n        this._unwrap(moduleExports.Connection.prototype, 'command');\n      },\n    };\n  }\n\n  /** Creates spans for common operations */\n  private _getV3PatchOperation(operationName: 'insert' | 'update' | 'remove') {\n    const instrumentation = this;\n    return (original: WireProtocolInternal[typeof operationName]) => {\n      return function patchedServerCommand(\n        this: unknown,\n        server: MongoInternalTopology,\n        ns: string,\n        ops: unknown[],\n        options: unknown | Function,\n        callback?: Function\n      ) {\n        const currentSpan = trace.getSpan(context.active());\n        const resultHandler =\n          typeof options === 'function' ? options : callback;\n        if (\n          !currentSpan ||\n          typeof resultHandler !== 'function' ||\n          typeof ops !== 'object'\n        ) {\n          if (typeof options === 'function') {\n            return original.call(this, server, ns, ops, options);\n          } else {\n            return original.call(this, server, ns, ops, options, callback);\n          }\n        }\n        const span = instrumentation.tracer.startSpan(\n          `mongodb.${operationName}`,\n          {\n            kind: SpanKind.CLIENT,\n          }\n        );\n\n        instrumentation._populateV3Attributes(\n          span,\n          ns,\n          server,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ops[0] as any,\n          operationName\n        );\n        const patchedCallback = instrumentation._patchEnd(span, resultHandler);\n        // handle when options is the callback to send the correct number of args\n        if (typeof options === 'function') {\n          return original.call(this, server, ns, ops, patchedCallback);\n        } else {\n          return original.call(this, server, ns, ops, options, patchedCallback);\n        }\n      };\n    };\n  }\n\n  /** Creates spans for command operation */\n  private _getV3PatchCommand() {\n    const instrumentation = this;\n    return (original: WireProtocolInternal['command']) => {\n      return function patchedServerCommand(\n        this: unknown,\n        server: MongoInternalTopology,\n        ns: string,\n        cmd: MongoInternalCommand,\n        options: unknown | Function,\n        callback?: Function\n      ) {\n        const currentSpan = trace.getSpan(context.active());\n        const resultHandler =\n          typeof options === 'function' ? options : callback;\n        if (\n          !currentSpan ||\n          typeof resultHandler !== 'function' ||\n          typeof cmd !== 'object'\n        ) {\n          if (typeof options === 'function') {\n            return original.call(this, server, ns, cmd, options);\n          } else {\n            return original.call(this, server, ns, cmd, options, callback);\n          }\n        }\n        const commandType = MongoDBInstrumentation._getCommandType(cmd);\n        const type =\n          commandType === MongodbCommandType.UNKNOWN ? 'command' : commandType;\n        const span = instrumentation.tracer.startSpan(`mongodb.${type}`, {\n          kind: SpanKind.CLIENT,\n        });\n        const operation =\n          commandType === MongodbCommandType.UNKNOWN ? undefined : commandType;\n        instrumentation._populateV3Attributes(span, ns, server, cmd, operation);\n        const patchedCallback = instrumentation._patchEnd(span, resultHandler);\n        // handle when options is the callback to send the correct number of args\n        if (typeof options === 'function') {\n          return original.call(this, server, ns, cmd, patchedCallback);\n        } else {\n          return original.call(this, server, ns, cmd, options, patchedCallback);\n        }\n      };\n    };\n  }\n\n  /** Creates spans for command operation */\n  private _getV4PatchCommandCallback() {\n    const instrumentation = this;\n    return (original: V4Connection['commandCallback']) => {\n      return function patchedV4ServerCommand(\n        this: any,\n        ns: MongodbNamespace,\n        cmd: any,\n        options: undefined | unknown,\n        callback: any\n      ) {\n        const currentSpan = trace.getSpan(context.active());\n        const resultHandler = callback;\n        const commandType = Object.keys(cmd)[0];\n\n        if (\n          typeof resultHandler !== 'function' ||\n          typeof cmd !== 'object' ||\n          cmd.ismaster ||\n          cmd.hello\n        ) {\n          return original.call(this, ns, cmd, options, callback);\n        }\n\n        let span = undefined;\n        if (currentSpan) {\n          span = instrumentation.tracer.startSpan(`mongodb.${commandType}`, {\n            kind: SpanKind.CLIENT,\n          });\n          instrumentation._populateV4Attributes(\n            span,\n            this,\n            ns,\n            cmd,\n            commandType\n          );\n        }\n        const patchedCallback = instrumentation._patchEnd(\n          span,\n          resultHandler,\n          this.id,\n          commandType\n        );\n\n        return original.call(this, ns, cmd, options, patchedCallback);\n      };\n    };\n  }\n\n  private _getV4PatchCommandPromise() {\n    const instrumentation = this;\n    return (original: V4Connection['commandPromise']) => {\n      return function patchedV4ServerCommand(\n        this: any,\n        ...args: Parameters<V4Connection['commandPromise']>\n      ) {\n        const [ns, cmd] = args;\n        const currentSpan = trace.getSpan(context.active());\n        const commandType = Object.keys(cmd)[0];\n        const resultHandler = () => undefined;\n\n        if (typeof cmd !== 'object' || cmd.ismaster || cmd.hello) {\n          return original.apply(this, args);\n        }\n\n        let span = undefined;\n        if (currentSpan) {\n          span = instrumentation.tracer.startSpan(`mongodb.${commandType}`, {\n            kind: SpanKind.CLIENT,\n          });\n          instrumentation._populateV4Attributes(\n            span,\n            this,\n            ns,\n            cmd,\n            commandType\n          );\n        }\n\n        const patchedCallback = instrumentation._patchEnd(\n          span,\n          resultHandler,\n          this.id,\n          commandType\n        );\n\n        const result = original.apply(this, args);\n        result.then(\n          (res: any) => patchedCallback(null, res),\n          (err: any) => patchedCallback(err)\n        );\n\n        return result;\n      };\n    };\n  }\n\n  /** Creates spans for find operation */\n  private _getV3PatchFind() {\n    const instrumentation = this;\n    return (original: WireProtocolInternal['query']) => {\n      return function patchedServerCommand(\n        this: unknown,\n        server: MongoInternalTopology,\n        ns: string,\n        cmd: MongoInternalCommand,\n        cursorState: CursorState,\n        options: unknown | Function,\n        callback?: Function\n      ) {\n        const currentSpan = trace.getSpan(context.active());\n        const resultHandler =\n          typeof options === 'function' ? options : callback;\n        if (\n          !currentSpan ||\n          typeof resultHandler !== 'function' ||\n          typeof cmd !== 'object'\n        ) {\n          if (typeof options === 'function') {\n            return original.call(this, server, ns, cmd, cursorState, options);\n          } else {\n            return original.call(\n              this,\n              server,\n              ns,\n              cmd,\n              cursorState,\n              options,\n              callback\n            );\n          }\n        }\n        const span = instrumentation.tracer.startSpan('mongodb.find', {\n          kind: SpanKind.CLIENT,\n        });\n        instrumentation._populateV3Attributes(span, ns, server, cmd, 'find');\n        const patchedCallback = instrumentation._patchEnd(span, resultHandler);\n        // handle when options is the callback to send the correct number of args\n        if (typeof options === 'function') {\n          return original.call(\n            this,\n            server,\n            ns,\n            cmd,\n            cursorState,\n            patchedCallback\n          );\n        } else {\n          return original.call(\n            this,\n            server,\n            ns,\n            cmd,\n            cursorState,\n            options,\n            patchedCallback\n          );\n        }\n      };\n    };\n  }\n\n  /** Creates spans for find operation */\n  private _getV3PatchCursor() {\n    const instrumentation = this;\n    return (original: WireProtocolInternal['getMore']) => {\n      return function patchedServerCommand(\n        this: unknown,\n        server: MongoInternalTopology,\n        ns: string,\n        cursorState: CursorState,\n        batchSize: number,\n        options: unknown | Function,\n        callback?: Function\n      ) {\n        const currentSpan = trace.getSpan(context.active());\n        const resultHandler =\n          typeof options === 'function' ? options : callback;\n        if (!currentSpan || typeof resultHandler !== 'function') {\n          if (typeof options === 'function') {\n            return original.call(\n              this,\n              server,\n              ns,\n              cursorState,\n              batchSize,\n              options\n            );\n          } else {\n            return original.call(\n              this,\n              server,\n              ns,\n              cursorState,\n              batchSize,\n              options,\n              callback\n            );\n          }\n        }\n        const span = instrumentation.tracer.startSpan('mongodb.getMore', {\n          kind: SpanKind.CLIENT,\n        });\n        instrumentation._populateV3Attributes(\n          span,\n          ns,\n          server,\n          cursorState.cmd,\n          'getMore'\n        );\n        const patchedCallback = instrumentation._patchEnd(span, resultHandler);\n        // handle when options is the callback to send the correct number of args\n        if (typeof options === 'function') {\n          return original.call(\n            this,\n            server,\n            ns,\n            cursorState,\n            batchSize,\n            patchedCallback\n          );\n        } else {\n          return original.call(\n            this,\n            server,\n            ns,\n            cursorState,\n            batchSize,\n            options,\n            patchedCallback\n          );\n        }\n      };\n    };\n  }\n\n  /**\n   * Get the mongodb command type from the object.\n   * @param command Internal mongodb command object\n   */\n  private static _getCommandType(\n    command: MongoInternalCommand\n  ): MongodbCommandType {\n    if (command.createIndexes !== undefined) {\n      return MongodbCommandType.CREATE_INDEXES;\n    } else if (command.findandmodify !== undefined) {\n      return MongodbCommandType.FIND_AND_MODIFY;\n    } else if (command.ismaster !== undefined) {\n      return MongodbCommandType.IS_MASTER;\n    } else if (command.count !== undefined) {\n      return MongodbCommandType.COUNT;\n    } else if (command.aggregate !== undefined) {\n      return MongodbCommandType.AGGREGATE;\n    } else {\n      return MongodbCommandType.UNKNOWN;\n    }\n  }\n\n  /**\n   * Populate span's attributes by fetching related metadata from the context\n   * @param span span to add attributes to\n   * @param connectionCtx mongodb internal connection context\n   * @param ns mongodb namespace\n   * @param command mongodb internal representation of a command\n   */\n  private _populateV4Attributes(\n    span: Span,\n    connectionCtx: any,\n    ns: MongodbNamespace,\n    command?: any,\n    operation?: string\n  ) {\n    let host, port: undefined | string;\n    if (connectionCtx) {\n      const hostParts =\n        typeof connectionCtx.address === 'string'\n          ? connectionCtx.address.split(':')\n          : '';\n      if (hostParts.length === 2) {\n        host = hostParts[0];\n        port = hostParts[1];\n      }\n    }\n    // capture parameters within the query as well if enhancedDatabaseReporting is enabled.\n    let commandObj: Record<string, unknown>;\n    if (command?.documents && command.documents[0]) {\n      commandObj = command.documents[0];\n    } else if (command?.cursors) {\n      commandObj = command.cursors;\n    } else {\n      commandObj = command;\n    }\n\n    this._addAllSpanAttributes(\n      span,\n      ns.db,\n      ns.collection,\n      host,\n      port,\n      commandObj,\n      operation\n    );\n  }\n\n  /**\n   * Populate span's attributes by fetching related metadata from the context\n   * @param span span to add attributes to\n   * @param ns mongodb namespace\n   * @param topology mongodb internal representation of the network topology\n   * @param command mongodb internal representation of a command\n   */\n  private _populateV3Attributes(\n    span: Span,\n    ns: string,\n    topology: MongoInternalTopology,\n    command?: MongoInternalCommand,\n    operation?: string | undefined\n  ) {\n    // add network attributes to determine the remote server\n    let host: undefined | string;\n    let port: undefined | string;\n    if (topology && topology.s) {\n      host = topology.s.options?.host ?? topology.s.host;\n      port = (topology.s.options?.port ?? topology.s.port)?.toString();\n      if (host == null || port == null) {\n        const address = topology.description?.address;\n        if (address) {\n          const addressSegments = address.split(':');\n          host = addressSegments[0];\n          port = addressSegments[1];\n        }\n      }\n    }\n\n    // The namespace is a combination of the database name and the name of the\n    // collection or index, like so: [database-name].[collection-or-index-name].\n    // It could be a string or an instance of MongoDBNamespace, as such we\n    // always coerce to a string to extract db and collection.\n    const [dbName, dbCollection] = ns.toString().split('.');\n    // capture parameters within the query as well if enhancedDatabaseReporting is enabled.\n    const commandObj = command?.query ?? command?.q ?? command;\n\n    this._addAllSpanAttributes(\n      span,\n      dbName,\n      dbCollection,\n      host,\n      port,\n      commandObj,\n      operation\n    );\n  }\n\n  private _addAllSpanAttributes(\n    span: Span,\n    dbName?: string,\n    dbCollection?: string,\n    host?: undefined | string,\n    port?: undefined | string,\n    commandObj?: any,\n    operation?: string | undefined\n  ) {\n    // add database related attributes\n    span.setAttributes({\n      [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_MONGODB,\n      [SEMATTRS_DB_NAME]: dbName,\n      [SEMATTRS_DB_MONGODB_COLLECTION]: dbCollection,\n      [SEMATTRS_DB_OPERATION]: operation,\n      [SEMATTRS_DB_CONNECTION_STRING]: `mongodb://${host}:${port}/${dbName}`,\n    });\n\n    if (host && port) {\n      span.setAttribute(SEMATTRS_NET_PEER_NAME, host);\n      const portNumber = parseInt(port, 10);\n      if (!isNaN(portNumber)) {\n        span.setAttribute(SEMATTRS_NET_PEER_PORT, portNumber);\n      }\n    }\n    if (!commandObj) return;\n    const dbStatementSerializer =\n      typeof this._config.dbStatementSerializer === 'function'\n        ? this._config.dbStatementSerializer\n        : this._defaultDbStatementSerializer.bind(this);\n\n    safeExecuteInTheMiddle(\n      () => {\n        const query = dbStatementSerializer(commandObj);\n        span.setAttribute(SEMATTRS_DB_STATEMENT, query);\n      },\n      err => {\n        if (err) {\n          this._diag.error('Error running dbStatementSerializer hook', err);\n        }\n      },\n      true\n    );\n  }\n\n  private _defaultDbStatementSerializer(commandObj: Record<string, unknown>) {\n    const enhancedDbReporting = !!this._config?.enhancedDatabaseReporting;\n    const resultObj = enhancedDbReporting\n      ? commandObj\n      : this._scrubStatement(commandObj);\n    return JSON.stringify(resultObj);\n  }\n\n  private _scrubStatement(value: unknown): unknown {\n    if (Array.isArray(value)) {\n      return value.map(element => this._scrubStatement(element));\n    }\n\n    if (typeof value === 'object' && value !== null) {\n      return Object.fromEntries(\n        Object.entries(value).map(([key, element]) => [\n          key,\n          this._scrubStatement(element),\n        ])\n      );\n    }\n\n    // A value like string or number, possible contains PII, scrub it\n    return '?';\n  }\n\n  /**\n   * Triggers the response hook in case it is defined.\n   * @param span The span to add the results to.\n   * @param result The command result\n   */\n  private _handleExecutionResult(span: Span, result: CommandResult) {\n    const config: MongoDBInstrumentationConfig = this.getConfig();\n    if (typeof config.responseHook === 'function') {\n      safeExecuteInTheMiddle(\n        () => {\n          config.responseHook!(span, { data: result });\n        },\n        err => {\n          if (err) {\n            this._diag.error('Error running response hook', err);\n          }\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * Ends a created span.\n   * @param span The created span to end.\n   * @param resultHandler A callback function.\n   * @param connectionId: The connection ID of the Command response.\n   */\n  private _patchEnd(\n    span: Span | undefined,\n    resultHandler: Function,\n    connectionId?: number,\n    commandType?: string\n  ): Function {\n    // mongodb is using \"tick\" when calling a callback, this way the context\n    // in final callback (resultHandler) is lost\n    const activeContext = context.active();\n    const instrumentation = this;\n    return function patchedEnd(this: {}, ...args: unknown[]) {\n      const error = args[0];\n      if (span) {\n        if (error instanceof Error) {\n          span?.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error.message,\n          });\n        } else {\n          const result = args[1] as CommandResult;\n          instrumentation._handleExecutionResult(span, result);\n        }\n        span.end();\n      }\n\n      return context.with(activeContext, () => {\n        if (commandType === 'endSessions') {\n          instrumentation._connectionsUsage.add(-1, {\n            state: 'idle',\n            'pool.name': instrumentation._poolName,\n          });\n        }\n        return resultHandler.apply(this, args);\n      });\n    };\n  }\n  private setPoolName(options: any) {\n    const host = options.hostAddress?.host;\n    const port = options.hostAddress?.port;\n    const database = options.dbName;\n    const poolName = `mongodb://${host}:${port}/${database}`;\n    this._poolName = poolName;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport { Span } from '@opentelemetry/api';\n\nexport interface MongoDBInstrumentationExecutionResponseHook {\n  (span: Span, responseInfo: MongoResponseHookInformation): void;\n}\n\n/**\n * Function that can be used to serialize db.statement tag\n * @param cmd - MongoDB command object\n *\n * @returns serialized string that will be used as the db.statement attribute.\n */\nexport type DbStatementSerializer = (cmd: Record<string, unknown>) => string;\n\nexport interface MongoDBInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * If true, additional information about query parameters and\n   * results will be attached (as `attributes`) to spans representing\n   * database operations.\n   */\n  enhancedDatabaseReporting?: boolean;\n\n  /**\n   * Hook that allows adding custom span attributes based on the data\n   * returned from MongoDB actions.\n   *\n   * @default undefined\n   */\n  responseHook?: MongoDBInstrumentationExecutionResponseHook;\n\n  /**\n   * Custom serializer function for the db.statement tag\n   */\n  dbStatementSerializer?: DbStatementSerializer;\n}\n\nexport interface MongoResponseHookInformation {\n  data: CommandResult;\n}\n\n// https://github.com/mongodb/node-mongodb-native/blob/3.6/lib/core/connection/command_result.js\nexport type CommandResult = {\n  result?: unknown;\n  connection?: unknown;\n  message?: unknown;\n};\n\nexport enum MongodbCommandType {\n  CREATE_INDEXES = 'createIndexes',\n  FIND_AND_MODIFY = 'findAndModify',\n  IS_MASTER = 'isMaster',\n  COUNT = 'count',\n  UNKNOWN = 'unknown',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Attributes, SpanStatusCode, diag, Span } from '@opentelemetry/api';\nimport type { Collection } from 'mongoose';\nimport { MongooseResponseCustomAttributesFunction } from './types';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport {\n  SEMATTRS_DB_MONGODB_COLLECTION,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_USER,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\n\nexport function getAttributesFromCollection(\n  collection: Collection\n): Attributes {\n  return {\n    [SEMATTRS_DB_MONGODB_COLLECTION]: collection.name,\n    [SEMATTRS_DB_NAME]: collection.conn.name,\n    [SEMATTRS_DB_USER]: collection.conn.user,\n    [SEMATTRS_NET_PEER_NAME]: collection.conn.host,\n    [SEMATTRS_NET_PEER_PORT]: collection.conn.port,\n  };\n}\n\nfunction setErrorStatus(span: Span, error: any = {}) {\n  span.recordException(error);\n\n  span.setStatus({\n    code: SpanStatusCode.ERROR,\n    message: `${error.message} ${\n      error.code ? `\\nMongoose Error Code: ${error.code}` : ''\n    }`,\n  });\n}\n\nfunction applyResponseHook(\n  span: Span,\n  response: any,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n  moduleVersion: string | undefined = undefined\n) {\n  if (!responseHook) {\n    return;\n  }\n\n  safeExecuteInTheMiddle(\n    () => responseHook(span, { moduleVersion, response }),\n    e => {\n      if (e) {\n        diag.error('mongoose instrumentation: responseHook error', e);\n      }\n    },\n    true\n  );\n}\n\nexport function handlePromiseResponse(\n  execResponse: any,\n  span: Span,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n  moduleVersion: string | undefined = undefined\n): any {\n  if (!(execResponse instanceof Promise)) {\n    applyResponseHook(span, execResponse, responseHook, moduleVersion);\n    span.end();\n    return execResponse;\n  }\n\n  return execResponse\n    .then(response => {\n      applyResponseHook(span, response, responseHook, moduleVersion);\n      return response;\n    })\n    .catch(err => {\n      setErrorStatus(span, err);\n      throw err;\n    })\n    .finally(() => span.end());\n}\n\nexport function handleCallbackResponse(\n  callback: Function,\n  exec: Function,\n  originalThis: any,\n  span: Span,\n  args: IArguments,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n  moduleVersion: string | undefined = undefined\n) {\n  let callbackArgumentIndex = 0;\n  if (args.length === 2) {\n    callbackArgumentIndex = 1;\n  }\n\n  args[callbackArgumentIndex] = (err: Error, response: any): any => {\n    err\n      ? setErrorStatus(span, err)\n      : applyResponseHook(span, response, responseHook, moduleVersion);\n\n    span.end();\n    return callback!(err, response);\n  };\n\n  return exec.apply(originalThis, args);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.40.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-mongoose';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, Span, trace, Attributes, SpanKind } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport type * as mongoose from 'mongoose';\nimport { MongooseInstrumentationConfig, SerializerPayload } from './types';\nimport {\n  handleCallbackResponse,\n  handlePromiseResponse,\n  getAttributesFromCollection,\n} from './utils';\nimport {\n  InstrumentationBase,\n  InstrumentationModuleDefinition,\n  InstrumentationNodeModuleDefinition,\n} from '@opentelemetry/instrumentation';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  SEMATTRS_DB_OPERATION,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\n\nconst contextCaptureFunctions = [\n  'remove',\n  'deleteOne',\n  'deleteMany',\n  'find',\n  'findOne',\n  'estimatedDocumentCount',\n  'countDocuments',\n  'count',\n  'distinct',\n  'where',\n  '$where',\n  'findOneAndUpdate',\n  'findOneAndDelete',\n  'findOneAndReplace',\n  'findOneAndRemove',\n];\n\n// when mongoose functions are called, we store the original call context\n// and then set it as the parent for the spans created by Query/Aggregate exec()\n// calls. this bypass the unlinked spans issue on thenables await operations.\nexport const _STORED_PARENT_SPAN: unique symbol = Symbol('stored-parent-span');\n\nexport class MongooseInstrumentation extends InstrumentationBase {\n  protected override _config!: MongooseInstrumentationConfig;\n\n  constructor(config: MongooseInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  override setConfig(config: MongooseInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n  }\n\n  protected init(): InstrumentationModuleDefinition {\n    const module = new InstrumentationNodeModuleDefinition(\n      'mongoose',\n      ['>=5.9.7 <7'],\n      this.patch.bind(this),\n      this.unpatch.bind(this)\n    );\n    return module;\n  }\n\n  private patch(\n    moduleExports: typeof mongoose,\n    moduleVersion: string | undefined\n  ) {\n    this._wrap(\n      moduleExports.Model.prototype,\n      'save',\n      this.patchOnModelMethods('save', moduleVersion)\n    );\n    // mongoose applies this code on module require:\n    // Model.prototype.$save = Model.prototype.save;\n    // which captures the save function before it is patched.\n    // so we need to apply the same logic after instrumenting the save function.\n    moduleExports.Model.prototype.$save = moduleExports.Model.prototype.save;\n\n    this._wrap(\n      moduleExports.Model.prototype,\n      'remove',\n      this.patchOnModelMethods('remove', moduleVersion)\n    );\n    this._wrap(\n      moduleExports.Query.prototype,\n      'exec',\n      this.patchQueryExec(moduleVersion)\n    );\n    this._wrap(\n      moduleExports.Aggregate.prototype,\n      'exec',\n      this.patchAggregateExec(moduleVersion)\n    );\n\n    contextCaptureFunctions.forEach((funcName: string) => {\n      this._wrap(\n        moduleExports.Query.prototype,\n        funcName as any,\n        this.patchAndCaptureSpanContext(funcName)\n      );\n    });\n    this._wrap(moduleExports.Model, 'aggregate', this.patchModelAggregate());\n\n    return moduleExports;\n  }\n\n  private unpatch(moduleExports: typeof mongoose): void {\n    this._unwrap(moduleExports.Model.prototype, 'save');\n    // revert the patch for $save which we applied by aliasing it to patched `save`\n    moduleExports.Model.prototype.$save = moduleExports.Model.prototype.save;\n    this._unwrap(moduleExports.Model.prototype, 'remove');\n    this._unwrap(moduleExports.Query.prototype, 'exec');\n    this._unwrap(moduleExports.Aggregate.prototype, 'exec');\n\n    contextCaptureFunctions.forEach((funcName: string) => {\n      this._unwrap(moduleExports.Query.prototype, funcName as any);\n    });\n    this._unwrap(moduleExports.Model, 'aggregate');\n  }\n\n  private patchAggregateExec(moduleVersion: string | undefined) {\n    const self = this;\n    return (originalAggregate: Function) => {\n      return function exec(this: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalAggregate.apply(this, arguments);\n        }\n\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes: Attributes = {};\n        if (self._config.dbStatementSerializer) {\n          attributes[SEMATTRS_DB_STATEMENT] =\n            self._config.dbStatementSerializer('aggregate', {\n              options: this.options,\n              aggregatePipeline: this._pipeline,\n            });\n        }\n\n        const span = self._startSpan(\n          this._model.collection,\n          this._model?.modelName,\n          'aggregate',\n          attributes,\n          parentSpan\n        );\n\n        return self._handleResponse(\n          span,\n          originalAggregate,\n          this,\n          arguments,\n          callback,\n          moduleVersion\n        );\n      };\n    };\n  }\n\n  private patchQueryExec(moduleVersion: string | undefined) {\n    const self = this;\n    return (originalExec: Function) => {\n      return function exec(this: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalExec.apply(this, arguments);\n        }\n\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes: Attributes = {};\n        if (self._config.dbStatementSerializer) {\n          attributes[SEMATTRS_DB_STATEMENT] =\n            self._config.dbStatementSerializer(this.op, {\n              condition: this._conditions,\n              updates: this._update,\n              options: this.options,\n              fields: this._fields,\n            });\n        }\n        const span = self._startSpan(\n          this.mongooseCollection,\n          this.model.modelName,\n          this.op,\n          attributes,\n          parentSpan\n        );\n\n        return self._handleResponse(\n          span,\n          originalExec,\n          this,\n          arguments,\n          callback,\n          moduleVersion\n        );\n      };\n    };\n  }\n\n  private patchOnModelMethods(op: string, moduleVersion: string | undefined) {\n    const self = this;\n    return (originalOnModelFunction: Function) => {\n      return function method(this: any, options?: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalOnModelFunction.apply(this, arguments);\n        }\n\n        const serializePayload: SerializerPayload = { document: this };\n        if (options && !(options instanceof Function)) {\n          serializePayload.options = options;\n        }\n        const attributes: Attributes = {};\n        if (self._config.dbStatementSerializer) {\n          attributes[SEMATTRS_DB_STATEMENT] =\n            self._config.dbStatementSerializer(op, serializePayload);\n        }\n        const span = self._startSpan(\n          this.constructor.collection,\n          this.constructor.modelName,\n          op,\n          attributes\n        );\n\n        if (options instanceof Function) {\n          callback = options;\n          options = undefined;\n        }\n\n        return self._handleResponse(\n          span,\n          originalOnModelFunction,\n          this,\n          arguments,\n          callback,\n          moduleVersion\n        );\n      };\n    };\n  }\n\n  // we want to capture the otel span on the object which is calling exec.\n  // in the special case of aggregate, we need have no function to path\n  // on the Aggregate object to capture the context on, so we patch\n  // the aggregate of Model, and set the context on the Aggregate object\n  private patchModelAggregate() {\n    const self = this;\n    return (original: Function) => {\n      return function captureSpanContext(this: any) {\n        const currentSpan = trace.getSpan(context.active());\n        const aggregate = self._callOriginalFunction(() =>\n          original.apply(this, arguments)\n        );\n        if (aggregate) aggregate[_STORED_PARENT_SPAN] = currentSpan;\n        return aggregate;\n      };\n    };\n  }\n\n  private patchAndCaptureSpanContext(funcName: string) {\n    const self = this;\n    return (original: Function) => {\n      return function captureSpanContext(this: any) {\n        this[_STORED_PARENT_SPAN] = trace.getSpan(context.active());\n        return self._callOriginalFunction(() =>\n          original.apply(this, arguments)\n        );\n      };\n    };\n  }\n\n  private _startSpan(\n    collection: mongoose.Collection,\n    modelName: string,\n    operation: string,\n    attributes: Attributes,\n    parentSpan?: Span\n  ): Span {\n    return this.tracer.startSpan(\n      `mongoose.${modelName}.${operation}`,\n      {\n        kind: SpanKind.CLIENT,\n        attributes: {\n          ...attributes,\n          ...getAttributesFromCollection(collection),\n          [SEMATTRS_DB_OPERATION]: operation,\n          [SEMATTRS_DB_SYSTEM]: 'mongoose',\n        },\n      },\n      parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined\n    );\n  }\n\n  private _handleResponse(\n    span: Span,\n    exec: Function,\n    originalThis: any,\n    args: IArguments,\n    callback?: Function,\n    moduleVersion: string | undefined = undefined\n  ) {\n    const self = this;\n    if (callback instanceof Function) {\n      return self._callOriginalFunction(() =>\n        handleCallbackResponse(\n          callback,\n          exec,\n          originalThis,\n          span,\n          args,\n          self._config.responseHook,\n          moduleVersion\n        )\n      );\n    } else {\n      const response = self._callOriginalFunction(() =>\n        exec.apply(originalThis, args)\n      );\n      return handlePromiseResponse(\n        response,\n        span,\n        self._config.responseHook,\n        moduleVersion\n      );\n    }\n  }\n\n  private _callOriginalFunction<T>(originalFunction: (...args: any[]) => T): T {\n    if (this._config?.suppressInternalInstrumentation) {\n      return context.with(suppressTracing(context.active()), originalFunction);\n    } else {\n      return originalFunction();\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './mongoose';\nexport * from './types';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Mysql specific attributes not covered by semantic conventions\nexport enum AttributeNames {\n  MYSQL_VALUES = 'db.mysql.values',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes } from '@opentelemetry/api';\nimport {\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_USER,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\nimport type {\n  ConnectionConfig,\n  PoolActualConfig,\n  Query,\n  QueryOptions,\n} from 'mysql';\nimport type * as mysqlTypes from 'mysql';\n\n/**\n * Get an Attributes map from a mysql connection config object\n *\n * @param config ConnectionConfig\n */\nexport function getConnectionAttributes(\n  config: ConnectionConfig | PoolActualConfig\n): Attributes {\n  const { host, port, database, user } = getConfig(config);\n  const portNumber = parseInt(port, 10);\n  if (!isNaN(portNumber)) {\n    return {\n      [SEMATTRS_NET_PEER_NAME]: host,\n      [SEMATTRS_NET_PEER_PORT]: portNumber,\n      [SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n      [SEMATTRS_DB_NAME]: database,\n      [SEMATTRS_DB_USER]: user,\n    };\n  }\n  return {\n    [SEMATTRS_NET_PEER_NAME]: host,\n    [SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n    [SEMATTRS_DB_NAME]: database,\n    [SEMATTRS_DB_USER]: user,\n  };\n}\n\nfunction getConfig(config: any) {\n  const { host, port, database, user } =\n    (config && config.connectionConfig) || config || {};\n  return { host, port, database, user };\n}\n\nfunction getJDBCString(\n  host: string | undefined,\n  port: number | undefined,\n  database: string | undefined\n) {\n  let jdbcString = `jdbc:mysql://${host || 'localhost'}`;\n\n  if (typeof port === 'number') {\n    jdbcString += `:${port}`;\n  }\n\n  if (typeof database === 'string') {\n    jdbcString += `/${database}`;\n  }\n\n  return jdbcString;\n}\n\n/**\n * @returns the database statement being executed.\n */\nexport function getDbStatement(query: string | Query | QueryOptions): string {\n  if (typeof query === 'string') {\n    return query;\n  } else {\n    return query.sql;\n  }\n}\n\nexport function getDbValues(\n  query: string | Query | QueryOptions,\n  values?: any[]\n): string {\n  if (typeof query === 'string') {\n    return arrayStringifyHelper(values);\n  } else {\n    // According to https://github.com/mysqljs/mysql#performing-queries\n    // The values argument will override the values in the option object.\n    return arrayStringifyHelper(values || query.values);\n  }\n}\n\n/**\n * The span name SHOULD be set to a low cardinality value\n * representing the statement executed on the database.\n *\n * @returns SQL statement without variable arguments or SQL verb\n */\nexport function getSpanName(query: string | Query | QueryOptions): string {\n  if (typeof query === 'object') {\n    return query.sql;\n  }\n  return query.split(' ')[0];\n}\n\nexport function arrayStringifyHelper(arr: Array<unknown> | undefined): string {\n  if (arr) return `[${arr.toString()}]`;\n  return '';\n}\n\nexport function getPoolName(pool: mysqlTypes.Pool): string {\n  const c = pool.config.connectionConfig;\n  let poolName = '';\n  poolName += c.host ? `host: '${c.host}', ` : '';\n  poolName += c.port ? `port: ${c.port}, ` : '';\n  poolName += c.database ? `database: '${c.database}', ` : '';\n  poolName += c.user ? `user: '${c.user}'` : '';\n  if (!c.user) {\n    poolName = poolName.substring(0, poolName.length - 2); //omit last comma\n  }\n  return poolName.trim();\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.40.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-mysql';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  Context,\n  trace,\n  Span,\n  SpanKind,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport {\n  DBSYSTEMVALUES_MYSQL,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\nimport type * as mysqlTypes from 'mysql';\nimport { AttributeNames } from './AttributeNames';\nimport { MySQLInstrumentationConfig } from './types';\nimport {\n  getConnectionAttributes,\n  getDbStatement,\n  getDbValues,\n  getSpanName,\n  getPoolName,\n} from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { UpDownCounter, MeterProvider } from '@opentelemetry/api';\n\ntype getConnectionCallbackType = (\n  err: mysqlTypes.MysqlError,\n  connection: mysqlTypes.PoolConnection\n) => void;\n\nexport class MySQLInstrumentation extends InstrumentationBase {\n  static readonly COMMON_ATTRIBUTES = {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_MYSQL,\n  };\n  private _connectionsUsage!: UpDownCounter;\n\n  constructor(config: MySQLInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n    this._setMetricInstruments();\n  }\n\n  override setMeterProvider(meterProvider: MeterProvider) {\n    super.setMeterProvider(meterProvider);\n    this._setMetricInstruments();\n  }\n\n  private _setMetricInstruments() {\n    this._connectionsUsage = this.meter.createUpDownCounter(\n      'db.client.connections.usage', //TODO:: use semantic convention\n      {\n        description:\n          'The number of connections that are currently in state described by the state attribute.',\n        unit: '{connection}',\n      }\n    );\n  }\n\n  protected init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'mysql',\n        ['>=2.0.0 <3'],\n        (moduleExports: typeof mysqlTypes) => {\n          if (isWrapped(moduleExports.createConnection)) {\n            this._unwrap(moduleExports, 'createConnection');\n          }\n          this._wrap(\n            moduleExports,\n            'createConnection',\n            this._patchCreateConnection() as any\n          );\n\n          if (isWrapped(moduleExports.createPool)) {\n            this._unwrap(moduleExports, 'createPool');\n          }\n          this._wrap(\n            moduleExports,\n            'createPool',\n            this._patchCreatePool() as any\n          );\n\n          if (isWrapped(moduleExports.createPoolCluster)) {\n            this._unwrap(moduleExports, 'createPoolCluster');\n          }\n          this._wrap(\n            moduleExports,\n            'createPoolCluster',\n            this._patchCreatePoolCluster() as any\n          );\n\n          return moduleExports;\n        },\n        (moduleExports: typeof mysqlTypes) => {\n          if (moduleExports === undefined) return;\n          this._unwrap(moduleExports, 'createConnection');\n          this._unwrap(moduleExports, 'createPool');\n          this._unwrap(moduleExports, 'createPoolCluster');\n        }\n      ),\n    ];\n  }\n\n  // global export function\n  private _patchCreateConnection() {\n    return (originalCreateConnection: Function) => {\n      const thisPlugin = this;\n\n      return function createConnection(\n        _connectionUri: string | mysqlTypes.ConnectionConfig\n      ) {\n        const originalResult = originalCreateConnection(...arguments);\n\n        // This is unwrapped on next call after unpatch\n        thisPlugin._wrap(\n          originalResult,\n          'query',\n          thisPlugin._patchQuery(originalResult) as any\n        );\n\n        return originalResult;\n      };\n    };\n  }\n\n  // global export function\n  private _patchCreatePool() {\n    return (originalCreatePool: Function) => {\n      const thisPlugin = this;\n      return function createPool(_config: string | mysqlTypes.PoolConfig) {\n        const pool = originalCreatePool(...arguments);\n\n        thisPlugin._wrap(pool, 'query', thisPlugin._patchQuery(pool));\n        thisPlugin._wrap(\n          pool,\n          'getConnection',\n          thisPlugin._patchGetConnection(pool)\n        );\n        thisPlugin._wrap(pool, 'end', thisPlugin._patchPoolEnd(pool));\n        thisPlugin._setPoolcallbacks(pool, thisPlugin, '');\n\n        return pool;\n      };\n    };\n  }\n  private _patchPoolEnd(pool: any) {\n    return (originalPoolEnd: Function) => {\n      const thisPlugin = this;\n      return function end(callback?: unknown) {\n        const nAll = (pool as any)._allConnections.length;\n        const nFree = (pool as any)._freeConnections.length;\n        const nUsed = nAll - nFree;\n        const poolName = getPoolName(pool);\n        thisPlugin._connectionsUsage.add(-nUsed, {\n          state: 'used',\n          name: poolName,\n        });\n        thisPlugin._connectionsUsage.add(-nFree, {\n          state: 'idle',\n          name: poolName,\n        });\n        originalPoolEnd.apply(pool, arguments);\n      };\n    };\n  }\n\n  // global export function\n  private _patchCreatePoolCluster() {\n    return (originalCreatePoolCluster: Function) => {\n      const thisPlugin = this;\n      return function createPool(_config: string | mysqlTypes.PoolConfig) {\n        const cluster = originalCreatePoolCluster(...arguments);\n\n        // This is unwrapped on next call after unpatch\n        thisPlugin._wrap(\n          cluster,\n          'getConnection',\n          thisPlugin._patchGetConnection(cluster)\n        );\n        thisPlugin._wrap(cluster, 'add', thisPlugin._patchAdd(cluster));\n\n        return cluster;\n      };\n    };\n  }\n  private _patchAdd(cluster: mysqlTypes.PoolCluster) {\n    return (originalAdd: Function) => {\n      const thisPlugin = this;\n      return function add(id: string, config: unknown) {\n        // Unwrap if unpatch has been called\n        if (!thisPlugin['_enabled']) {\n          thisPlugin._unwrap(cluster, 'add');\n          return originalAdd.apply(cluster, arguments);\n        }\n        originalAdd.apply(cluster, arguments);\n        const nodes = cluster['_nodes' as keyof mysqlTypes.PoolCluster] as any;\n        if (nodes) {\n          const nodeId =\n            typeof id === 'object'\n              ? 'CLUSTER::' + (cluster as any)._lastId\n              : String(id);\n\n          const pool = nodes[nodeId].pool;\n          thisPlugin._setPoolcallbacks(pool, thisPlugin, id);\n        }\n      };\n    };\n  }\n\n  // method on cluster or pool\n  private _patchGetConnection(pool: mysqlTypes.Pool | mysqlTypes.PoolCluster) {\n    return (originalGetConnection: Function) => {\n      const thisPlugin = this;\n\n      return function getConnection(\n        arg1?: unknown,\n        arg2?: unknown,\n        arg3?: unknown\n      ) {\n        // Unwrap if unpatch has been called\n        if (!thisPlugin['_enabled']) {\n          thisPlugin._unwrap(pool, 'getConnection');\n          return originalGetConnection.apply(pool, arguments);\n        }\n\n        if (arguments.length === 1 && typeof arg1 === 'function') {\n          const patchFn = thisPlugin._getConnectionCallbackPatchFn(\n            arg1 as getConnectionCallbackType\n          );\n          return originalGetConnection.call(pool, patchFn);\n        }\n        if (arguments.length === 2 && typeof arg2 === 'function') {\n          const patchFn = thisPlugin._getConnectionCallbackPatchFn(\n            arg2 as getConnectionCallbackType\n          );\n          return originalGetConnection.call(pool, arg1, patchFn);\n        }\n        if (arguments.length === 3 && typeof arg3 === 'function') {\n          const patchFn = thisPlugin._getConnectionCallbackPatchFn(\n            arg3 as getConnectionCallbackType\n          );\n          return originalGetConnection.call(pool, arg1, arg2, patchFn);\n        }\n\n        return originalGetConnection.apply(pool, arguments);\n      };\n    };\n  }\n\n  private _getConnectionCallbackPatchFn(cb: getConnectionCallbackType) {\n    const thisPlugin = this;\n    const activeContext = context.active();\n    return function (\n      this: any,\n      err: mysqlTypes.MysqlError,\n      connection: mysqlTypes.PoolConnection\n    ) {\n      if (connection) {\n        // this is the callback passed into a query\n        // no need to unwrap\n        if (!isWrapped(connection.query)) {\n          thisPlugin._wrap(\n            connection,\n            'query',\n            thisPlugin._patchQuery(connection)\n          );\n        }\n      }\n      if (typeof cb === 'function') {\n        context.with(activeContext, cb, this, err, connection);\n      }\n    };\n  }\n\n  private _patchQuery(connection: mysqlTypes.Connection | mysqlTypes.Pool) {\n    return (originalQuery: Function): mysqlTypes.QueryFunction => {\n      const thisPlugin = this;\n\n      return function query(\n        query: string | mysqlTypes.Query | mysqlTypes.QueryOptions,\n        _valuesOrCallback?: unknown[] | mysqlTypes.queryCallback,\n        _callback?: mysqlTypes.queryCallback\n      ) {\n        if (!thisPlugin['_enabled']) {\n          thisPlugin._unwrap(connection, 'query');\n          return originalQuery.apply(connection, arguments);\n        }\n\n        const span = thisPlugin.tracer.startSpan(getSpanName(query), {\n          kind: SpanKind.CLIENT,\n          attributes: {\n            ...MySQLInstrumentation.COMMON_ATTRIBUTES,\n            ...getConnectionAttributes(connection.config),\n          },\n        });\n\n        span.setAttribute(SEMATTRS_DB_STATEMENT, getDbStatement(query));\n\n        const instrumentationConfig: MySQLInstrumentationConfig =\n          thisPlugin.getConfig();\n\n        if (instrumentationConfig.enhancedDatabaseReporting) {\n          let values;\n\n          if (Array.isArray(_valuesOrCallback)) {\n            values = _valuesOrCallback;\n          } else if (arguments[2]) {\n            values = [_valuesOrCallback];\n          }\n\n          span.setAttribute(\n            AttributeNames.MYSQL_VALUES,\n            getDbValues(query, values)\n          );\n        }\n\n        const cbIndex = Array.from(arguments).findIndex(\n          arg => typeof arg === 'function'\n        );\n\n        const parentContext = context.active();\n\n        if (cbIndex === -1) {\n          const streamableQuery: mysqlTypes.Query = context.with(\n            trace.setSpan(context.active(), span),\n            () => {\n              return originalQuery.apply(connection, arguments);\n            }\n          );\n          context.bind(parentContext, streamableQuery);\n\n          return streamableQuery\n            .on('error', err =>\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message,\n              })\n            )\n            .on('end', () => {\n              span.end();\n            });\n        } else {\n          thisPlugin._wrap(\n            arguments,\n            cbIndex,\n            thisPlugin._patchCallbackQuery(span, parentContext)\n          );\n\n          return context.with(trace.setSpan(context.active(), span), () => {\n            return originalQuery.apply(connection, arguments);\n          });\n        }\n      };\n    };\n  }\n\n  private _patchCallbackQuery(span: Span, parentContext: Context) {\n    return (originalCallback: Function) => {\n      return function (\n        err: mysqlTypes.MysqlError | null,\n        results?: any,\n        fields?: mysqlTypes.FieldInfo[]\n      ) {\n        if (err) {\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: err.message,\n          });\n        }\n        span.end();\n        return context.with(parentContext, () =>\n          originalCallback(...arguments)\n        );\n      };\n    };\n  }\n  private _setPoolcallbacks(\n    pool: mysqlTypes.Pool,\n    thisPlugin: MySQLInstrumentation,\n    id: string\n  ) {\n    //TODO:: use semantic convention\n    const poolName = id || getPoolName(pool);\n\n    pool.on('connection', connection => {\n      thisPlugin._connectionsUsage.add(1, {\n        state: 'idle',\n        name: poolName,\n      });\n    });\n\n    pool.on('acquire', connection => {\n      thisPlugin._connectionsUsage.add(-1, {\n        state: 'idle',\n        name: poolName,\n      });\n      thisPlugin._connectionsUsage.add(1, {\n        state: 'used',\n        name: poolName,\n      });\n    });\n\n    pool.on('release', connection => {\n      thisPlugin._connectionsUsage.add(-1, {\n        state: 'used',\n        name: poolName,\n      });\n      thisPlugin._connectionsUsage.add(1, {\n        state: 'idle',\n        name: poolName,\n      });\n    });\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  trace,\n  Span,\n  ROOT_CONTEXT,\n  defaultTextMapSetter,\n} from '@opentelemetry/api';\nimport { W3CTraceContextPropagator } from '@opentelemetry/core';\n\n// NOTE: This function currently is returning false-positives\n// in cases where comment characters appear in string literals\n// (\"SELECT '-- not a comment';\" would return true, although has no comment)\nfunction hasValidSqlComment(query: string): boolean {\n  const indexOpeningDashDashComment = query.indexOf('--');\n  if (indexOpeningDashDashComment >= 0) {\n    return true;\n  }\n\n  const indexOpeningSlashComment = query.indexOf('/*');\n  if (indexOpeningSlashComment < 0) {\n    return false;\n  }\n\n  const indexClosingSlashComment = query.indexOf('*/');\n  return indexOpeningDashDashComment < indexClosingSlashComment;\n}\n\n// sqlcommenter specification (https://google.github.io/sqlcommenter/spec/#value-serialization)\n// expects us to URL encode based on the RFC 3986 spec (https://en.wikipedia.org/wiki/Percent-encoding),\n// but encodeURIComponent does not handle some characters correctly (! ' ( ) *),\n// which means we need special handling for this\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction fixedEncodeURIComponent(str: string) {\n  return encodeURIComponent(str).replace(\n    /[!'()*]/g,\n    c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n  );\n}\n\nexport function addSqlCommenterComment(span: Span, query: string): string {\n  if (typeof query !== 'string' || query.length === 0) {\n    return query;\n  }\n\n  // As per sqlcommenter spec we shall not add a comment if there already is a comment\n  // in the query\n  if (hasValidSqlComment(query)) {\n    return query;\n  }\n\n  const propagator = new W3CTraceContextPropagator();\n  const headers: { [key: string]: string } = {};\n  propagator.inject(\n    trace.setSpan(ROOT_CONTEXT, span),\n    headers,\n    defaultTextMapSetter\n  );\n\n  // sqlcommenter spec requires keys in the comment to be sorted lexicographically\n  const sortedKeys = Object.keys(headers).sort();\n\n  if (sortedKeys.length === 0) {\n    return query;\n  }\n\n  const commentString = sortedKeys\n    .map(key => {\n      const encodedValue = fixedEncodeURIComponent(headers[key]);\n      return `${key}='${encodedValue}'`;\n    })\n    .join(',');\n\n  return `${query} /*${commentString}*/`;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes } from '@opentelemetry/api';\nimport {\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_USER,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\n\n/*\n  Following types declare an expectation on mysql2 types and define a subset we\n  use in the instrumentation of the types actually defined in mysql2 package\n\n  We need to import them here so that the installing party of the instrumentation\n  doesn't have to absolutely install the mysql2 package as well - specially\n  important for auto-loaders and meta-packages.\n*/\ninterface QueryOptions {\n  sql: string;\n  values?: any | any[] | { [param: string]: any };\n}\n\ninterface Query {\n  sql: string;\n}\n\ninterface Config {\n  host?: string;\n  port?: number;\n  database?: string;\n  user?: string;\n  connectionConfig?: Config;\n}\n/**\n * Get an Attributes map from a mysql connection config object\n *\n * @param config ConnectionConfig\n */\nexport function getConnectionAttributes(config: Config): Attributes {\n  const { host, port, database, user } = getConfig(config);\n  const portNumber = parseInt(port, 10);\n  if (!isNaN(portNumber)) {\n    return {\n      [SEMATTRS_NET_PEER_NAME]: host,\n      [SEMATTRS_NET_PEER_PORT]: portNumber,\n      [SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n      [SEMATTRS_DB_NAME]: database,\n      [SEMATTRS_DB_USER]: user,\n    };\n  }\n  return {\n    [SEMATTRS_NET_PEER_NAME]: host,\n    [SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n    [SEMATTRS_DB_NAME]: database,\n    [SEMATTRS_DB_USER]: user,\n  };\n}\n\nfunction getConfig(config: any) {\n  const { host, port, database, user } =\n    (config && config.connectionConfig) || config || {};\n  return { host, port, database, user };\n}\n\nfunction getJDBCString(\n  host: string | undefined,\n  port: number | undefined,\n  database: string | undefined\n) {\n  let jdbcString = `jdbc:mysql://${host || 'localhost'}`;\n\n  if (typeof port === 'number') {\n    jdbcString += `:${port}`;\n  }\n\n  if (typeof database === 'string') {\n    jdbcString += `/${database}`;\n  }\n\n  return jdbcString;\n}\n\n/**\n * Conjures up the value for the db.statement attribute by formatting a SQL query.\n *\n * @returns the database statement being executed.\n */\nexport function getDbStatement(\n  query: string | Query | QueryOptions,\n  format: (\n    sql: string,\n    values: any[],\n    stringifyObjects?: boolean,\n    timeZone?: string\n  ) => string,\n  values?: any[]\n): string {\n  if (typeof query === 'string') {\n    return values ? format(query, values) : query;\n  } else {\n    // According to https://github.com/mysqljs/mysql#performing-queries\n    // The values argument will override the values in the option object.\n    return values || (query as QueryOptions).values\n      ? format(query.sql, values || (query as QueryOptions).values)\n      : query.sql;\n  }\n}\n\n/**\n * The span name SHOULD be set to a low cardinality value\n * representing the statement executed on the database.\n *\n * @returns SQL statement without variable arguments or SQL verb\n */\nexport function getSpanName(query: string | Query | QueryOptions): string {\n  const rawQuery = typeof query === 'object' ? query.sql : query;\n  // Extract the SQL verb\n  return rawQuery?.split(' ')?.[0];\n}\n\nexport const once = (fn: Function) => {\n  let called = false;\n  return (...args: unknown[]) => {\n    if (called) return;\n    called = true;\n    return fn(...args);\n  };\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.40.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-mysql2';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  DBSYSTEMVALUES_MYSQL,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\nimport { addSqlCommenterComment } from '@opentelemetry/sql-common';\nimport type * as mysqlTypes from 'mysql2';\nimport { MySQL2InstrumentationConfig } from './types';\nimport {\n  getConnectionAttributes,\n  getDbStatement,\n  getSpanName,\n  once,\n} from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\ntype formatType = typeof mysqlTypes.format;\n\nexport class MySQL2Instrumentation extends InstrumentationBase {\n  static readonly COMMON_ATTRIBUTES = {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_MYSQL,\n  };\n\n  constructor(config: MySQL2InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'mysql2',\n        ['>=1.4.2 <4'],\n        (moduleExports: any) => {\n          const ConnectionPrototype: mysqlTypes.Connection =\n            moduleExports.Connection.prototype;\n          if (isWrapped(ConnectionPrototype.query)) {\n            this._unwrap(ConnectionPrototype, 'query');\n          }\n          this._wrap(\n            ConnectionPrototype,\n            'query',\n            this._patchQuery(moduleExports.format, false) as any\n          );\n\n          if (isWrapped(ConnectionPrototype.execute)) {\n            this._unwrap(ConnectionPrototype, 'execute');\n          }\n          this._wrap(\n            ConnectionPrototype,\n            'execute',\n            this._patchQuery(moduleExports.format, true) as any\n          );\n\n          return moduleExports;\n        },\n        (moduleExports: any) => {\n          if (moduleExports === undefined) return;\n          const ConnectionPrototype: mysqlTypes.Connection =\n            moduleExports.Connection.prototype;\n          this._unwrap(ConnectionPrototype, 'query');\n          this._unwrap(ConnectionPrototype, 'execute');\n        }\n      ),\n    ];\n  }\n\n  private _patchQuery(format: formatType, isPrepared: boolean) {\n    return (originalQuery: Function): Function => {\n      const thisPlugin = this;\n      return function query(\n        this: mysqlTypes.Connection,\n        query: string | mysqlTypes.Query | mysqlTypes.QueryOptions,\n        _valuesOrCallback?: unknown[] | Function,\n        _callback?: Function\n      ) {\n        const thisPluginConfig: MySQL2InstrumentationConfig =\n          thisPlugin._config;\n\n        let values;\n        if (Array.isArray(_valuesOrCallback)) {\n          values = _valuesOrCallback;\n        } else if (arguments[2]) {\n          values = [_valuesOrCallback];\n        }\n\n        const span = thisPlugin.tracer.startSpan(getSpanName(query), {\n          kind: api.SpanKind.CLIENT,\n          attributes: {\n            ...MySQL2Instrumentation.COMMON_ATTRIBUTES,\n            ...getConnectionAttributes(this.config),\n            [SEMATTRS_DB_STATEMENT]: getDbStatement(query, format, values),\n          },\n        });\n\n        if (!isPrepared && thisPluginConfig.addSqlCommenterCommentToQueries) {\n          arguments[0] = query =\n            typeof query === 'string'\n              ? addSqlCommenterComment(span, query)\n              : Object.assign(query, {\n                  sql: addSqlCommenterComment(span, query.sql),\n                });\n        }\n\n        const endSpan = once((err?: any, results?: any) => {\n          if (err) {\n            span.setStatus({\n              code: api.SpanStatusCode.ERROR,\n              message: err.message,\n            });\n          } else {\n            if (typeof thisPluginConfig.responseHook === 'function') {\n              safeExecuteInTheMiddle(\n                () => {\n                  thisPluginConfig.responseHook!(span, {\n                    queryResults: results,\n                  });\n                },\n                err => {\n                  if (err) {\n                    thisPlugin._diag.warn('Failed executing responseHook', err);\n                  }\n                },\n                true\n              );\n            }\n          }\n\n          span.end();\n        });\n\n        if (arguments.length === 1) {\n          if (typeof (query as any).onResult === 'function') {\n            thisPlugin._wrap(\n              query as any,\n              'onResult',\n              thisPlugin._patchCallbackQuery(endSpan)\n            );\n          }\n\n          const streamableQuery: mysqlTypes.Query = originalQuery.apply(\n            this,\n            arguments\n          );\n\n          // `end` in mysql behaves similarly to `result` in mysql2.\n          streamableQuery\n            .once('error', err => {\n              endSpan(err);\n            })\n            .once('result', results => {\n              endSpan(undefined, results);\n            });\n\n          return streamableQuery;\n        }\n\n        if (typeof arguments[1] === 'function') {\n          thisPlugin._wrap(\n            arguments,\n            1,\n            thisPlugin._patchCallbackQuery(endSpan)\n          );\n        } else if (typeof arguments[2] === 'function') {\n          thisPlugin._wrap(\n            arguments,\n            2,\n            thisPlugin._patchCallbackQuery(endSpan)\n          );\n        }\n\n        return originalQuery.apply(this, arguments);\n      };\n    };\n  }\n\n  private _patchCallbackQuery(endSpan: Function) {\n    return (originalCallback: Function) => {\n      return function (\n        err: mysqlTypes.QueryError | null,\n        results?: any,\n        fields?: mysqlTypes.FieldPacket[]\n      ) {\n        endSpan(err, results);\n        return originalCallback(...arguments);\n      };\n    };\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span, SpanStatusCode } from '@opentelemetry/api';\n\nexport const endSpan = (\n  span: Span,\n  err: NodeJS.ErrnoException | null | undefined\n) => {\n  if (err) {\n    span.recordException(err);\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message: err.message,\n    });\n  }\n  span.end();\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * List of regexes and the number of arguments that should be serialized for matching commands.\n * For example, HSET should serialize which key and field it's operating on, but not its value.\n * Setting the subset to -1 will serialize all arguments.\n * Commands without a match will have their first argument serialized.\n *\n * Refer to https://redis.io/commands/ for the full list.\n */\nconst serializationSubsets = [\n  {\n    regex: /^ECHO/i,\n    args: 0,\n  },\n  {\n    regex: /^(LPUSH|MSET|PFA|PUBLISH|RPUSH|SADD|SET|SPUBLISH|XADD|ZADD)/i,\n    args: 1,\n  },\n  {\n    regex: /^(HSET|HMSET|LSET|LINSERT)/i,\n    args: 2,\n  },\n  {\n    regex:\n      /^(ACL|BIT|B[LRZ]|CLIENT|CLUSTER|CONFIG|COMMAND|DECR|DEL|EVAL|EX|FUNCTION|GEO|GET|HINCR|HMGET|HSCAN|INCR|L[TRLM]|MEMORY|P[EFISTU]|RPOP|S[CDIMORSU]|XACK|X[CDGILPRT]|Z[CDILMPRS])/i,\n    args: -1,\n  },\n];\n\nexport type DbStatementSerializer = (\n  cmdName: string,\n  cmdArgs: Array<string | Buffer | number | any[]>\n) => string;\n\n/**\n * Given the redis command name and arguments, return a combination of the\n * command name + the allowed arguments according to `serializationSubsets`.\n * @param cmdName The redis command name\n * @param cmdArgs The redis command arguments\n * @returns a combination of the command name + args according to `serializationSubsets`.\n */\nexport const defaultDbStatementSerializer: DbStatementSerializer = (\n  cmdName,\n  cmdArgs\n) => {\n  if (Array.isArray(cmdArgs) && cmdArgs.length) {\n    const nArgsToSerialize =\n      serializationSubsets.find(({ regex }) => {\n        return regex.test(cmdName);\n      })?.args ?? 0;\n    const argsToSerialize =\n      nArgsToSerialize >= 0 ? cmdArgs.slice(0, nArgsToSerialize) : cmdArgs;\n    if (cmdArgs.length > argsToSerialize.length) {\n      argsToSerialize.push(\n        `[${cmdArgs.length - nArgsToSerialize} other arguments]`\n      );\n    }\n    return `${cmdName} ${argsToSerialize.join(' ')}`;\n  }\n  return cmdName;\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.42.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-ioredis';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, trace, context, SpanKind } from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport { IORedisInstrumentationConfig } from './types';\nimport { IORedisCommand, RedisInterface } from './internal-types';\nimport {\n  DBSYSTEMVALUES_REDIS,\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport { endSpan } from './utils';\nimport { defaultDbStatementSerializer } from '@opentelemetry/redis-common';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nconst DEFAULT_CONFIG: IORedisInstrumentationConfig = {\n  requireParentSpan: true,\n};\n\nexport class IORedisInstrumentation extends InstrumentationBase {\n  protected override _config!: IORedisInstrumentationConfig;\n\n  constructor(config: IORedisInstrumentationConfig = {}) {\n    super(\n      PACKAGE_NAME,\n      PACKAGE_VERSION,\n      Object.assign({}, DEFAULT_CONFIG, config)\n    );\n  }\n\n  init(): InstrumentationNodeModuleDefinition[] {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'ioredis',\n        ['>=2.0.0 <6'],\n        (module, moduleVersion?: string) => {\n          const moduleExports =\n            module[Symbol.toStringTag] === 'Module'\n              ? module.default // ESM\n              : module; // CommonJS\n          if (isWrapped(moduleExports.prototype.sendCommand)) {\n            this._unwrap(moduleExports.prototype, 'sendCommand');\n          }\n          this._wrap(\n            moduleExports.prototype,\n            'sendCommand',\n            this._patchSendCommand(moduleVersion)\n          );\n          if (isWrapped(moduleExports.prototype.connect)) {\n            this._unwrap(moduleExports.prototype, 'connect');\n          }\n          this._wrap(\n            moduleExports.prototype,\n            'connect',\n            this._patchConnection()\n          );\n          return module;\n        },\n        module => {\n          if (module === undefined) return;\n          const moduleExports =\n            module[Symbol.toStringTag] === 'Module'\n              ? module.default // ESM\n              : module; // CommonJS\n          this._unwrap(moduleExports.prototype, 'sendCommand');\n          this._unwrap(moduleExports.prototype, 'connect');\n        }\n      ),\n    ];\n  }\n\n  /**\n   * Patch send command internal to trace requests\n   */\n  private _patchSendCommand(moduleVersion?: string) {\n    return (original: Function) => {\n      return this._traceSendCommand(original, moduleVersion);\n    };\n  }\n\n  private _patchConnection() {\n    return (original: Function) => {\n      return this._traceConnection(original);\n    };\n  }\n\n  private _traceSendCommand(original: Function, moduleVersion?: string) {\n    const instrumentation = this;\n    return function (this: RedisInterface, cmd?: IORedisCommand) {\n      if (arguments.length < 1 || typeof cmd !== 'object') {\n        return original.apply(this, arguments);\n      }\n      const config =\n        instrumentation.getConfig() as IORedisInstrumentationConfig;\n      const dbStatementSerializer =\n        config?.dbStatementSerializer || defaultDbStatementSerializer;\n\n      const hasNoParentSpan = trace.getSpan(context.active()) === undefined;\n      if (config?.requireParentSpan === true && hasNoParentSpan) {\n        return original.apply(this, arguments);\n      }\n\n      const span = instrumentation.tracer.startSpan(cmd.name, {\n        kind: SpanKind.CLIENT,\n        attributes: {\n          [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_REDIS,\n          [SEMATTRS_DB_STATEMENT]: dbStatementSerializer(cmd.name, cmd.args),\n        },\n      });\n\n      if (config?.requestHook) {\n        safeExecuteInTheMiddle(\n          () =>\n            config?.requestHook!(span, {\n              moduleVersion,\n              cmdName: cmd.name,\n              cmdArgs: cmd.args,\n            }),\n          e => {\n            if (e) {\n              diag.error('ioredis instrumentation: request hook failed', e);\n            }\n          },\n          true\n        );\n      }\n\n      const { host, port } = this.options;\n\n      span.setAttributes({\n        [SEMATTRS_NET_PEER_NAME]: host,\n        [SEMATTRS_NET_PEER_PORT]: port,\n        [SEMATTRS_DB_CONNECTION_STRING]: `redis://${host}:${port}`,\n      });\n\n      try {\n        const result = original.apply(this, arguments);\n\n        const origResolve = cmd.resolve;\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        cmd.resolve = function (result: any) {\n          safeExecuteInTheMiddle(\n            () => config?.responseHook?.(span, cmd.name, cmd.args, result),\n            e => {\n              if (e) {\n                diag.error('ioredis instrumentation: response hook failed', e);\n              }\n            },\n            true\n          );\n\n          endSpan(span, null);\n          origResolve(result);\n        };\n\n        const origReject = cmd.reject;\n        cmd.reject = function (err: Error) {\n          endSpan(span, err);\n          origReject(err);\n        };\n\n        return result;\n      } catch (error: any) {\n        endSpan(span, error);\n        throw error;\n      }\n    };\n  }\n\n  private _traceConnection(original: Function) {\n    const instrumentation = this;\n    return function (this: RedisInterface) {\n      const config =\n        instrumentation.getConfig() as IORedisInstrumentationConfig;\n      const hasNoParentSpan = trace.getSpan(context.active()) === undefined;\n      if (config?.requireParentSpan === true && hasNoParentSpan) {\n        return original.apply(this, arguments);\n      }\n\n      const span = instrumentation.tracer.startSpan('connect', {\n        kind: SpanKind.CLIENT,\n        attributes: {\n          [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_REDIS,\n          [SEMATTRS_DB_STATEMENT]: 'connect',\n        },\n      });\n      const { host, port } = this.options;\n\n      span.setAttributes({\n        [SEMATTRS_NET_PEER_NAME]: host,\n        [SEMATTRS_NET_PEER_PORT]: port,\n        [SEMATTRS_DB_CONNECTION_STRING]: `redis://${host}:${port}`,\n      });\n      try {\n        const client = original.apply(this, arguments);\n        endSpan(span, null);\n        return client;\n      } catch (error: any) {\n        endSpan(span, error);\n        throw error;\n      }\n    };\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Attributes, DiagLogger } from '@opentelemetry/api';\nimport {\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n  DBSYSTEMVALUES_REDIS,\n} from '@opentelemetry/semantic-conventions';\n\nexport function getClientAttributes(\n  diag: DiagLogger,\n  options: any\n): Attributes {\n  return {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_REDIS,\n    [SEMATTRS_NET_PEER_NAME]: options?.socket?.host,\n    [SEMATTRS_NET_PEER_PORT]: options?.socket?.port,\n    [SEMATTRS_DB_CONNECTION_STRING]:\n      removeCredentialsFromDBConnectionStringAttribute(diag, options?.url),\n  };\n}\n\n/**\n * removeCredentialsFromDBConnectionStringAttribute removes basic auth from url and user_pwd from query string\n *\n * Examples:\n *   redis://user:pass@localhost:6379/mydb => redis://localhost:6379/mydb\n *   redis://localhost:6379?db=mydb&user_pwd=pass => redis://localhost:6379?db=mydb\n */\nfunction removeCredentialsFromDBConnectionStringAttribute(\n  diag: DiagLogger,\n  url?: unknown\n): string | undefined {\n  if (typeof url !== 'string') {\n    return;\n  }\n\n  try {\n    const u = new URL(url);\n    u.searchParams.delete('user_pwd');\n    u.username = '';\n    u.password = '';\n    return u.href;\n  } catch (err) {\n    diag.error('failed to sanitize redis connection url', err);\n  }\n  return;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.41.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-redis-4';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  trace,\n  context,\n  SpanKind,\n  Span,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n} from '@opentelemetry/instrumentation';\nimport { getClientAttributes } from './utils';\nimport { defaultDbStatementSerializer } from '@opentelemetry/redis-common';\nimport { RedisInstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { SEMATTRS_DB_STATEMENT } from '@opentelemetry/semantic-conventions';\nimport type { MultiErrorReply } from './internal-types';\n\nconst OTEL_OPEN_SPANS = Symbol(\n  'opentelemetry.instrumentation.redis.open_spans'\n);\nconst MULTI_COMMAND_OPTIONS = Symbol(\n  'opentelemetry.instrumentation.redis.multi_command_options'\n);\n\ninterface MutliCommandInfo {\n  span: Span;\n  commandName: string;\n  commandArgs: Array<string | Buffer>;\n}\n\nconst DEFAULT_CONFIG: RedisInstrumentationConfig = {\n  requireParentSpan: false,\n};\n\nexport class RedisInstrumentation extends InstrumentationBase {\n  static readonly COMPONENT = 'redis';\n\n  protected override _config!: RedisInstrumentationConfig;\n\n  constructor(config: RedisInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  override setConfig(config: RedisInstrumentationConfig = {}) {\n    this._config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  protected init() {\n    // @node-redis/client is a new package introduced and consumed by 'redis 4.0.x'\n    // on redis@4.1.0 it was changed to @redis/client.\n    // we will instrument both packages\n    return [\n      this._getInstrumentationNodeModuleDefinition('@redis/client'),\n      this._getInstrumentationNodeModuleDefinition('@node-redis/client'),\n    ];\n  }\n\n  private _getInstrumentationNodeModuleDefinition(\n    basePackageName: string\n  ): InstrumentationNodeModuleDefinition {\n    const commanderModuleFile = new InstrumentationNodeModuleFile(\n      `${basePackageName}/dist/lib/commander.js`,\n      ['^1.0.0'],\n      (moduleExports: any, moduleVersion?: string) => {\n        const transformCommandArguments =\n          moduleExports.transformCommandArguments;\n        if (!transformCommandArguments) {\n          this._diag.error(\n            'internal instrumentation error, missing transformCommandArguments function'\n          );\n          return moduleExports;\n        }\n\n        // function name and signature changed in redis 4.1.0 from 'extendWithCommands' to 'attachCommands'\n        // the matching internal package names starts with 1.0.x (for redis 4.0.x)\n        const functionToPatch = moduleVersion?.startsWith('1.0.')\n          ? 'extendWithCommands'\n          : 'attachCommands';\n        // this is the function that extend a redis client with a list of commands.\n        // the function patches the commandExecutor to record a span\n        if (isWrapped(moduleExports?.[functionToPatch])) {\n          this._unwrap(moduleExports, functionToPatch);\n        }\n        this._wrap(\n          moduleExports,\n          functionToPatch,\n          this._getPatchExtendWithCommands(transformCommandArguments)\n        );\n\n        return moduleExports;\n      },\n      (moduleExports: any) => {\n        if (isWrapped(moduleExports?.extendWithCommands)) {\n          this._unwrap(moduleExports, 'extendWithCommands');\n        }\n        if (isWrapped(moduleExports?.attachCommands)) {\n          this._unwrap(moduleExports, 'attachCommands');\n        }\n      }\n    );\n\n    const multiCommanderModule = new InstrumentationNodeModuleFile(\n      `${basePackageName}/dist/lib/client/multi-command.js`,\n      ['^1.0.0'],\n      (moduleExports: any) => {\n        const redisClientMultiCommandPrototype =\n          moduleExports?.default?.prototype;\n\n        if (isWrapped(redisClientMultiCommandPrototype?.exec)) {\n          this._unwrap(redisClientMultiCommandPrototype, 'exec');\n        }\n        this._wrap(\n          redisClientMultiCommandPrototype,\n          'exec',\n          this._getPatchMultiCommandsExec()\n        );\n\n        if (isWrapped(redisClientMultiCommandPrototype?.addCommand)) {\n          this._unwrap(redisClientMultiCommandPrototype, 'addCommand');\n        }\n        this._wrap(\n          redisClientMultiCommandPrototype,\n          'addCommand',\n          this._getPatchMultiCommandsAddCommand()\n        );\n\n        return moduleExports;\n      },\n      (moduleExports: any) => {\n        const redisClientMultiCommandPrototype =\n          moduleExports?.default?.prototype;\n        if (isWrapped(redisClientMultiCommandPrototype?.exec)) {\n          this._unwrap(redisClientMultiCommandPrototype, 'exec');\n        }\n        if (isWrapped(redisClientMultiCommandPrototype?.addCommand)) {\n          this._unwrap(redisClientMultiCommandPrototype, 'addCommand');\n        }\n      }\n    );\n\n    const clientIndexModule = new InstrumentationNodeModuleFile(\n      `${basePackageName}/dist/lib/client/index.js`,\n      ['^1.0.0'],\n      (moduleExports: any) => {\n        const redisClientPrototype = moduleExports?.default?.prototype;\n\n        // In some @redis/client versions 'multi' is a method. In later\n        // versions, as of https://github.com/redis/node-redis/pull/2324,\n        // 'MULTI' is a method and 'multi' is a property defined in the\n        // constructor that points to 'MULTI', and therefore it will not\n        // be defined on the prototype.\n        if (redisClientPrototype?.multi) {\n          if (isWrapped(redisClientPrototype?.multi)) {\n            this._unwrap(redisClientPrototype, 'multi');\n          }\n          this._wrap(\n            redisClientPrototype,\n            'multi',\n            this._getPatchRedisClientMulti()\n          );\n        }\n        if (redisClientPrototype?.MULTI) {\n          if (isWrapped(redisClientPrototype?.MULTI)) {\n            this._unwrap(redisClientPrototype, 'MULTI');\n          }\n          this._wrap(\n            redisClientPrototype,\n            'MULTI',\n            this._getPatchRedisClientMulti()\n          );\n        }\n\n        if (isWrapped(redisClientPrototype?.sendCommand)) {\n          this._unwrap(redisClientPrototype, 'sendCommand');\n        }\n        this._wrap(\n          redisClientPrototype,\n          'sendCommand',\n          this._getPatchRedisClientSendCommand()\n        );\n\n        this._wrap(\n          redisClientPrototype,\n          'connect',\n          this._getPatchedClientConnect()\n        );\n\n        return moduleExports;\n      },\n      (moduleExports: any) => {\n        const redisClientPrototype = moduleExports?.default?.prototype;\n        if (isWrapped(redisClientPrototype?.multi)) {\n          this._unwrap(redisClientPrototype, 'multi');\n        }\n        if (isWrapped(redisClientPrototype?.MULTI)) {\n          this._unwrap(redisClientPrototype, 'MULTI');\n        }\n        if (isWrapped(redisClientPrototype?.sendCommand)) {\n          this._unwrap(redisClientPrototype, 'sendCommand');\n        }\n      }\n    );\n\n    return new InstrumentationNodeModuleDefinition(\n      basePackageName,\n      ['^1.0.0'],\n      (moduleExports: any) => {\n        return moduleExports;\n      },\n      () => {},\n      [commanderModuleFile, multiCommanderModule, clientIndexModule]\n    );\n  }\n\n  // serves both for redis 4.0.x where function name is extendWithCommands\n  // and redis ^4.1.0 where function name is attachCommands\n  private _getPatchExtendWithCommands(transformCommandArguments: Function) {\n    const plugin = this;\n    return function extendWithCommandsPatchWrapper(original: Function) {\n      return function extendWithCommandsPatch(this: any, config: any) {\n        if (config?.BaseClass?.name !== 'RedisClient') {\n          return original.apply(this, arguments);\n        }\n\n        const origExecutor = config.executor;\n        config.executor = function (\n          this: any,\n          command: any,\n          args: Array<string | Buffer>\n        ) {\n          const redisCommandArguments = transformCommandArguments(\n            command,\n            args\n          ).args;\n          return plugin._traceClientCommand(\n            origExecutor,\n            this,\n            arguments,\n            redisCommandArguments\n          );\n        };\n        return original.apply(this, arguments);\n      };\n    };\n  }\n\n  private _getPatchMultiCommandsExec() {\n    const plugin = this;\n    return function execPatchWrapper(original: Function) {\n      return function execPatch(this: any) {\n        const execRes = original.apply(this, arguments);\n        if (typeof execRes?.then !== 'function') {\n          plugin._diag.error(\n            'got non promise result when patching RedisClientMultiCommand.exec'\n          );\n          return execRes;\n        }\n\n        return execRes\n          .then((redisRes: unknown[]) => {\n            const openSpans = this[OTEL_OPEN_SPANS];\n            plugin._endSpansWithRedisReplies(openSpans, redisRes);\n            return redisRes;\n          })\n          .catch((err: Error) => {\n            const openSpans = this[OTEL_OPEN_SPANS];\n            if (!openSpans) {\n              plugin._diag.error(\n                'cannot find open spans to end for redis multi command'\n              );\n            } else {\n              const replies =\n                err.constructor.name === 'MultiErrorReply'\n                  ? (err as MultiErrorReply).replies\n                  : new Array(openSpans.length).fill(err);\n              plugin._endSpansWithRedisReplies(openSpans, replies);\n            }\n            return Promise.reject(err);\n          });\n      };\n    };\n  }\n\n  private _getPatchMultiCommandsAddCommand() {\n    const plugin = this;\n    return function addCommandWrapper(original: Function) {\n      return function addCommandPatch(this: any, args: Array<string | Buffer>) {\n        return plugin._traceClientCommand(original, this, arguments, args);\n      };\n    };\n  }\n\n  private _getPatchRedisClientMulti() {\n    return function multiPatchWrapper(original: Function) {\n      return function multiPatch(this: any) {\n        const multiRes = original.apply(this, arguments);\n        multiRes[MULTI_COMMAND_OPTIONS] = this.options;\n        return multiRes;\n      };\n    };\n  }\n\n  private _getPatchRedisClientSendCommand() {\n    const plugin = this;\n    return function sendCommandWrapper(original: Function) {\n      return function sendCommandPatch(\n        this: any,\n        args: Array<string | Buffer>\n      ) {\n        return plugin._traceClientCommand(original, this, arguments, args);\n      };\n    };\n  }\n\n  private _getPatchedClientConnect() {\n    const plugin = this;\n    return function connectWrapper(original: Function) {\n      return function patchedConnect(this: any): Promise<void> {\n        const options = this.options;\n\n        const attributes = getClientAttributes(this._diag, options);\n\n        const span = plugin.tracer.startSpan(\n          `${RedisInstrumentation.COMPONENT}-connect`,\n          {\n            kind: SpanKind.CLIENT,\n            attributes,\n          }\n        );\n\n        const res = context.with(trace.setSpan(context.active(), span), () => {\n          return original.apply(this);\n        });\n\n        return res\n          .then((result: unknown) => {\n            span.end();\n            return result;\n          })\n          .catch((error: Error) => {\n            span.recordException(error);\n            span.setStatus({\n              code: SpanStatusCode.ERROR,\n              message: error.message,\n            });\n            span.end();\n            return Promise.reject(error);\n          });\n      };\n    };\n  }\n\n  private _traceClientCommand(\n    origFunction: Function,\n    origThis: any,\n    origArguments: IArguments,\n    redisCommandArguments: Array<string | Buffer>\n  ) {\n    const hasNoParentSpan = trace.getSpan(context.active()) === undefined;\n    if (hasNoParentSpan && this._config?.requireParentSpan) {\n      return origFunction.apply(origThis, origArguments);\n    }\n\n    const clientOptions = origThis.options || origThis[MULTI_COMMAND_OPTIONS];\n\n    const commandName = redisCommandArguments[0] as string; // types also allows it to be a Buffer, but in practice it only string\n    const commandArgs = redisCommandArguments.slice(1);\n\n    const dbStatementSerializer =\n      this._config?.dbStatementSerializer || defaultDbStatementSerializer;\n\n    const attributes = getClientAttributes(this._diag, clientOptions);\n\n    try {\n      const dbStatement = dbStatementSerializer(commandName, commandArgs);\n      if (dbStatement != null) {\n        attributes[SEMATTRS_DB_STATEMENT] = dbStatement;\n      }\n    } catch (e) {\n      this._diag.error('dbStatementSerializer throw an exception', e, {\n        commandName,\n      });\n    }\n\n    const span = this.tracer.startSpan(\n      `${RedisInstrumentation.COMPONENT}-${commandName}`,\n      {\n        kind: SpanKind.CLIENT,\n        attributes,\n      }\n    );\n\n    const res = context.with(trace.setSpan(context.active(), span), () => {\n      return origFunction.apply(origThis, origArguments);\n    });\n    if (typeof res?.then === 'function') {\n      res.then(\n        (redisRes: unknown) => {\n          this._endSpanWithResponse(\n            span,\n            commandName,\n            commandArgs,\n            redisRes,\n            undefined\n          );\n        },\n        (err: any) => {\n          this._endSpanWithResponse(span, commandName, commandArgs, null, err);\n        }\n      );\n    } else {\n      const redisClientMultiCommand = res as {\n        [OTEL_OPEN_SPANS]?: Array<MutliCommandInfo>;\n      };\n      redisClientMultiCommand[OTEL_OPEN_SPANS] =\n        redisClientMultiCommand[OTEL_OPEN_SPANS] || [];\n      redisClientMultiCommand[OTEL_OPEN_SPANS]!.push({\n        span,\n        commandName,\n        commandArgs,\n      });\n    }\n    return res;\n  }\n\n  private _endSpansWithRedisReplies(\n    openSpans: Array<MutliCommandInfo>,\n    replies: unknown[]\n  ) {\n    if (!openSpans) {\n      return this._diag.error(\n        'cannot find open spans to end for redis multi command'\n      );\n    }\n    if (replies.length !== openSpans.length) {\n      return this._diag.error(\n        'number of multi command spans does not match response from redis'\n      );\n    }\n    for (let i = 0; i < openSpans.length; i++) {\n      const { span, commandName, commandArgs } = openSpans[i];\n      const currCommandRes = replies[i];\n      const [res, err] =\n        currCommandRes instanceof Error\n          ? [null, currCommandRes]\n          : [currCommandRes, undefined];\n      this._endSpanWithResponse(span, commandName, commandArgs, res, err);\n    }\n  }\n\n  private _endSpanWithResponse(\n    span: Span,\n    commandName: string,\n    commandArgs: Array<string | Buffer>,\n    response: unknown,\n    error: Error | undefined\n  ) {\n    if (!error && this._config.responseHook) {\n      try {\n        this._config.responseHook(span, commandName, commandArgs, response);\n      } catch (err) {\n        this._diag.error('responseHook throw an exception', err);\n      }\n    }\n    if (error) {\n      span.recordException(error);\n      span.setStatus({ code: SpanStatusCode.ERROR, message: error?.message });\n    }\n    span.end();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.39.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-nestjs-core';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  VERSION = 'nestjs.version',\n  TYPE = 'nestjs.type',\n  MODULE = 'nestjs.module',\n  CONTROLLER = 'nestjs.controller',\n  CALLBACK = 'nestjs.callback',\n  PIPES = 'nestjs.pipes',\n  INTERCEPTORS = 'nestjs.interceptors',\n  GUARDS = 'nestjs.guards',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum NestType {\n  APP_CREATION = 'app_creation',\n  REQUEST_CONTEXT = 'request_context',\n  REQUEST_HANDLER = 'handler',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { AttributeNames } from './AttributeNames';\nexport { NestType } from './NestType';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport type { NestFactory } from '@nestjs/core/nest-factory.js';\nimport type { RouterExecutionContext } from '@nestjs/core/router/router-execution-context.js';\nimport type { Controller } from '@nestjs/common/interfaces';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  SEMATTRS_HTTP_METHOD,\n  SEMATTRS_HTTP_ROUTE,\n  SEMATTRS_HTTP_URL,\n} from '@opentelemetry/semantic-conventions';\nimport { AttributeNames, NestType } from './enums';\n\nconst supportedVersions = ['>=4.0.0 <11'];\n\nexport class NestInstrumentation extends InstrumentationBase {\n  static readonly COMPONENT = '@nestjs/core';\n  static readonly COMMON_ATTRIBUTES = {\n    component: NestInstrumentation.COMPONENT,\n  };\n\n  constructor(config: InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init() {\n    const module = new InstrumentationNodeModuleDefinition(\n      NestInstrumentation.COMPONENT,\n      supportedVersions\n    );\n\n    module.files.push(\n      this.getNestFactoryFileInstrumentation(supportedVersions),\n      this.getRouterExecutionContextFileInstrumentation(supportedVersions)\n    );\n\n    return module;\n  }\n\n  getNestFactoryFileInstrumentation(versions: string[]) {\n    return new InstrumentationNodeModuleFile(\n      '@nestjs/core/nest-factory.js',\n      versions,\n      (NestFactoryStatic: any, moduleVersion?: string) => {\n        this.ensureWrapped(\n          NestFactoryStatic.NestFactoryStatic.prototype,\n          'create',\n          createWrapNestFactoryCreate(this.tracer, moduleVersion)\n        );\n        return NestFactoryStatic;\n      },\n      (NestFactoryStatic: any) => {\n        this._unwrap(NestFactoryStatic.NestFactoryStatic.prototype, 'create');\n      }\n    );\n  }\n\n  getRouterExecutionContextFileInstrumentation(versions: string[]) {\n    return new InstrumentationNodeModuleFile(\n      '@nestjs/core/router/router-execution-context.js',\n      versions,\n      (RouterExecutionContext: any, moduleVersion?: string) => {\n        this.ensureWrapped(\n          RouterExecutionContext.RouterExecutionContext.prototype,\n          'create',\n          createWrapCreateHandler(this.tracer, moduleVersion)\n        );\n        return RouterExecutionContext;\n      },\n      (RouterExecutionContext: any) => {\n        this._unwrap(\n          RouterExecutionContext.RouterExecutionContext.prototype,\n          'create'\n        );\n      }\n    );\n  }\n\n  private ensureWrapped(\n    obj: any,\n    methodName: string,\n    wrapper: (original: any) => any\n  ) {\n    if (isWrapped(obj[methodName])) {\n      this._unwrap(obj, methodName);\n    }\n    this._wrap(obj, methodName, wrapper);\n  }\n}\n\nfunction createWrapNestFactoryCreate(\n  tracer: api.Tracer,\n  moduleVersion?: string\n) {\n  return function wrapCreate(original: typeof NestFactory.create) {\n    return function createWithTrace(\n      this: typeof NestFactory,\n      nestModule: any\n      /* serverOrOptions */\n    ) {\n      const span = tracer.startSpan('Create Nest App', {\n        attributes: {\n          ...NestInstrumentation.COMMON_ATTRIBUTES,\n          [AttributeNames.TYPE]: NestType.APP_CREATION,\n          [AttributeNames.VERSION]: moduleVersion,\n          [AttributeNames.MODULE]: nestModule.name,\n        },\n      });\n      const spanContext = api.trace.setSpan(api.context.active(), span);\n\n      return api.context.with(spanContext, async () => {\n        try {\n          return await original.apply(this, arguments as any);\n        } catch (e: any) {\n          throw addError(span, e);\n        } finally {\n          span.end();\n        }\n      });\n    };\n  };\n}\n\nfunction createWrapCreateHandler(tracer: api.Tracer, moduleVersion?: string) {\n  return function wrapCreateHandler(\n    original: RouterExecutionContext['create']\n  ) {\n    return function createHandlerWithTrace(\n      this: RouterExecutionContext,\n      instance: Controller,\n      callback: (...args: any[]) => unknown\n    ) {\n      arguments[1] = createWrapHandler(tracer, moduleVersion, callback);\n      const handler = original.apply(this, arguments as any);\n      const callbackName = callback.name;\n      const instanceName =\n        instance.constructor && instance.constructor.name\n          ? instance.constructor.name\n          : 'UnnamedInstance';\n      const spanName = callbackName\n        ? `${instanceName}.${callbackName}`\n        : instanceName;\n\n      return function (\n        this: any,\n        req: any,\n        res: any,\n        next: (...args: any[]) => unknown\n      ) {\n        const span = tracer.startSpan(spanName, {\n          attributes: {\n            ...NestInstrumentation.COMMON_ATTRIBUTES,\n            [AttributeNames.VERSION]: moduleVersion,\n            [AttributeNames.TYPE]: NestType.REQUEST_CONTEXT,\n            [SEMATTRS_HTTP_METHOD]: req.method,\n            [SEMATTRS_HTTP_URL]: req.originalUrl || req.url,\n            [SEMATTRS_HTTP_ROUTE]:\n              req.route?.path || req.routeOptions?.url || req.routerPath,\n            [AttributeNames.CONTROLLER]: instanceName,\n            [AttributeNames.CALLBACK]: callbackName,\n          },\n        });\n        const spanContext = api.trace.setSpan(api.context.active(), span);\n\n        return api.context.with(spanContext, async () => {\n          try {\n            return await handler.apply(this, arguments as any);\n          } catch (e: any) {\n            throw addError(span, e);\n          } finally {\n            span.end();\n          }\n        });\n      };\n    };\n  };\n}\n\nfunction createWrapHandler(\n  tracer: api.Tracer,\n  moduleVersion: string | undefined,\n  handler: Function\n) {\n  const spanName = handler.name || 'anonymous nest handler';\n  const options = {\n    attributes: {\n      ...NestInstrumentation.COMMON_ATTRIBUTES,\n      [AttributeNames.VERSION]: moduleVersion,\n      [AttributeNames.TYPE]: NestType.REQUEST_HANDLER,\n      [AttributeNames.CALLBACK]: handler.name,\n    },\n  };\n  const wrappedHandler = function (this: RouterExecutionContext) {\n    const span = tracer.startSpan(spanName, options);\n    const spanContext = api.trace.setSpan(api.context.active(), span);\n\n    return api.context.with(spanContext, async () => {\n      try {\n        return await handler.apply(this, arguments);\n      } catch (e: any) {\n        throw addError(span, e);\n      } finally {\n        span.end();\n      }\n    });\n  };\n\n  if (handler.name) {\n    Object.defineProperty(wrappedHandler, 'name', { value: handler.name });\n  }\n\n  // Get the current metadata and set onto the wrapper to ensure other decorators ( ie: NestJS EventPattern / RolesGuard )\n  // won't be affected by the use of this instrumentation\n  Reflect.getMetadataKeys(handler).forEach(metadataKey => {\n    Reflect.defineMetadata(\n      metadataKey,\n      Reflect.getMetadata(metadataKey, handler),\n      wrappedHandler\n    );\n  });\n  return wrappedHandler;\n}\n\nconst addError = (span: api.Span, error: Error) => {\n  span.recordException(error);\n  span.setStatus({ code: api.SpanStatusCode.ERROR, message: error.message });\n  return error;\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './enums/AttributeNames';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Postgresql specific attributes not covered by semantic conventions\nexport enum AttributeNames {\n  PG_VALUES = 'db.postgresql.values',\n  PG_PLAN = 'db.postgresql.plan',\n  IDLE_TIMEOUT_MILLIS = 'db.postgresql.idle.timeout.millis',\n  MAX_CLIENT = 'db.postgresql.max.client',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Contains span names produced by instrumentation\nexport enum SpanNames {\n  QUERY_PREFIX = 'pg.query',\n  CONNECT = 'pg.connect',\n  POOL_CONNECT = 'pg-pool.connect',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  trace,\n  Span,\n  SpanStatusCode,\n  Tracer,\n  SpanKind,\n  diag,\n} from '@opentelemetry/api';\nimport { AttributeNames } from './enums/AttributeNames';\nimport {\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n  SEMATTRS_DB_USER,\n  SEMATTRS_DB_STATEMENT,\n  DBSYSTEMVALUES_POSTGRESQL,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  PgClientExtended,\n  PostgresCallback,\n  PgPoolCallback,\n  PgPoolExtended,\n  PgParsedConnectionParams,\n  PgPoolOptionsParams,\n} from './internal-types';\nimport { PgInstrumentationConfig } from './types';\nimport type * as pgTypes from 'pg';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport { SpanNames } from './enums/SpanNames';\n\n/**\n * Helper function to get a low cardinality span name from whatever info we have\n * about the query.\n *\n * This is tricky, because we don't have most of the information (table name,\n * operation name, etc) the spec recommends using to build a low-cardinality\n * value w/o parsing. So, we use db.name and assume that, if the query's a named\n * prepared statement, those `name` values will be low cardinality. If we don't\n * have a named prepared statement, we try to parse an operation (despite the\n * spec's warnings).\n *\n * @params dbName The name of the db against which this query is being issued,\n *   which could be missing if no db name was given at the time that the\n *   connection was established.\n * @params queryConfig Information we have about the query being issued, typed\n *   to reflect only the validation we've actually done on the args to\n *   `client.query()`. This will be undefined if `client.query()` was called\n *   with invalid arguments.\n */\nexport function getQuerySpanName(\n  dbName: string | undefined,\n  queryConfig?: { text: string; name?: unknown }\n) {\n  // NB: when the query config is invalid, we omit the dbName too, so that\n  // someone (or some tool) reading the span name doesn't misinterpret the\n  // dbName as being a prepared statement or sql commit name.\n  if (!queryConfig) return SpanNames.QUERY_PREFIX;\n\n  // Either the name of a prepared statement; or an attempted parse\n  // of the SQL command, normalized to uppercase; or unknown.\n  const command =\n    typeof queryConfig.name === 'string' && queryConfig.name\n      ? queryConfig.name\n      : parseNormalizedOperationName(queryConfig.text);\n\n  return `${SpanNames.QUERY_PREFIX}:${command}${dbName ? ` ${dbName}` : ''}`;\n}\n\nfunction parseNormalizedOperationName(queryText: string) {\n  const indexOfFirstSpace = queryText.indexOf(' ');\n  let sqlCommand =\n    indexOfFirstSpace === -1\n      ? queryText\n      : queryText.slice(0, indexOfFirstSpace);\n  sqlCommand = sqlCommand.toUpperCase();\n\n  // Handle query text being \"COMMIT;\", which has an extra semicolon before the space.\n  return sqlCommand.endsWith(';') ? sqlCommand.slice(0, -1) : sqlCommand;\n}\n\nexport function getConnectionString(params: PgParsedConnectionParams) {\n  const host = params.host || 'localhost';\n  const port = params.port || 5432;\n  const database = params.database || '';\n  return `postgresql://${host}:${port}/${database}`;\n}\n\nfunction getPort(port: number | undefined): number | undefined {\n  // Port may be NaN as parseInt() is used on the value, passing null will result in NaN being parsed.\n  // https://github.com/brianc/node-postgres/blob/2a8efbee09a284be12748ed3962bc9b816965e36/packages/pg/lib/connection-parameters.js#L66\n  if (Number.isInteger(port)) {\n    return port;\n  }\n\n  // Unable to find the default used in pg code, so falling back to 'undefined'.\n  return undefined;\n}\n\nexport function getSemanticAttributesFromConnection(\n  params: PgParsedConnectionParams\n) {\n  return {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_POSTGRESQL,\n    [SEMATTRS_DB_NAME]: params.database, // required\n    [SEMATTRS_DB_CONNECTION_STRING]: getConnectionString(params), // required\n    [SEMATTRS_NET_PEER_NAME]: params.host, // required\n    [SEMATTRS_NET_PEER_PORT]: getPort(params.port),\n    [SEMATTRS_DB_USER]: params.user,\n  };\n}\n\nexport function getSemanticAttributesFromPool(params: PgPoolOptionsParams) {\n  return {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_POSTGRESQL,\n    [SEMATTRS_DB_NAME]: params.database, // required\n    [SEMATTRS_DB_CONNECTION_STRING]: getConnectionString(params), // required\n    [SEMATTRS_NET_PEER_NAME]: params.host, // required\n    [SEMATTRS_NET_PEER_PORT]: getPort(params.port),\n    [SEMATTRS_DB_USER]: params.user,\n    [AttributeNames.IDLE_TIMEOUT_MILLIS]: params.idleTimeoutMillis,\n    [AttributeNames.MAX_CLIENT]: params.maxClient,\n  };\n}\n\nexport function shouldSkipInstrumentation(\n  instrumentationConfig: PgInstrumentationConfig\n) {\n  return (\n    instrumentationConfig.requireParentSpan === true &&\n    trace.getSpan(context.active()) === undefined\n  );\n}\n\n// Create a span from our normalized queryConfig object,\n// or return a basic span if no queryConfig was given/could be created.\nexport function handleConfigQuery(\n  this: PgClientExtended,\n  tracer: Tracer,\n  instrumentationConfig: PgInstrumentationConfig,\n  queryConfig?: { text: string; values?: unknown; name?: unknown }\n) {\n  // Create child span.\n  const { connectionParameters } = this;\n  const dbName = connectionParameters.database;\n\n  const spanName = getQuerySpanName(dbName, queryConfig);\n  const span = tracer.startSpan(spanName, {\n    kind: SpanKind.CLIENT,\n    attributes: getSemanticAttributesFromConnection(connectionParameters),\n  });\n\n  if (!queryConfig) {\n    return span;\n  }\n\n  // Set attributes\n  if (queryConfig.text) {\n    span.setAttribute(SEMATTRS_DB_STATEMENT, queryConfig.text);\n  }\n\n  if (\n    instrumentationConfig.enhancedDatabaseReporting &&\n    Array.isArray(queryConfig.values)\n  ) {\n    try {\n      const convertedValues = queryConfig.values.map(value => {\n        if (value == null) {\n          return 'null';\n        } else if (value instanceof Buffer) {\n          return value.toString();\n        } else if (typeof value === 'object') {\n          if (typeof value.toPostgres === 'function') {\n            return value.toPostgres();\n          }\n          return JSON.stringify(value);\n        } else {\n          //string, number\n          return value.toString();\n        }\n      });\n      span.setAttribute(AttributeNames.PG_VALUES, convertedValues);\n    } catch (e) {\n      diag.error('failed to stringify ', queryConfig.values, e);\n    }\n  }\n\n  // Set plan name attribute, if present\n  if (typeof queryConfig.name === 'string') {\n    span.setAttribute(AttributeNames.PG_PLAN, queryConfig.name);\n  }\n\n  return span;\n}\n\nexport function handleExecutionResult(\n  config: PgInstrumentationConfig,\n  span: Span,\n  pgResult: pgTypes.QueryResult | pgTypes.QueryArrayResult | unknown\n) {\n  if (typeof config.responseHook === 'function') {\n    safeExecuteInTheMiddle(\n      () => {\n        config.responseHook!(span, {\n          data: pgResult as pgTypes.QueryResult | pgTypes.QueryArrayResult,\n        });\n      },\n      err => {\n        if (err) {\n          diag.error('Error running response hook', err);\n        }\n      },\n      true\n    );\n  }\n}\n\nexport function patchCallback(\n  instrumentationConfig: PgInstrumentationConfig,\n  span: Span,\n  cb: PostgresCallback\n): PostgresCallback {\n  return function patchedCallback(\n    this: PgClientExtended,\n    err: Error,\n    res: object\n  ) {\n    if (err) {\n      // span.recordException(err);\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: err.message,\n      });\n    } else {\n      handleExecutionResult(instrumentationConfig, span, res);\n    }\n\n    span.end();\n    cb.call(this, err, res);\n  };\n}\n\nexport function patchCallbackPGPool(\n  span: Span,\n  cb: PgPoolCallback\n): PgPoolCallback {\n  return function patchedCallback(\n    this: PgPoolExtended,\n    err: Error,\n    res: object,\n    done: any\n  ) {\n    if (err) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: err.message,\n      });\n    }\n    span.end();\n    cb.call(this, err, res, done);\n  };\n}\n\nexport function patchClientConnectCallback(span: Span, cb: Function): Function {\n  return function patchedClientConnectCallback(\n    this: pgTypes.Client,\n    err: Error\n  ) {\n    if (err) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: err.message,\n      });\n    }\n    span.end();\n    cb.apply(this, arguments);\n  };\n}\n\n/**\n * Attempt to get a message string from a thrown value, while being quite\n * defensive, to recognize the fact that, in JS, any kind of value (even\n * primitives) can be thrown.\n */\nexport function getErrorMessage(e: unknown) {\n  return typeof e === 'object' && e !== null && 'message' in e\n    ? String((e as { message?: unknown }).message)\n    : undefined;\n}\n\nexport function isObjectWithTextString(it: unknown): it is ObjectWithText {\n  return (\n    typeof it === 'object' &&\n    typeof (it as null | { text?: unknown })?.text === 'string'\n  );\n}\n\nexport type ObjectWithText = {\n  text: string;\n  [k: string]: unknown;\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.43.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-pg';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\n\nimport {\n  context,\n  trace,\n  Span,\n  SpanStatusCode,\n  SpanKind,\n} from '@opentelemetry/api';\nimport type * as pgTypes from 'pg';\nimport type * as pgPoolTypes from 'pg-pool';\nimport {\n  PgClientConnect,\n  PgClientExtended,\n  PostgresCallback,\n  PgPoolExtended,\n  PgPoolCallback,\n} from './internal-types';\nimport { PgInstrumentationConfig } from './types';\nimport * as utils from './utils';\nimport { addSqlCommenterComment } from '@opentelemetry/sql-common';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { SpanNames } from './enums/SpanNames';\n\nexport class PgInstrumentation extends InstrumentationBase {\n  constructor(config: PgInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    const modulePG = new InstrumentationNodeModuleDefinition(\n      'pg',\n      ['>=8.0.0 <9'],\n      (module: any) => {\n        const moduleExports: typeof pgTypes =\n          module[Symbol.toStringTag] === 'Module'\n            ? module.default // ESM\n            : module; // CommonJS\n        if (isWrapped(moduleExports.Client.prototype.query)) {\n          this._unwrap(moduleExports.Client.prototype, 'query');\n        }\n\n        if (isWrapped(moduleExports.Client.prototype.connect)) {\n          this._unwrap(moduleExports.Client.prototype, 'connect');\n        }\n\n        this._wrap(\n          moduleExports.Client.prototype,\n          'query',\n          this._getClientQueryPatch() as any\n        );\n\n        this._wrap(\n          moduleExports.Client.prototype,\n          'connect',\n          this._getClientConnectPatch() as any\n        );\n\n        return module;\n      },\n      (module: any) => {\n        const moduleExports: typeof pgTypes =\n          module[Symbol.toStringTag] === 'Module'\n            ? module.default // ESM\n            : module; // CommonJS\n        if (isWrapped(moduleExports.Client.prototype.query)) {\n          this._unwrap(moduleExports.Client.prototype, 'query');\n        }\n      }\n    );\n\n    const modulePGPool = new InstrumentationNodeModuleDefinition(\n      'pg-pool',\n      ['>=2.0.0 <4'],\n      (moduleExports: typeof pgPoolTypes) => {\n        if (isWrapped(moduleExports.prototype.connect)) {\n          this._unwrap(moduleExports.prototype, 'connect');\n        }\n        this._wrap(\n          moduleExports.prototype,\n          'connect',\n          this._getPoolConnectPatch() as any\n        );\n        return moduleExports;\n      },\n      (moduleExports: typeof pgPoolTypes) => {\n        if (isWrapped(moduleExports.prototype.connect)) {\n          this._unwrap(moduleExports.prototype, 'connect');\n        }\n      }\n    );\n\n    return [modulePG, modulePGPool];\n  }\n\n  override setConfig(config: PgInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n  }\n\n  override getConfig(): PgInstrumentationConfig {\n    return this._config as PgInstrumentationConfig;\n  }\n\n  private _getClientConnectPatch() {\n    const plugin = this;\n    return (original: PgClientConnect) => {\n      return function connect(this: pgTypes.Client, callback?: Function) {\n        if (utils.shouldSkipInstrumentation(plugin.getConfig())) {\n          return original.call(this, callback);\n        }\n\n        const span = plugin.tracer.startSpan(SpanNames.CONNECT, {\n          kind: SpanKind.CLIENT,\n          attributes: utils.getSemanticAttributesFromConnection(this),\n        });\n\n        if (callback) {\n          const parentSpan = trace.getSpan(context.active());\n          callback = utils.patchClientConnectCallback(span, callback);\n          if (parentSpan) {\n            callback = context.bind(context.active(), callback);\n          }\n        }\n\n        const connectResult: unknown = context.with(\n          trace.setSpan(context.active(), span),\n          () => {\n            return original.call(this, callback);\n          }\n        );\n\n        return handleConnectResult(span, connectResult);\n      };\n    };\n  }\n\n  private _getClientQueryPatch() {\n    const plugin = this;\n    return (original: typeof pgTypes.Client.prototype.query) => {\n      this._diag.debug('Patching pg.Client.prototype.query');\n      return function query(this: PgClientExtended, ...args: unknown[]) {\n        if (utils.shouldSkipInstrumentation(plugin.getConfig())) {\n          return original.apply(this, args as never);\n        }\n\n        // client.query(text, cb?), client.query(text, values, cb?), and\n        // client.query(configObj, cb?) are all valid signatures. We construct\n        // a queryConfig obj from all (valid) signatures to build the span in a\n        // unified way. We verify that we at least have query text, and code\n        // defensively when dealing with `queryConfig` after that (to handle all\n        // the other invalid cases, like a non-array for values being provided).\n        // The type casts here reflect only what we've actually validated.\n        const arg0 = args[0];\n        const firstArgIsString = typeof arg0 === 'string';\n        const firstArgIsQueryObjectWithText =\n          utils.isObjectWithTextString(arg0);\n\n        // TODO: remove the `as ...` casts below when the TS version is upgraded.\n        // Newer TS versions will use the result of firstArgIsQueryObjectWithText\n        // to properly narrow arg0, but TS 4.3.5 does not.\n        const queryConfig = firstArgIsString\n          ? {\n              text: arg0 as string,\n              values: Array.isArray(args[1]) ? args[1] : undefined,\n            }\n          : firstArgIsQueryObjectWithText\n          ? (arg0 as utils.ObjectWithText)\n          : undefined;\n\n        const instrumentationConfig = plugin.getConfig();\n\n        const span = utils.handleConfigQuery.call(\n          this,\n          plugin.tracer,\n          instrumentationConfig,\n          queryConfig\n        );\n\n        // Modify query text w/ a tracing comment before invoking original for\n        // tracing, but only if args[0] has one of our expected shapes.\n        if (instrumentationConfig.addSqlCommenterCommentToQueries) {\n          args[0] = firstArgIsString\n            ? addSqlCommenterComment(span, arg0)\n            : firstArgIsQueryObjectWithText\n            ? {\n                ...arg0,\n                text: addSqlCommenterComment(span, arg0.text),\n              }\n            : args[0];\n        }\n\n        // Bind callback (if any) to parent span (if any)\n        if (args.length > 0) {\n          const parentSpan = trace.getSpan(context.active());\n          if (typeof args[args.length - 1] === 'function') {\n            // Patch ParameterQuery callback\n            args[args.length - 1] = utils.patchCallback(\n              instrumentationConfig,\n              span,\n              args[args.length - 1] as PostgresCallback // nb: not type safe.\n            );\n\n            // If a parent span exists, bind the callback\n            if (parentSpan) {\n              args[args.length - 1] = context.bind(\n                context.active(),\n                args[args.length - 1]\n              );\n            }\n          } else if (typeof queryConfig?.callback === 'function') {\n            // Patch ConfigQuery callback\n            let callback = utils.patchCallback(\n              plugin.getConfig(),\n              span,\n              queryConfig.callback as PostgresCallback // nb: not type safe.\n            );\n\n            // If a parent span existed, bind the callback\n            if (parentSpan) {\n              callback = context.bind(context.active(), callback);\n            }\n\n            (args[0] as { callback?: PostgresCallback }).callback = callback;\n          }\n        }\n\n        if (\n          typeof instrumentationConfig.requestHook === 'function' &&\n          queryConfig\n        ) {\n          safeExecuteInTheMiddle(\n            () => {\n              // pick keys to expose explicitly, so we're not leaking pg package\n              // internals that are subject to change\n              const { database, host, port, user } = this.connectionParameters;\n              const connection = { database, host, port, user };\n\n              instrumentationConfig.requestHook!(span, {\n                connection,\n                query: {\n                  text: queryConfig.text,\n                  // nb: if `client.query` is called with illegal arguments\n                  // (e.g., if `queryConfig.values` is passed explicitly, but a\n                  // non-array is given), then the type casts will be wrong. But\n                  // we leave it up to the queryHook to handle that, and we\n                  // catch and swallow any errors it throws. The other options\n                  // are all worse. E.g., we could leave `queryConfig.values`\n                  // and `queryConfig.name` as `unknown`, but then the hook body\n                  // would be forced to validate (or cast) them before using\n                  // them, which seems incredibly cumbersome given that these\n                  // casts will be correct 99.9% of the time -- and pg.query\n                  // will immediately throw during development in the other .1%\n                  // of cases. Alternatively, we could simply skip calling the\n                  // hook when `values` or `name` don't have the expected type,\n                  // but that would add unnecessary validation overhead to every\n                  // hook invocation and possibly be even more confusing/unexpected.\n                  values: queryConfig.values as unknown[],\n                  name: queryConfig.name as string | undefined,\n                },\n              });\n            },\n            err => {\n              if (err) {\n                plugin._diag.error('Error running query hook', err);\n              }\n            },\n            true\n          );\n        }\n\n        let result: unknown;\n        try {\n          result = original.apply(this, args as never);\n        } catch (e: unknown) {\n          // span.recordException(e);\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: utils.getErrorMessage(e),\n          });\n          span.end();\n          throw e;\n        }\n\n        // Bind promise to parent span and end the span\n        if (result instanceof Promise) {\n          return result\n            .then((result: unknown) => {\n              // Return a pass-along promise which ends the span and then goes to user's orig resolvers\n              return new Promise(resolve => {\n                utils.handleExecutionResult(plugin.getConfig(), span, result);\n                span.end();\n                resolve(result);\n              });\n            })\n            .catch((error: Error) => {\n              return new Promise((_, reject) => {\n                span.setStatus({\n                  code: SpanStatusCode.ERROR,\n                  message: error.message,\n                });\n                span.end();\n                reject(error);\n              });\n            });\n        }\n\n        // else returns void\n        return result; // void\n      };\n    };\n  }\n\n  private _getPoolConnectPatch() {\n    const plugin = this;\n    return (originalConnect: typeof pgPoolTypes.prototype.connect) => {\n      return function connect(this: PgPoolExtended, callback?: PgPoolCallback) {\n        if (utils.shouldSkipInstrumentation(plugin.getConfig())) {\n          return originalConnect.call(this, callback as any);\n        }\n\n        // setup span\n        const span = plugin.tracer.startSpan(SpanNames.POOL_CONNECT, {\n          kind: SpanKind.CLIENT,\n          attributes: utils.getSemanticAttributesFromPool(this.options),\n        });\n\n        if (callback) {\n          const parentSpan = trace.getSpan(context.active());\n          callback = utils.patchCallbackPGPool(\n            span,\n            callback\n          ) as PgPoolCallback;\n          // If a parent span exists, bind the callback\n          if (parentSpan) {\n            callback = context.bind(context.active(), callback);\n          }\n        }\n\n        const connectResult: unknown = context.with(\n          trace.setSpan(context.active(), span),\n          () => {\n            return originalConnect.call(this, callback as any);\n          }\n        );\n\n        return handleConnectResult(span, connectResult);\n      };\n    };\n  }\n}\n\nfunction handleConnectResult(span: Span, connectResult: unknown) {\n  if (!(connectResult instanceof Promise)) {\n    return connectResult;\n  }\n\n  const connectResultPromise = connectResult as Promise<unknown>;\n  return context.bind(\n    context.active(),\n    connectResultPromise\n      .then(result => {\n        span.end();\n        return result;\n      })\n      .catch((error: unknown) => {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: utils.getErrorMessage(error),\n        });\n        span.end();\n        return Promise.reject(error);\n      })\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\nexport * from './enums/AttributeNames';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.40.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-hapi';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as Hapi from '@hapi/hapi';\n\nexport const HapiComponentName = '@hapi/hapi';\n\n/**\n * This symbol is used to mark a Hapi route handler or server extension handler as\n * already patched, since its possible to use these handlers multiple times\n * i.e. when allowing multiple versions of one plugin, or when registering a plugin\n * multiple times on different servers.\n */\nexport const handlerPatched: unique symbol = Symbol('hapi-handler-patched');\n\nexport type HapiServerRouteInputMethod = (route: HapiServerRouteInput) => void;\n\nexport type HapiServerRouteInput =\n  | PatchableServerRoute\n  | PatchableServerRoute[];\n\nexport type PatchableServerRoute = Hapi.ServerRoute<any> & {\n  [handlerPatched]?: boolean;\n};\n\nexport type HapiPluginObject<T> = Hapi.ServerRegisterPluginObject<T>;\n\nexport type HapiPluginInput<T> =\n  | HapiPluginObject<T>\n  | Array<HapiPluginObject<T>>;\n\nexport type RegisterFunction<T> = (\n  plugin: HapiPluginInput<T>,\n  options?: Hapi.ServerRegisterOptions\n) => Promise<void>;\n\nexport type PatchableExtMethod = Hapi.Lifecycle.Method & {\n  [handlerPatched]?: boolean;\n};\n\nexport type ServerExtDirectInput = [\n  Hapi.ServerRequestExtType,\n  Hapi.Lifecycle.Method,\n  (Hapi.ServerExtOptions | undefined)?\n];\n\nexport const HapiLayerType = {\n  ROUTER: 'router',\n  PLUGIN: 'plugin',\n  EXT: 'server.ext',\n};\n\nexport const HapiLifecycleMethodNames = new Set([\n  'onPreAuth',\n  'onCredentials',\n  'onPostAuth',\n  'onPreHandler',\n  'onPostHandler',\n  'onPreResponse',\n  'onRequest',\n]);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  HAPI_TYPE = 'hapi.type',\n  PLUGIN_NAME = 'hapi.plugin.name',\n  EXT_TYPE = 'server.ext.type',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanAttributes } from '@opentelemetry/api';\nimport {\n  SEMATTRS_HTTP_METHOD,\n  SEMATTRS_HTTP_ROUTE,\n} from '@opentelemetry/semantic-conventions';\nimport type * as Hapi from '@hapi/hapi';\nimport {\n  HapiLayerType,\n  HapiLifecycleMethodNames,\n  HapiPluginObject,\n  PatchableExtMethod,\n  ServerExtDirectInput,\n} from './internal-types';\nimport { AttributeNames } from './enums/AttributeNames';\n\nexport function getPluginName<T>(plugin: Hapi.Plugin<T>): string {\n  if ((plugin as Hapi.PluginNameVersion).name) {\n    return (plugin as Hapi.PluginNameVersion).name;\n  } else {\n    return (plugin as Hapi.PluginPackage).pkg.name;\n  }\n}\n\nexport const isLifecycleExtType = (\n  variableToCheck: unknown\n): variableToCheck is Hapi.ServerRequestExtType => {\n  return (\n    typeof variableToCheck === 'string' &&\n    HapiLifecycleMethodNames.has(variableToCheck)\n  );\n};\n\nexport const isLifecycleExtEventObj = (\n  variableToCheck: unknown\n): variableToCheck is Hapi.ServerExtEventsRequestObject => {\n  const event = (variableToCheck as Hapi.ServerExtEventsRequestObject)?.type;\n  return event !== undefined && isLifecycleExtType(event);\n};\n\nexport const isDirectExtInput = (\n  variableToCheck: unknown\n): variableToCheck is ServerExtDirectInput => {\n  return (\n    Array.isArray(variableToCheck) &&\n    variableToCheck.length <= 3 &&\n    isLifecycleExtType(variableToCheck[0]) &&\n    typeof variableToCheck[1] === 'function'\n  );\n};\n\nexport const isPatchableExtMethod = (\n  variableToCheck: PatchableExtMethod | PatchableExtMethod[]\n): variableToCheck is PatchableExtMethod => {\n  return !Array.isArray(variableToCheck);\n};\n\nexport const getRouteMetadata = (\n  route: Hapi.ServerRoute,\n  pluginName?: string\n): {\n  attributes: SpanAttributes;\n  name: string;\n} => {\n  if (pluginName) {\n    return {\n      attributes: {\n        [SEMATTRS_HTTP_ROUTE]: route.path,\n        [SEMATTRS_HTTP_METHOD]: route.method,\n        [AttributeNames.HAPI_TYPE]: HapiLayerType.PLUGIN,\n        [AttributeNames.PLUGIN_NAME]: pluginName,\n      },\n      name: `${pluginName}: route - ${route.path}`,\n    };\n  }\n  return {\n    attributes: {\n      [SEMATTRS_HTTP_ROUTE]: route.path,\n      [SEMATTRS_HTTP_METHOD]: route.method,\n      [AttributeNames.HAPI_TYPE]: HapiLayerType.ROUTER,\n    },\n    name: `route - ${route.path}`,\n  };\n};\n\nexport const getExtMetadata = (\n  extPoint: Hapi.ServerRequestExtType,\n  pluginName?: string\n): {\n  attributes: SpanAttributes;\n  name: string;\n} => {\n  if (pluginName) {\n    return {\n      attributes: {\n        [AttributeNames.EXT_TYPE]: extPoint,\n        [AttributeNames.HAPI_TYPE]: HapiLayerType.EXT,\n        [AttributeNames.PLUGIN_NAME]: pluginName,\n      },\n      name: `${pluginName}: ext - ${extPoint}`,\n    };\n  }\n  return {\n    attributes: {\n      [AttributeNames.EXT_TYPE]: extPoint,\n      [AttributeNames.HAPI_TYPE]: HapiLayerType.EXT,\n    },\n    name: `ext - ${extPoint}`,\n  };\n};\n\nexport const getPluginFromInput = <T>(\n  pluginObj: HapiPluginObject<T>\n): Hapi.Plugin<T, void> => {\n  if ('plugin' in pluginObj) {\n    if ('plugin' in pluginObj.plugin) {\n      return pluginObj.plugin.plugin;\n    }\n    return pluginObj.plugin;\n  }\n  return pluginObj;\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\n\nimport type * as Hapi from '@hapi/hapi';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  HapiComponentName,\n  HapiServerRouteInput,\n  handlerPatched,\n  PatchableServerRoute,\n  HapiServerRouteInputMethod,\n  HapiPluginInput,\n  RegisterFunction,\n  PatchableExtMethod,\n  ServerExtDirectInput,\n} from './internal-types';\nimport {\n  getRouteMetadata,\n  getPluginName,\n  isLifecycleExtType,\n  isLifecycleExtEventObj,\n  getExtMetadata,\n  isDirectExtInput,\n  isPatchableExtMethod,\n  getPluginFromInput,\n} from './utils';\n\n/** Hapi instrumentation for OpenTelemetry */\nexport class HapiInstrumentation extends InstrumentationBase {\n  constructor(config: InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    return new InstrumentationNodeModuleDefinition(\n      HapiComponentName,\n      ['>=17.0.0 <22'],\n      (module: any) => {\n        const moduleExports: typeof Hapi =\n          module[Symbol.toStringTag] === 'Module' ? module.default : module;\n        if (!isWrapped(moduleExports.server)) {\n          this._wrap(\n            moduleExports,\n            'server',\n            this._getServerPatch.bind(this) as any\n          );\n        }\n\n        if (!isWrapped(moduleExports.Server)) {\n          this._wrap(\n            moduleExports,\n            'Server',\n            this._getServerPatch.bind(this) as any\n          );\n        }\n        return moduleExports;\n      },\n      (module: any) => {\n        const moduleExports: typeof Hapi =\n          module[Symbol.toStringTag] === 'Module' ? module.default : module;\n        this._massUnwrap([moduleExports], ['server', 'Server']);\n      }\n    );\n  }\n\n  /**\n   * Patches the Hapi.server and Hapi.Server functions in order to instrument\n   * the server.route, server.ext, and server.register functions via calls to the\n   * @function _getServerRoutePatch, @function _getServerExtPatch, and\n   * @function _getServerRegisterPatch functions\n   * @param original - the original Hapi Server creation function\n   */\n  private _getServerPatch(\n    original: (options?: Hapi.ServerOptions) => Hapi.Server\n  ) {\n    const instrumentation: HapiInstrumentation = this;\n    const self = this;\n    return function server(this: Hapi.Server, opts?: Hapi.ServerOptions) {\n      const newServer: Hapi.Server = original.apply(this, [opts]);\n\n      self._wrap(newServer, 'route', originalRouter => {\n        return instrumentation._getServerRoutePatch.bind(instrumentation)(\n          originalRouter\n        );\n      });\n\n      // Casting as any is necessary here due to multiple overloads on the Hapi.ext\n      // function, which requires supporting a variety of different parameters\n      // as extension inputs\n      self._wrap(newServer, 'ext', originalExtHandler => {\n        return instrumentation._getServerExtPatch.bind(instrumentation)(\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          originalExtHandler as any\n        );\n      });\n\n      // Casting as any is necessary here due to multiple overloads on the Hapi.Server.register\n      // function, which requires supporting a variety of different types of Plugin inputs\n      self._wrap(\n        newServer,\n        'register',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        instrumentation._getServerRegisterPatch.bind(instrumentation) as any\n      );\n      return newServer;\n    };\n  }\n\n  /**\n   * Patches the plugin register function used by the Hapi Server. This function\n   * goes through each plugin that is being registered and adds instrumentation\n   * via a call to the @function _wrapRegisterHandler function.\n   * @param {RegisterFunction<T>} original - the original register function which\n   * registers each plugin on the server\n   */\n  private _getServerRegisterPatch<T>(\n    original: RegisterFunction<T>\n  ): RegisterFunction<T> {\n    const instrumentation: HapiInstrumentation = this;\n    return function register(\n      this: Hapi.Server,\n      pluginInput: HapiPluginInput<T>,\n      options?: Hapi.ServerRegisterOptions\n    ) {\n      if (Array.isArray(pluginInput)) {\n        for (const pluginObj of pluginInput) {\n          const plugin = getPluginFromInput(pluginObj);\n          instrumentation._wrapRegisterHandler(plugin);\n        }\n      } else {\n        const plugin = getPluginFromInput(pluginInput);\n        instrumentation._wrapRegisterHandler(plugin);\n      }\n      return original.apply(this, [pluginInput, options]);\n    };\n  }\n\n  /**\n   * Patches the Server.ext function which adds extension methods to the specified\n   * point along the request lifecycle. This function accepts the full range of\n   * accepted input into the standard Hapi `server.ext` function. For each extension,\n   * it adds instrumentation to the handler via a call to the @function _wrapExtMethods\n   * function.\n   * @param original - the original ext function which adds the extension method to the server\n   * @param {string} [pluginName] - if present, represents the name of the plugin responsible\n   * for adding this server extension. Else, signifies that the extension was added directly\n   */\n  private _getServerExtPatch(\n    original: (...args: unknown[]) => unknown,\n    pluginName?: string\n  ) {\n    const instrumentation: HapiInstrumentation = this;\n\n    return function ext(\n      this: ThisParameterType<typeof original>,\n      ...args: Parameters<typeof original>\n    ) {\n      if (Array.isArray(args[0])) {\n        const eventsList:\n          | Hapi.ServerExtEventsObject[]\n          | Hapi.ServerExtEventsRequestObject[] = args[0];\n        for (let i = 0; i < eventsList.length; i++) {\n          const eventObj = eventsList[i];\n          if (isLifecycleExtType(eventObj.type)) {\n            const lifecycleEventObj =\n              eventObj as Hapi.ServerExtEventsRequestObject;\n            const handler = instrumentation._wrapExtMethods(\n              lifecycleEventObj.method,\n              eventObj.type,\n              pluginName\n            );\n            lifecycleEventObj.method = handler;\n            eventsList[i] = lifecycleEventObj;\n          }\n        }\n        return original.apply(this, args);\n      } else if (isDirectExtInput(args)) {\n        const extInput: ServerExtDirectInput = args;\n        const method: PatchableExtMethod = extInput[1];\n        const handler = instrumentation._wrapExtMethods(\n          method,\n          extInput[0],\n          pluginName\n        );\n        return original.apply(this, [extInput[0], handler, extInput[2]]);\n      } else if (isLifecycleExtEventObj(args[0])) {\n        const lifecycleEventObj = args[0];\n        const handler = instrumentation._wrapExtMethods(\n          lifecycleEventObj.method,\n          lifecycleEventObj.type,\n          pluginName\n        );\n        lifecycleEventObj.method = handler;\n        return original.call(this, lifecycleEventObj);\n      }\n      return original.apply(this, args);\n    };\n  }\n\n  /**\n   * Patches the Server.route function. This function accepts either one or an array\n   * of Hapi.ServerRoute objects and adds instrumentation on each route via a call to\n   * the @function _wrapRouteHandler function.\n   * @param {HapiServerRouteInputMethod} original - the original route function which adds\n   * the route to the server\n   * @param {string} [pluginName] - if present, represents the name of the plugin responsible\n   * for adding this server route. Else, signifies that the route was added directly\n   */\n  private _getServerRoutePatch(\n    original: HapiServerRouteInputMethod,\n    pluginName?: string\n  ) {\n    const instrumentation: HapiInstrumentation = this;\n    return function route(\n      this: Hapi.Server,\n      route: HapiServerRouteInput\n    ): void {\n      if (Array.isArray(route)) {\n        for (let i = 0; i < route.length; i++) {\n          const newRoute = instrumentation._wrapRouteHandler.call(\n            instrumentation,\n            route[i],\n            pluginName\n          );\n          route[i] = newRoute;\n        }\n      } else {\n        route = instrumentation._wrapRouteHandler.call(\n          instrumentation,\n          route,\n          pluginName\n        );\n      }\n      return original.apply(this, [route]);\n    };\n  }\n\n  /**\n   * Wraps newly registered plugins to add instrumentation to the plugin's clone of\n   * the original server. Specifically, wraps the server.route and server.ext functions\n   * via calls to @function _getServerRoutePatch and @function _getServerExtPatch\n   * @param {Hapi.Plugin<T>} plugin - the new plugin which is being instrumented\n   */\n  private _wrapRegisterHandler<T>(plugin: Hapi.Plugin<T>): void {\n    const instrumentation: HapiInstrumentation = this;\n    const pluginName = getPluginName(plugin);\n    const oldHandler = plugin.register;\n    const self = this;\n    const newRegisterHandler = function (server: Hapi.Server, options: T) {\n      self._wrap(server, 'route', original => {\n        return instrumentation._getServerRoutePatch.bind(instrumentation)(\n          original,\n          pluginName\n        );\n      });\n\n      // Casting as any is necessary here due to multiple overloads on the Hapi.ext\n      // function, which requires supporting a variety of different parameters\n      // as extension inputs\n      self._wrap(server, 'ext', originalExtHandler => {\n        return instrumentation._getServerExtPatch.bind(instrumentation)(\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          originalExtHandler as any,\n          pluginName\n        );\n      });\n      return oldHandler(server, options);\n    };\n    plugin.register = newRegisterHandler;\n  }\n\n  /**\n   * Wraps request extension methods to add instrumentation to each new extension handler.\n   * Patches each individual extension in order to create the\n   * span and propagate context. It does not create spans when there is no parent span.\n   * @param {PatchableExtMethod | PatchableExtMethod[]} method - the request extension\n   * handler which is being instrumented\n   * @param {Hapi.ServerRequestExtType} extPoint - the point in the Hapi request lifecycle\n   * which this extension targets\n   * @param {string} [pluginName] - if present, represents the name of the plugin responsible\n   * for adding this server route. Else, signifies that the route was added directly\n   */\n  private _wrapExtMethods<T extends PatchableExtMethod | PatchableExtMethod[]>(\n    method: T,\n    extPoint: Hapi.ServerRequestExtType,\n    pluginName?: string\n  ): T {\n    const instrumentation: HapiInstrumentation = this;\n    if (method instanceof Array) {\n      for (let i = 0; i < method.length; i++) {\n        method[i] = instrumentation._wrapExtMethods(\n          method[i],\n          extPoint\n        ) as PatchableExtMethod;\n      }\n      return method;\n    } else if (isPatchableExtMethod(method)) {\n      if (method[handlerPatched] === true) return method;\n      method[handlerPatched] = true;\n\n      const newHandler: PatchableExtMethod = async function (\n        ...params: Parameters<Hapi.Lifecycle.Method>\n      ) {\n        if (api.trace.getSpan(api.context.active()) === undefined) {\n          return await method.apply(this, params);\n        }\n        const metadata = getExtMetadata(extPoint, pluginName);\n        const span = instrumentation.tracer.startSpan(metadata.name, {\n          attributes: metadata.attributes,\n        });\n        try {\n          return await api.context.with<\n            Parameters<Hapi.Lifecycle.Method>,\n            Hapi.Lifecycle.Method\n          >(\n            api.trace.setSpan(api.context.active(), span),\n            method,\n            undefined,\n            ...params\n          );\n        } catch (err: any) {\n          span.recordException(err);\n          span.setStatus({\n            code: api.SpanStatusCode.ERROR,\n            message: err.message,\n          });\n          throw err;\n        } finally {\n          span.end();\n        }\n      };\n      return newHandler as T;\n    }\n    return method;\n  }\n\n  /**\n   * Patches each individual route handler method in order to create the\n   * span and propagate context. It does not create spans when there is no parent span.\n   * @param {PatchableServerRoute} route - the route handler which is being instrumented\n   * @param {string} [pluginName] - if present, represents the name of the plugin responsible\n   * for adding this server route. Else, signifies that the route was added directly\n   */\n  private _wrapRouteHandler(\n    route: PatchableServerRoute,\n    pluginName?: string\n  ): PatchableServerRoute {\n    const instrumentation: HapiInstrumentation = this;\n    if (route[handlerPatched] === true) return route;\n    route[handlerPatched] = true;\n\n    const wrapHandler: (\n      oldHandler: Hapi.Lifecycle.Method\n    ) => Hapi.Lifecycle.Method = oldHandler => {\n      return async function (...params: Parameters<Hapi.Lifecycle.Method>) {\n        if (api.trace.getSpan(api.context.active()) === undefined) {\n          return await oldHandler.call(this, ...params);\n        }\n        const rpcMetadata = getRPCMetadata(api.context.active());\n        if (rpcMetadata?.type === RPCType.HTTP) {\n          rpcMetadata.route = route.path;\n        }\n        const metadata = getRouteMetadata(route, pluginName);\n        const span = instrumentation.tracer.startSpan(metadata.name, {\n          attributes: metadata.attributes,\n        });\n        try {\n          return await api.context.with(\n            api.trace.setSpan(api.context.active(), span),\n            () => oldHandler.call(this, ...params)\n          );\n        } catch (err: any) {\n          span.recordException(err);\n          span.setStatus({\n            code: api.SpanStatusCode.ERROR,\n            message: err.message,\n          });\n          throw err;\n        } finally {\n          span.end();\n        }\n      };\n    };\n\n    if (typeof route.handler === 'function') {\n      route.handler = wrapHandler(route.handler as Hapi.Lifecycle.Method);\n    } else if (typeof route.options === 'function') {\n      const oldOptions = route.options;\n      route.options = function (server) {\n        const options = oldOptions(server);\n        if (typeof options.handler === 'function') {\n          options.handler = wrapHandler(\n            options.handler as Hapi.Lifecycle.Method\n          );\n        }\n        return options;\n      };\n    } else if (typeof route.options?.handler === 'function') {\n      route.options.handler = wrapHandler(\n        route.options.handler as Hapi.Lifecycle.Method\n      );\n    }\n    return route;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './enums/AttributeNames';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport enum KoaLayerType {\n  ROUTER = 'router',\n  MIDDLEWARE = 'middleware',\n}\n\n/**\n * Information about the current Koa middleware layer\n * The middleware layer type is any by default.\n * One can install koa types packages `@types/koa` and `@types/koa__router`\n * with compatible versions to the koa version used in the project\n * to get more specific types for the middleware layer property.\n *\n * Example use in a custom attribute function:\n * ```ts\n * import type { Middleware, ParameterizedContext, DefaultState } from 'koa';\n * import type { RouterParamContext } from '@koa/router';\n *\n * type KoaContext = ParameterizedContext<DefaultState, RouterParamContext>;\n * type KoaMiddleware = Middleware<DefaultState, KoaContext>;\n *\n * const koaConfig: KoaInstrumentationConfig<KoaContext, KoaMiddleware> = {\n *  requestHook: (span: Span, info: KoaRequestInfo<KoaContext, KoaMiddleware>) => {\n *   // custom typescript code that can access the typed into.middlewareLayer and info.context\n * }\n *\n */\nexport type KoaRequestInfo<KoaContextType = any, KoaMiddlewareType = any> = {\n  context: KoaContextType;\n  middlewareLayer: KoaMiddlewareType;\n  layerType: KoaLayerType;\n};\n\n/**\n * Function that can be used to add custom attributes to the current span\n * @param span - The Express middleware layer span.\n * @param context - The current KoaContext.\n */\nexport interface KoaRequestCustomAttributeFunction<\n  KoaContextType = any,\n  KoaMiddlewareType = any\n> {\n  (span: Span, info: KoaRequestInfo<KoaContextType, KoaMiddlewareType>): void;\n}\n\n/**\n * Options available for the Koa Instrumentation (see [documentation](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-Instrumentation-koa#koa-Instrumentation-options))\n */\nexport interface KoaInstrumentationConfig<\n  KoaContextType = any,\n  KoaMiddlewareType = any\n> extends InstrumentationConfig {\n  /** Ignore specific layers based on their type */\n  ignoreLayersType?: KoaLayerType[];\n  /** Function for adding custom attributes to each middleware layer span */\n  requestHook?: KoaRequestCustomAttributeFunction<\n    KoaContextType,\n    KoaMiddlewareType\n  >;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.42.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-koa';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  KOA_TYPE = 'koa.type',\n  KOA_NAME = 'koa.name',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { KoaLayerType, KoaInstrumentationConfig } from './types';\nimport { KoaContext, KoaMiddleware } from './internal-types';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { Attributes } from '@opentelemetry/api';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\n\nexport const getMiddlewareMetadata = (\n  context: KoaContext,\n  layer: KoaMiddleware,\n  isRouter: boolean,\n  layerPath?: string | RegExp\n): {\n  attributes: Attributes;\n  name: string;\n} => {\n  if (isRouter) {\n    return {\n      attributes: {\n        [AttributeNames.KOA_NAME]: layerPath?.toString(),\n        [AttributeNames.KOA_TYPE]: KoaLayerType.ROUTER,\n        [SEMATTRS_HTTP_ROUTE]: layerPath?.toString(),\n      },\n      name: context._matchedRouteName || `router - ${layerPath}`,\n    };\n  } else {\n    return {\n      attributes: {\n        [AttributeNames.KOA_NAME]: layer.name ?? 'middleware',\n        [AttributeNames.KOA_TYPE]: KoaLayerType.MIDDLEWARE,\n      },\n      name: `middleware - ${layer.name}`,\n    };\n  }\n};\n\n/**\n * Check whether the given request is ignored by configuration\n * @param [list] List of ignore patterns\n * @param [onException] callback for doing something when an exception has\n *     occurred\n */\nexport const isLayerIgnored = (\n  type: KoaLayerType,\n  config?: KoaInstrumentationConfig\n): boolean => {\n  return !!(\n    Array.isArray(config?.ignoreLayersType) &&\n    config?.ignoreLayersType?.includes(type)\n  );\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { Middleware, ParameterizedContext, DefaultState } from 'koa';\nimport type * as Router from '@koa/router';\n\nexport type KoaContext = ParameterizedContext<\n  DefaultState,\n  Router.RouterParamContext\n>;\nexport type KoaMiddleware = Middleware<DefaultState, KoaContext> & {\n  router?: Router;\n};\n\n/**\n * This symbol is used to mark a Koa layer as being already instrumented\n * since its possible to use a given layer multiple times (ex: middlewares)\n */\nexport const kLayerPatched: unique symbol = Symbol('koa-layer-patched');\n\nexport type KoaPatchedMiddleware = KoaMiddleware & {\n  [kLayerPatched]?: boolean;\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\n\nimport type * as koa from 'koa';\nimport { KoaLayerType, KoaInstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { getMiddlewareMetadata, isLayerIgnored } from './utils';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport {\n  kLayerPatched,\n  KoaContext,\n  KoaMiddleware,\n  KoaPatchedMiddleware,\n} from './internal-types';\n\n/** Koa instrumentation for OpenTelemetry */\nexport class KoaInstrumentation extends InstrumentationBase {\n  constructor(config: KoaInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  override setConfig(config: KoaInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n  }\n\n  override getConfig(): KoaInstrumentationConfig {\n    return this._config as KoaInstrumentationConfig;\n  }\n\n  protected init() {\n    return new InstrumentationNodeModuleDefinition(\n      'koa',\n      ['>=2.0.0 <3'],\n      (module: any) => {\n        const moduleExports: typeof koa =\n          module[Symbol.toStringTag] === 'Module'\n            ? module.default // ESM\n            : module; // CommonJS\n        if (moduleExports == null) {\n          return moduleExports;\n        }\n        if (isWrapped(moduleExports.prototype.use)) {\n          this._unwrap(moduleExports.prototype, 'use');\n        }\n        this._wrap(\n          moduleExports.prototype,\n          'use',\n          this._getKoaUsePatch.bind(this)\n        );\n        return module;\n      },\n      (module: any) => {\n        const moduleExports: typeof koa =\n          module[Symbol.toStringTag] === 'Module'\n            ? module.default // ESM\n            : module; // CommonJS\n        if (isWrapped(moduleExports.prototype.use)) {\n          this._unwrap(moduleExports.prototype, 'use');\n        }\n      }\n    );\n  }\n\n  /**\n   * Patches the Koa.use function in order to instrument each original\n   * middleware layer which is introduced\n   * @param {KoaMiddleware} middleware - the original middleware function\n   */\n  private _getKoaUsePatch(original: (middleware: KoaMiddleware) => koa) {\n    const plugin = this;\n    return function use(this: koa, middlewareFunction: KoaMiddleware) {\n      let patchedFunction: KoaMiddleware;\n      if (middlewareFunction.router) {\n        patchedFunction = plugin._patchRouterDispatch(middlewareFunction);\n      } else {\n        patchedFunction = plugin._patchLayer(middlewareFunction, false);\n      }\n      return original.apply(this, [patchedFunction]);\n    };\n  }\n\n  /**\n   * Patches the dispatch function used by @koa/router. This function\n   * goes through each routed middleware and adds instrumentation via a call\n   * to the @function _patchLayer function.\n   * @param {KoaMiddleware} dispatchLayer - the original dispatch function which dispatches\n   * routed middleware\n   */\n  private _patchRouterDispatch(dispatchLayer: KoaMiddleware): KoaMiddleware {\n    api.diag.debug('Patching @koa/router dispatch');\n\n    const router = dispatchLayer.router;\n\n    const routesStack = router?.stack ?? [];\n    for (const pathLayer of routesStack) {\n      const path = pathLayer.path;\n      const pathStack = pathLayer.stack;\n      for (let j = 0; j < pathStack.length; j++) {\n        const routedMiddleware: KoaMiddleware = pathStack[j];\n        pathStack[j] = this._patchLayer(routedMiddleware, true, path);\n      }\n    }\n\n    return dispatchLayer;\n  }\n\n  /**\n   * Patches each individual @param middlewareLayer function in order to create the\n   * span and propagate context. It does not create spans when there is no parent span.\n   * @param {KoaMiddleware} middlewareLayer - the original middleware function.\n   * @param {boolean} isRouter - tracks whether the original middleware function\n   * was dispatched by the router originally\n   * @param {string?} layerPath - if present, provides additional data from the\n   * router about the routed path which the middleware is attached to\n   */\n  private _patchLayer(\n    middlewareLayer: KoaPatchedMiddleware,\n    isRouter: boolean,\n    layerPath?: string | RegExp\n  ): KoaMiddleware {\n    const layerType = isRouter ? KoaLayerType.ROUTER : KoaLayerType.MIDDLEWARE;\n    // Skip patching layer if its ignored in the config\n    if (\n      middlewareLayer[kLayerPatched] === true ||\n      isLayerIgnored(layerType, this.getConfig())\n    )\n      return middlewareLayer;\n\n    if (\n      middlewareLayer.constructor.name === 'GeneratorFunction' ||\n      middlewareLayer.constructor.name === 'AsyncGeneratorFunction'\n    ) {\n      api.diag.debug('ignoring generator-based Koa middleware layer');\n      return middlewareLayer;\n    }\n\n    middlewareLayer[kLayerPatched] = true;\n\n    api.diag.debug('patching Koa middleware layer');\n    return async (context: KoaContext, next: koa.Next) => {\n      const parent = api.trace.getSpan(api.context.active());\n      if (parent === undefined) {\n        return middlewareLayer(context, next);\n      }\n      const metadata = getMiddlewareMetadata(\n        context,\n        middlewareLayer,\n        isRouter,\n        layerPath\n      );\n      const span = this.tracer.startSpan(metadata.name, {\n        attributes: metadata.attributes,\n      });\n\n      const rpcMetadata = getRPCMetadata(api.context.active());\n\n      if (rpcMetadata?.type === RPCType.HTTP && context._matchedRoute) {\n        rpcMetadata.route = context._matchedRoute.toString();\n      }\n\n      if (this.getConfig().requestHook) {\n        safeExecuteInTheMiddle(\n          () =>\n            this.getConfig().requestHook!(span, {\n              context,\n              middlewareLayer,\n              layerType,\n            }),\n          e => {\n            if (e) {\n              api.diag.error('koa instrumentation: request hook failed', e);\n            }\n          },\n          true\n        );\n      }\n\n      const newContext = api.trace.setSpan(api.context.active(), span);\n      return api.context.with(newContext, async () => {\n        try {\n          return await middlewareLayer(context, next);\n        } catch (err: any) {\n          span.recordException(err);\n          throw err;\n        } finally {\n          span.end();\n        }\n      });\n    };\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\nexport * from './enums/AttributeNames';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  CONNECT_TYPE = 'connect.type',\n  CONNECT_NAME = 'connect.name',\n}\n\nexport enum ConnectTypes {\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request_handler',\n}\n\nexport enum ConnectNames {\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request handler',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.38.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-connect';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { HandleFunction, IncomingMessage, Server } from 'connect';\n\nexport const _LAYERS_STORE_PROPERTY: unique symbol = Symbol(\n  'opentelemetry.instrumentation-connect.request-route-stack'\n);\n\nexport type UseArgs1 = [HandleFunction];\nexport type UseArgs2 = [string, HandleFunction];\nexport type UseArgs = UseArgs1 | UseArgs2;\nexport type Use = (...args: UseArgs) => Server;\nexport type PatchedRequest = {\n  [_LAYERS_STORE_PROPERTY]: string[];\n} & IncomingMessage;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { _LAYERS_STORE_PROPERTY, PatchedRequest } from './internal-types';\n\nexport const addNewStackLayer = (request: PatchedRequest) => {\n  if (Array.isArray(request[_LAYERS_STORE_PROPERTY]) === false) {\n    Object.defineProperty(request, _LAYERS_STORE_PROPERTY, {\n      enumerable: false,\n      value: [],\n    });\n  }\n  request[_LAYERS_STORE_PROPERTY].push('/');\n\n  const stackLength = request[_LAYERS_STORE_PROPERTY].length;\n\n  return () => {\n    if (stackLength === request[_LAYERS_STORE_PROPERTY].length) {\n      request[_LAYERS_STORE_PROPERTY].pop();\n    } else {\n      diag.warn('Connect: Trying to pop the stack multiple time');\n    }\n  };\n};\n\nexport const replaceCurrentStackRoute = (\n  request: PatchedRequest,\n  newRoute?: string\n) => {\n  if (newRoute) {\n    request[_LAYERS_STORE_PROPERTY].splice(-1, 1, newRoute);\n  }\n};\n\n// generate route from existing stack on request object.\n// splash between stack layer will be deduped\n// [\"/first/\", \"/second\", \"/third/\"] => /first/second/third/\nexport const generateRoute = (request: PatchedRequest) => {\n  return request[_LAYERS_STORE_PROPERTY].reduce(\n    (acc, sub) => acc.replace(/\\/+$/, '') + sub\n  );\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Span, SpanOptions } from '@opentelemetry/api';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport type { HandleFunction, NextFunction, Server } from 'connect';\nimport type { ServerResponse } from 'http';\nimport {\n  AttributeNames,\n  ConnectNames,\n  ConnectTypes,\n} from './enums/AttributeNames';\nimport { PatchedRequest, Use, UseArgs, UseArgs2 } from './internal-types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\nimport {\n  replaceCurrentStackRoute,\n  addNewStackLayer,\n  generateRoute,\n} from './utils';\n\nexport const ANONYMOUS_NAME = 'anonymous';\n\n/** Connect instrumentation for OpenTelemetry */\nexport class ConnectInstrumentation extends InstrumentationBase {\n  constructor(config: InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'connect',\n        ['>=3.0.0 <4'],\n        moduleExports => {\n          return this._patchConstructor(moduleExports);\n        }\n      ),\n    ];\n  }\n\n  private _patchApp(patchedApp: Server) {\n    if (!isWrapped(patchedApp.use)) {\n      this._wrap(patchedApp, 'use', this._patchUse.bind(this));\n    }\n    if (!isWrapped(patchedApp.handle)) {\n      this._wrap(patchedApp, 'handle', this._patchHandle.bind(this));\n    }\n  }\n\n  private _patchConstructor(original: () => Server): () => Server {\n    const instrumentation = this;\n    return function (this: Server, ...args) {\n      const app = original.apply(this, args) as Server;\n      instrumentation._patchApp(app);\n      return app;\n    };\n  }\n\n  public _patchNext(next: NextFunction, finishSpan: () => void): NextFunction {\n    return function nextFunction(this: NextFunction, err?: any): void {\n      const result = next.apply(this, [err]);\n      finishSpan();\n      return result;\n    };\n  }\n\n  public _startSpan(routeName: string, middleWare: HandleFunction): Span {\n    let connectType: ConnectTypes;\n    let connectName: string;\n    let connectTypeName: string;\n    if (routeName) {\n      connectType = ConnectTypes.REQUEST_HANDLER;\n      connectTypeName = ConnectNames.REQUEST_HANDLER;\n      connectName = routeName;\n    } else {\n      connectType = ConnectTypes.MIDDLEWARE;\n      connectTypeName = ConnectNames.MIDDLEWARE;\n      connectName = middleWare.name || ANONYMOUS_NAME;\n    }\n    const spanName = `${connectTypeName} - ${connectName}`;\n    const options: SpanOptions = {\n      attributes: {\n        [SEMATTRS_HTTP_ROUTE]: routeName.length > 0 ? routeName : '/',\n        [AttributeNames.CONNECT_TYPE]: connectType,\n        [AttributeNames.CONNECT_NAME]: connectName,\n      },\n    };\n\n    return this.tracer.startSpan(spanName, options);\n  }\n\n  public _patchMiddleware(\n    routeName: string,\n    middleWare: HandleFunction\n  ): HandleFunction {\n    const instrumentation = this;\n    const isErrorMiddleware = middleWare.length === 4;\n\n    function patchedMiddleware(this: Use): void {\n      if (!instrumentation.isEnabled()) {\n        return (middleWare as any).apply(this, arguments);\n      }\n      const [reqArgIdx, resArgIdx, nextArgIdx] = isErrorMiddleware\n        ? [1, 2, 3]\n        : [0, 1, 2];\n      const req = arguments[reqArgIdx] as PatchedRequest;\n      const res = arguments[resArgIdx] as ServerResponse;\n      const next = arguments[nextArgIdx] as NextFunction;\n\n      replaceCurrentStackRoute(req, routeName);\n\n      const rpcMetadata = getRPCMetadata(context.active());\n      if (routeName && rpcMetadata?.type === RPCType.HTTP) {\n        rpcMetadata.route = generateRoute(req);\n      }\n\n      let spanName = '';\n      if (routeName) {\n        spanName = `request handler - ${routeName}`;\n      } else {\n        spanName = `middleware - ${middleWare.name || ANONYMOUS_NAME}`;\n      }\n      const span = instrumentation._startSpan(routeName, middleWare);\n      instrumentation._diag.debug('start span', spanName);\n      let spanFinished = false;\n\n      function finishSpan() {\n        if (!spanFinished) {\n          spanFinished = true;\n          instrumentation._diag.debug(`finishing span ${(span as any).name}`);\n          span.end();\n        } else {\n          instrumentation._diag.debug(\n            `span ${(span as any).name} - already finished`\n          );\n        }\n        res.removeListener('close', finishSpan);\n      }\n\n      res.addListener('close', finishSpan);\n      arguments[nextArgIdx] = instrumentation._patchNext(next, finishSpan);\n\n      return (middleWare as any).apply(this, arguments);\n    }\n\n    Object.defineProperty(patchedMiddleware, 'length', {\n      value: middleWare.length,\n      writable: false,\n      configurable: true,\n    });\n\n    return patchedMiddleware;\n  }\n\n  public _patchUse(original: Server['use']): Use {\n    const instrumentation = this;\n    return function (this: Server, ...args: UseArgs): Server {\n      const middleWare = args[args.length - 1] as HandleFunction;\n      const routeName = (args[args.length - 2] || '') as string;\n\n      args[args.length - 1] = instrumentation._patchMiddleware(\n        routeName,\n        middleWare\n      );\n\n      return original.apply(this, args as UseArgs2);\n    };\n  }\n\n  public _patchHandle(original: Server['handle']): Server['handle'] {\n    const instrumentation = this;\n    return function (this: Server): ReturnType<Server['handle']> {\n      const [reqIdx, outIdx] = [0, 2];\n      const req = arguments[reqIdx] as PatchedRequest;\n      const out = arguments[outIdx];\n      const completeStack = addNewStackLayer(req);\n\n      if (typeof out === 'function') {\n        arguments[outIdx] = instrumentation._patchOut(\n          out as NextFunction,\n          completeStack\n        );\n      }\n\n      return (original as any).apply(this, arguments);\n    };\n  }\n\n  public _patchOut(out: NextFunction, completeStack: () => void): NextFunction {\n    return function nextFunction(this: NextFunction, ...args: any[]): void {\n      completeStack();\n      return Reflect.apply(out, this, args);\n    };\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './enums/AttributeNames';\nexport * from './instrumentation';\n","import type { ReactNode } from 'react';\nimport React, { createContext, useContext } from 'react';\nimport type { BiLogger } from '@wix/cli-telemetry';\n\nconst BiContext = createContext<BiLogger | null>(null);\n\nexport const BiProvider = function ({\n  children,\n  value: biLogger,\n}: {\n  children: ReactNode;\n  value: BiLogger;\n}) {\n  return <BiContext.Provider value={biLogger}>{children}</BiContext.Provider>;\n};\n\nexport const useBiLogger = (): BiLogger => {\n  const context = useContext(BiContext);\n\n  if (context == null) {\n    throw new Error('useBiLogger() cannot be used without an <BiProvider>');\n  }\n\n  return context;\n};\n","export { useBiLogger, BiProvider } from './useBi.js';\n","import { dirname } from 'node:path';\nimport { appendFileSync, mkdirSync } from 'node:fs';\nimport React, { createContext, useContext, useCallback } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport VError from 'verror';\nimport { extractHttpError, getHttpErrorInfo } from '@wix/cli-http-client';\n\nexport function writeCrashReport(reportPath: string, error: unknown) {\n  try {\n    let content = `----- CLI crash report at ${new Date().toISOString()}\\n`;\n    if (error instanceof Error) {\n      content += `Error Trace\\n`;\n      content += `${VError.fullStack(error)}\\n`;\n      content += `Error Info\\n`;\n      content += `${JSON.stringify(VError.info(error), null, 2)}\\n`;\n\n      const httpError = extractHttpError(error);\n      if (httpError) {\n        content += `Request Info\\n`;\n        content += `${JSON.stringify(getHttpErrorInfo(httpError), null, 2)}\\n`;\n      }\n    }\n    mkdirSync(dirname(reportPath), { recursive: true });\n    appendFileSync(reportPath, content);\n  } catch {\n    // well there is so much we can do...\n  }\n}\n\nexport type WriteDebugLogFn = (error: unknown) => void;\n\nconst DebugLogContext = createContext<WriteDebugLogFn | null>(null);\n\ninterface Props {\n  filePath: string;\n  children: ReactNode;\n}\n\nexport const DebugLogProvider: FC<Props> = ({ filePath, children }) => {\n  const writeToDebugLog = useCallback<WriteDebugLogFn>(\n    (error) => writeCrashReport(filePath, error),\n    [filePath]\n  );\n\n  return (\n    <DebugLogContext.Provider value={writeToDebugLog}>\n      {children}\n    </DebugLogContext.Provider>\n  );\n};\n\nexport const useDebugLog = (): WriteDebugLogFn => {\n  const context = useContext(DebugLogContext);\n  if (context == null) {\n    throw new Error(\n      'useDebugLog() cannot be used without an <DebugLogProvider>'\n    );\n  }\n  return context;\n};\n","import type { IHttpError } from '@wix/http-client';\nimport { HttpClient } from '@wix/http-client';\nimport VError from 'verror';\n\nexport function extractHttpError(error: unknown): IHttpError | null {\n  if (HttpClient.isHttpError(error)) {\n    return error;\n  }\n\n  const nestedError = error instanceof Error ? VError.cause(error) : null;\n  return nestedError ? extractHttpError(nestedError) : null;\n}\n","import type { IHttpError } from '@wix/http-client';\n\nexport function getHttpErrorInfo(httpError: IHttpError) {\n  return {\n    request: {\n      baseURL: httpError.config.baseURL,\n      url: httpError.config.url,\n      method: httpError.config.method,\n      headers: httpError.config.headers,\n      data: httpError.config.data,\n    },\n    response: {\n      code: httpError.code,\n      message: httpError.message,\n      status: httpError.response?.status,\n      headers: httpError.response?.headers,\n      data: httpError.response?.data,\n    },\n  } as const;\n}\n","import React from 'react';\nimport type { FC } from 'react';\nimport { I18nProvider, Trans } from '@wix/cli-i18n';\nimport { Text, Notification } from '@wix/cli-ui-kit';\nimport messages from '../messages.json' with { type: 'json' };\n\ninterface PackageDetails {\n  currentVersion: string;\n  latestVersion?: string;\n  deprecated?: string;\n  hasCliAppInstalled: boolean;\n}\n\nexport const OutdatedVersionMessage: FC<PackageDetails> = ({\n  currentVersion,\n  latestVersion,\n  deprecated,\n  hasCliAppInstalled,\n}) => {\n  return (\n    <I18nProvider messages={messages}>\n      <Notification>\n        {deprecated && (\n          <Trans\n            i18nKey=\"version_notifier.deprecated.message\"\n            components={[<Text skin=\"secondary\" />, <Text bold />]}\n            values={{\n              currentVersion,\n            }}\n          />\n        )}\n        <Trans\n          i18nKey=\"version_notifier.update.message\"\n          components={[<Text skin=\"secondary\" />, <Text skin=\"success\" />]}\n          values={{\n            currentVersion,\n            latestVersion,\n          }}\n        />\n        <Trans\n          i18nKey=\"version_notifier.update.instructions\"\n          components={[<Text skin=\"info\" />]}\n          values={{\n            packages: hasCliAppInstalled\n              ? 'npm i @wix/cli@latest @wix/cli-app@latest'\n              : 'npm i -g @wix/cli@latest',\n          }}\n        />\n      </Notification>\n    </I18nProvider>\n  );\n};\n","{\n  \"user_feedback.title\": \"Your experience matters to us. Would you like to submit feedback regarding this incident?\",\n  \"user_feedback.subtitle\": \"We may contact you by email in case we need more details.\",\n  \"user_feedback.consent.label\": \"Submit feedback?\",\n  \"user_feedback.comments.label\": \"Feedback (optional)\",\n  \"user_feedback.submitted\": \"Thank you for your cooperation in helping us resolve this issue promptly.\",\n  \"user_feedback.declined\": \"Thank you for your feedback.\",\n  \"user_feedback.contact_us\": \"Reach us in Discord in case you have more questions: <0 />\",\n  \"version_notifier.deprecated.message\": \"Your version of the Wix CLI (<0>{currentVersion}</0>) is <1>deprecated</1>\",\n  \"version_notifier.update.message\": \"Update available <0>{currentVersion}</0> -> <1>{latestVersion}</1>\",\n  \"version_notifier.update.instructions\": \"Run <0>{packages}</0> to update\"\n}\n","import { createElement, useMemo } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport { isCliSystemError, normalizeError } from '@wix/cli-error';\nimport { getErrorComponent } from '../get-error-component.js';\n\ninterface Props {\n  error: unknown;\n  systemErrorOverride?: ReactNode;\n}\n\nexport const ErrorViewer: FC<Props> = ({\n  error: originalError,\n  systemErrorOverride,\n}) => {\n  return useMemo(() => {\n    const error = normalizeError(originalError);\n\n    return isCliSystemError(error) && systemErrorOverride\n      ? systemErrorOverride\n      : createElement(getErrorComponent(error.cliCode, error.cause()));\n  }, [originalError, systemErrorOverride]);\n};\n","import type { ComponentType } from 'react';\nimport React, { Fragment } from 'react';\nimport { match } from 'variant';\nimport { Box, Newline, Text, Link, Alert } from '@wix/cli-ui-kit';\nimport { outdent } from 'outdent';\nimport type { ZodIssue } from 'zod';\nimport type { CliErrorCodeType } from '@wix/cli-error';\nimport { ErrorMessage, SystemErrorMessage } from './components/ErrorMessage.js';\nimport { OutdatedVersionMessage } from './components/OutdatedVersionMessage.js';\nimport { ServeDeprecationMessage } from './components/ServeDeprecationMessage.js';\n\nexport function getErrorComponent(\n  code: CliErrorCodeType,\n  cause: Error | undefined\n): ComponentType {\n  return match(code, {\n    UnknownFailure: ({ error }) => {\n      return () => (\n        <>\n          <Text skin=\"error\">\n            Oh no, seems like the CLI encountered an unexpected error:\n          </Text>\n\n          {error instanceof Error ? (\n            <Text skin=\"error\">{error.message}</Text>\n          ) : (\n            <Text>{JSON.stringify(error)}</Text>\n          )}\n        </>\n      );\n    },\n    FailedToGetDeviceCode: () => {\n      return () => (\n        <SystemErrorMessage message=\"An error occurred while logging in: Failed to issue a login device code\" />\n      );\n    },\n    FailedToGetAuthToken: () => {\n      return () => (\n        <SystemErrorMessage message=\"An error occurred while logging in: Failed to issue refresh token\" />\n      );\n    },\n    FailedToRefreshTokenForSite: () => {\n      return () => (\n        <SystemErrorMessage message=\"An error occurred while logging in: Failed to issue refresh token for site\" />\n      );\n    },\n    FailedToRenewAuthToken: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to renew access token.\" />\n      );\n    },\n    FailedToRenewAuthTokenSiteNotFound: ({ siteId }) => {\n      return () => (\n        <ErrorMessage\n          message={`Authenticate failed, your configured development site (${siteId}) could not be accessed`}\n          hint=\"Make sure the site exists and you still have access to it\"\n        />\n      );\n    },\n    FailedToRenewAuthTokenRefreshTokenRevoked: () => {\n      return () => (\n        <ErrorMessage\n          message=\"Failed to renew access token: refresh token has been revoked\"\n          hint=\"Please login again to get a new refresh token\"\n        />\n      );\n    },\n    FailedToRevokeRefreshToken: ({ email }) => {\n      return () => (\n        <SystemErrorMessage\n          message=\"An error occurred while trying to logout: Failed to revoke refresh token!\"\n          explanation={`Wix CLI is still logged in to account ${email}`}\n        />\n      );\n    },\n    FailedToFetchPackageJson: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to fetch package data.\" />\n      );\n    },\n    FailedToCreateProjectFolder: ({ packageFolder }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={`Failed to create project folder: ${packageFolder}.`}\n        />\n      );\n    },\n    LatestVersionOfCreateAppRequired: ({\n      currentVersion,\n      latestVersion,\n      updateCommand,\n    }) => {\n      return () => (\n        <ErrorMessage\n          message={\n            <>\n              Generating a Wix App is only supported using the latest version (\n              {latestVersion}) of <Text bold>@wix/create-app</Text> (current:{' '}\n              {currentVersion})\n            </>\n          }\n          hint={\n            <Text>\n              Make sure you are using the following command:\n              <Newline />\n              <Text bold>{updateCommand}</Text>\n              <Newline />\n              If the problem persists, try clearing your package manager's cache\n            </Text>\n          }\n        />\n      );\n    },\n    EmptyDirectoryRequiredAppGeneration: ({ folder }) => {\n      return () => (\n        <ErrorMessage\n          message={\n            <>\n              Generating a Wix App requires an empty directory but{' '}\n              <Text bold>{folder}</Text> already exists and isn't empty\n            </>\n          }\n          hint={\n            <Text>\n              Choose a different project name or delete the existing{' '}\n              <Text bold>{folder}</Text> folder\n            </Text>\n          }\n        />\n      );\n    },\n    InvalidNewPackageName: ({ packageName, validations }) => {\n      return () => (\n        <ErrorMessage\n          message={\n            <>\n              Generating a Wix App requires a valid npm package name for the\n              generated <Text bold>package.json</Text> <Newline />\n              The name <Text bold>{packageName}</Text> failed the following\n              validations:\n              <Newline />\n              {validations.map((validation, id) => (\n                <Text key={id}>\n                  <Newline />- {validation}\n                </Text>\n              ))}\n            </>\n          }\n          hint={`Choose a different project name that follows the validations above`}\n        />\n      );\n    },\n    SiteSelectorTimedout: () => {\n      return () => (\n        <ErrorMessage\n          message={`Waiting for application installation timed out.`}\n        />\n      );\n    },\n    TypeErrorInvalidUrl: () => {\n      return () => <ErrorMessage message={`Invalid assets URL.`} />;\n    },\n    UnsupportedPackageManager: ({ packageManagerName }) => {\n      return () => (\n        <ErrorMessage\n          message={`Unsupported package manager detected. Please use a supported one.`}\n          hint={`Expected Yarn or NPM but ${\n            packageManagerName\n              ? `got ${packageManagerName}`\n              : `failed to detect a package manager`\n          }`}\n        />\n      );\n    },\n    UnsupportedPackageManagerWorkspaces: ({ packageManagerName }) => {\n      return () => (\n        <ErrorMessage\n          message={`Generating a Wix App inside ${packageManagerName} workspaces is not supported`}\n        />\n      );\n    },\n    FailedToGetDeveloperApps: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get the list of your applications\" />\n      );\n    },\n    FailedToCreateDevCenterApp: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to register your application in Wix\" />\n      );\n    },\n    FailedToCreateDevCenterOAuthApp: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to register your oauth application in Wix\" />\n      );\n    },\n    FailedToUpdateDevCenterOAuthApp: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to update your oauth application in Wix\" />\n      );\n    },\n    FailedToAddPermission: () => {\n      return () => <SystemErrorMessage message=\"Failed to add permission\" />;\n    },\n    FailedToGetPlacements: () => {\n      return () => <SystemErrorMessage message=\"Failed to get placements\" />;\n    },\n    FailedToCreateTunnel: () => {\n      return () => <ErrorMessage message=\"Failed to create tunnel\" />;\n    },\n    FailedToDeleteTunnel: () => {\n      return () => <ErrorMessage message=\"Failed to delete tunnel\" />;\n    },\n    FailedToGetBlocksExtensionsData: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to get blocks extensions data\" />\n      );\n    },\n    FailedToGetBlocksStructure: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get blocks structure\" />\n      );\n    },\n    FailedToUpdateBlocksAfterSync: () => {\n      return () => (\n        <ErrorMessage message=\"Failed updating blocks service after changes occoured\" />\n      );\n    },\n    SitePermissionDenied: ({ siteId }) => {\n      return () => {\n        return (\n          <ErrorMessage\n            message={`You don't have permissions to site ${siteId}`}\n          />\n        );\n      };\n    },\n    AppPermissionDenied: ({ appId }) => {\n      return () => {\n        return (\n          <ErrorMessage\n            message={`You don't have permissions to application ${appId}`}\n          />\n        );\n      };\n    },\n    FailedToUpdateTelemetryConfig: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to change telemetry preferences\" />\n      );\n    },\n    FailedToInstallPackage: ({ packageName }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={`Failed to install npm package ${packageName}.`}\n        />\n      );\n    },\n    FailedToResolveNpmDependencies: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to resolve npm dependencies\" />\n      );\n    },\n    FailedToInstallPackages: () => {\n      return () => (\n        <ErrorMessage cause={cause} message=\"Failed to install npm packages.\" />\n      );\n    },\n    FailedMigrationToAnyNpm: () => {\n      return () => (\n        <ErrorMessage\n          message=\"Could not start the migration process\"\n          explanation=\"Make sure your `package.json` does not contain any packages under `dependencies`, as the migration cannot proceed if any are present.\"\n          hint=\"If you need to keep any of these packages, move them to `devDependencies` before proceeding.\"\n        />\n      );\n    },\n    FailedToUninstallPackage: ({ packageName }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={`Failed to uninstall npm package ${packageName}.`}\n        />\n      );\n    },\n    FailedToSyncToRevision: ({ revision }) => {\n      return () => (\n        <ErrorMessage\n          message={`Failed to sync the local project to revision ${revision}`}\n        />\n      );\n    },\n    FailedToReadCache: ({ path }) => {\n      return () => (\n        <ErrorMessage message={`Failed to read cache file at ${path}.`} />\n      );\n    },\n    FailedToWriteCache: ({ path }) => {\n      return () => (\n        <ErrorMessage message={`Failed to write cache file at ${path}.`} />\n      );\n    },\n    UploadApplicationFailed: () => {\n      return () => <ErrorMessage message=\"Failed to upload the application\" />;\n    },\n    BuiltProjectNeeded: () => {\n      return () => (\n        <ErrorMessage message=\"Can not find build output, please execute `wix app build` to build your app before proceeding\" />\n      );\n    },\n    WixUninstallMissingPackageName: () => {\n      return () => <ErrorMessage message=\"Please specify a package name\" />;\n    },\n    FailedToReadJson: ({ filePath }) => {\n      return () => (\n        <ErrorMessage cause={cause} message={`Failed to read ${filePath}.`} />\n      );\n    },\n    FailedToReadFile: ({ filePath }) => {\n      return () => (\n        <ErrorMessage cause={cause} message={`Failed to read ${filePath}.`} />\n      );\n    },\n    InvalidJsonFile: ({ filePath }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={`Invalid JSON file located at ${filePath}.`}\n        />\n      );\n    },\n    FailedToWriteWixLock: () => {\n      return () => <ErrorMessage message={`Failed to write 'wix.lock'`} />;\n    },\n    InvalidVeloConfigJson: ({ configFilename }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={`Invalid ${configFilename}, make sure it's configured correctly.`}\n        />\n      );\n    },\n    DashboardPageConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Dashboard page config not found at ${configPath}`}\n        />\n      );\n    },\n    EmbeddedScriptConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Embedded script config not found at ${configPath}`}\n        />\n      );\n    },\n    CustomElementConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Site widget config not found at ${configPath}`}\n        />\n      );\n    },\n    SitePluginConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Site plugin config not found at ${configPath}`}\n        />\n      );\n    },\n    BlocksWidgetApiNotFound: ({ folderPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Blocks widget api file not found at ${folderPath}`}\n        />\n      );\n    },\n    BlocksWidgetConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Blocks widget config not found at ${configPath}`}\n        />\n      );\n    },\n    BlocksWidgetPanelConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Blocks widget panel config not found at ${configPath}`}\n        />\n      );\n    },\n    NoExtensionsFound: () => {\n      return () => (\n        <ErrorMessage\n          message=\"Your project doesn't seem to have any extensions.\"\n          explanation=\"Extensions are the building blocks of your app.\"\n          hint=\"Make sure it is configured properly, or read our documentation (​https://wix.to/b7o4Ml0) to start developing your first extension.\"\n        />\n      );\n    },\n    NoPagesDirectoryFound: ({ srcDir }) => {\n      return () => (\n        <ErrorMessage\n          message={\n            <>\n              No <Text bold>pages</Text> directory was found under{' '}\n              <Text bold>{srcDir}</Text>.\n            </>\n          }\n          hint={\n            <Text>\n              Consider re-cloning the project repository or creating a{' '}\n              <Text bold>pages</Text> directory under <Text bold>{srcDir}</Text>\n              .\n            </Text>\n          }\n        />\n      );\n    },\n    DashboardPluginConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Dashboard plugin config not found at ${configPath}`}\n        />\n      );\n    },\n    DashboardMenuPluginConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Dashboard menu plugin config not found at ${configPath}`}\n        />\n      );\n    },\n    ServicePluginConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Service plugin config not found at ${configPath}`}\n        />\n      );\n    },\n    DashboardModalConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Dashboard modal config not found at ${configPath}`}\n        />\n      );\n    },\n    TSConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`TypeScript config not found at \\`${configPath}\\``}\n        />\n      );\n    },\n    InvalidTSConfigError: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={outdent`\n            Invalid TypeScript configuration found at \\`${configPath}\\``}\n        />\n      );\n    },\n    InvalidConfigSchemaError: ({ configPath, zodError }) => {\n      return () => (\n        <ErrorMessage\n          message={outdent`\n            Invalid configuration found at \\`${configPath}\\`:\n            The following errors were found:\n            ${zodError.errors.map(formatZodIssue).join('\\n')}`}\n          hint=\"Fix the errors above for your configurations to be applied successfully.\"\n        />\n      );\n    },\n    InvalidParamsOverrideSchemaError: ({ paramsOverridePath, zodError }) => {\n      return () => (\n        <ErrorMessage\n          message={outdent`\n            Invalid params override found at \\`${paramsOverridePath}\\`:\n            The following errors were found:\n            ${zodError.errors.map(formatZodIssue).join('\\n')}`}\n          hint=\"Fix the errors above for your params override to be applied successfully.\"\n        />\n      );\n    },\n    InvalidDependenciesJsonSchemaError: ({ path, zodError }) => {\n      return () => (\n        <ErrorMessage\n          message={outdent`\n            Invalid configuration found at \\`${path}\\`:\n            The following errors were found:\n            ${zodError.errors.map(formatZodIssue).join('\\n')}`}\n          hint={\n            <Text>\n              Try to re-install <Text bold>@wix/cli-app</Text> dependency\n            </Text>\n          }\n        />\n      );\n    },\n    PermissionDenied: () => {\n      return () => (\n        <ErrorMessage message=\"Forbidden operation. Missing permissions\" />\n      );\n    },\n    FailedToReadProjectFiles: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to read source files: make sure you have an 'src' folder and that it's readable.\"\n        />\n      );\n    },\n    GridAppFilesMaxLengthExceeded: ({ maxSizeViolationsData, filePaths }) => {\n      let errorMessage =\n        'Found one or more project files that are bigger than the allowed limit';\n\n      if (maxSizeViolationsData?.files.length) {\n        errorMessage += ` (${\n          maxSizeViolationsData.expectedSize\n        }KB): ${maxSizeViolationsData.files\n          .map((f) => `${filePaths[f.fileIndex]} (${f.receivedSize}KB)`)\n          .join(', ')}`;\n      }\n\n      return () => <ErrorMessage message={errorMessage} />;\n    },\n    GridAppFailedToUpdateFiles: () => {\n      return () => (\n        <ErrorMessage\n          message={outdent`\n            Failed to update files.\n            Failed to sync changes from local files to the Dev Editor\n            Still watching local files and will continue to sync changes...\n          `}\n        />\n      );\n    },\n    FailedToWatchFiles: () => {\n      return () => (\n        <ErrorMessage cause={cause} message=\"Failed to watch files.\" />\n      );\n    },\n    FailedToCreateGridApp: ({ error }) => {\n      return () => (\n        <ErrorMessage\n          message=\"Failed to create an isolated environment.\"\n          explanation={error}\n        />\n      );\n    },\n    DeviceCodeTimedOut: () => {\n      return () => (\n        <ErrorMessage message=\"The device code has not been approved in the time allocated, please start the login process again.\" />\n      );\n    },\n    DuplicateComponentIdsError: ({ issues }) => {\n      const Issue = ({ issue }: { issue: (typeof issues)[0] }) => {\n        const typeToName = (type: (typeof issue)['components'][0]['type']) =>\n          match(type, {\n            page: () => 'page',\n            plugin: () => 'plugin',\n            'menu-plugin': () => 'menu plugin',\n            'sidebar-category': () => 'sidebar category',\n            'embedded-script': () => 'embedded script',\n            'custom-element': () => 'custom element',\n            'blocks-widget': () => 'blocks widget',\n            'blocks-widget-panel': () => 'blocks widget panel',\n            modal: () => 'modal',\n            topology: () => 'topology',\n            'site-plugin': () => 'site plugin',\n            monitoring: () => 'monitoring',\n            'site-component': () => 'site component',\n            'site-component-panel': () => 'site component panel',\n          });\n        return (\n          <Box flexDirection=\"column\">\n            <Text>\n              <Text bold>Duplicate ID: </Text>\n              {issue.id}\n            </Text>\n            <Text bold>Extensions:</Text>\n            {issue.components.map(({ name, path, type }) => (\n              <Text key={path}>\n                [{typeToName(type)}] {name} ({path})\n              </Text>\n            ))}\n            <Text>\n              <Text bold>Possible GUID: </Text>\n              {issue.suggestedId}\n            </Text>\n          </Box>\n        );\n      };\n\n      return () => (\n        <Box flexDirection=\"column\" rowGap={1}>\n          <ErrorMessage\n            message=\"Found multiple extensions with the same id, this might happen if you copy paste folders.\"\n            hint=\"You can use the provided suggested GUIDs as the ID of the newly created extension.\"\n          />\n          {issues.map((issue) => (\n            <Issue issue={issue} key={issue.id} />\n          ))}\n        </Box>\n      );\n    },\n    InvalidResponseData: () => {\n      return () => (\n        <SystemErrorMessage message=\"Got unexpected response from server.\" />\n      );\n    },\n    InvalidCreateAppResponse: () => {\n      return () => (\n        <ErrorMessage message=\"`createApp` returned an invalid response.\" />\n      );\n    },\n    InvalidDeployAppResponse: () => {\n      return () => (\n        <ErrorMessage message=\"Got unexpected response from server. Make sure you are running a supported version of the Velo CLI.\" />\n      );\n    },\n    InvalidGetDeploymentResponse: () => {\n      return () => (\n        <ErrorMessage message=\"Got unexpected response from server. Please try again later..\" />\n      );\n    },\n    InvalidGetDeploymentPipelineDescriptionResponse: () => {\n      return () => (\n        <SystemErrorMessage message=\"Got unexpected response from server\" />\n      );\n    },\n    FailedToGetPagesDiff: () => {\n      return () => <ErrorMessage message=\"Failed to request pages diff.\" />;\n    },\n    InvalidViteBuildOutput: () => {\n      return () => <ErrorMessage message=\"Invalid vite build output\" />;\n    },\n    ViteModuleBundleNotFound: () => {\n      return () => (\n        <ErrorMessage message=\"Could not find module bundle in vite build output\" />\n      );\n    },\n    ViteFileNotFoundInOutput: ({ fileName }) => {\n      return () => (\n        <ErrorMessage\n          message={`Could not find ${fileName} in vite build output`}\n        />\n      );\n    },\n    FailedToCreateBackendDeployment: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to create backend deployment\" />\n      );\n    },\n    FailedToUpdateBackendDeployment: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to update backend deployment\" />\n      );\n    },\n    FailedToGetBackendDeployment: () => {\n      return () => <ErrorMessage message=\"Failed to get backend deployment\" />;\n    },\n    FailedToDeployBackend: () => {\n      return () => <ErrorMessage message=\"Failed to deploy backend\" />;\n    },\n    FailedToGetUserInfo: () => {\n      return () => <ErrorMessage message=\"Failed to get user information.\" />;\n    },\n    FailedToGetMyAccount: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get account information.\" />\n      );\n    },\n    FailedToCreateDevelopmentSite: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to create a Development Site\" />\n      );\n    },\n    FailedToCreateMetaSiteFromTemplate: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to create a metasite from template\" />\n      );\n    },\n    FailedToGetDevelopmentSites: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to request development sites.\" />\n      );\n    },\n    FailedToGetDevelopmentSitesLimit: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to request development sites limit.\" />\n      );\n    },\n    FailedToGetRequiredApps: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get app requirement info.\" />\n      );\n    },\n    FailedToGetMarketListing: () => {\n      return () => <ErrorMessage message=\"Failed to get market listing.\" />;\n    },\n    FailedToAddRequiredApp: () => {\n      return () => <ErrorMessage message=\"Failed to add required app.\" />;\n    },\n    FailedToQuerySites: () => {\n      return () => <ErrorMessage message=\"Failed to request sites list.\" />;\n    },\n    FailedToGetSite: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to get information about your configured Development Site\" />\n      );\n    },\n    FailedToDeploySite: () => {\n      return () => <ErrorMessage message=\"Failed to deploy site.\" />;\n    },\n    FailedToDeploySitePreview: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to deploy site preview.\" />\n      );\n    },\n    FailedToPublishDeployment: () => {\n      return () => <SystemErrorMessage message=\"Failed to publish site.\" />;\n    },\n    FailedToSaveDevelopmentSite: ({ path }) => {\n      return () => (\n        <ErrorMessage\n          message=\"Failed to save the current development site.\"\n          hint={`Make sure the \\`${path}\\` file has proper permissions and is accessible`}\n        />\n      );\n    },\n    FailedToBuildApp: () => {\n      return () => (\n        <ErrorMessage\n          message={\n            <>\n              Failed to build the application.\n              <Newline />\n              {cause?.message}\n            </>\n          }\n          hint={'Please check the build output for more information'}\n        />\n      );\n    },\n    FailedToGetAppInstallationDetails: ({ appId }) => {\n      return () => (\n        <SystemErrorMessage\n          message={`Failed to fetch site installation details for app ${appId}`}\n        />\n      );\n    },\n    FailedToInitializeGitRepo: () => {\n      return () => (\n        <ErrorMessage cause={cause} message=\"Failed to initialize git repo.\" />\n      );\n    },\n    FailedToInstallDependencies: () => {\n      return () => (\n        <ErrorMessage cause={cause} message=\"Failed to install dependencies.\" />\n      );\n    },\n    FailedToCommitChanges: () => {\n      return () => (\n        <ErrorMessage cause={cause} message=\"Failed to commit changes.\" />\n      );\n    },\n    FailedToDeleteAuthData: () => {\n      return () => (\n        <ErrorMessage cause={cause} message=\"Failed to delete auth data.\" />\n      );\n    },\n    FailedToDeleteLegacyAuthData: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to delete legacy auth data.\"\n        />\n      );\n    },\n    FailedToSaveAuthData: () => {\n      return () => (\n        <ErrorMessage cause={cause} message=\"Failed to save auth data.\" />\n      );\n    },\n    FailedToSaveApiKeyAuthData: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to save api key auth data.\"\n        />\n      );\n    },\n    FailedToWriteJson: ({ filePath }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={`Failed to write JSON at path: ${filePath}.`}\n        />\n      );\n    },\n    FailedToWriteFile: ({ filePath }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={`Failed to write file at path: ${filePath}.`}\n        />\n      );\n    },\n    FailedToCreateDir: ({ dirPath }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={`Failed to create a directory at path: ${dirPath}.`}\n        />\n      );\n    },\n    TemplatePathNotFound: ({ templatePath }) => {\n      return () => (\n        <SystemErrorMessage\n          message={`Template path not found: ${templatePath}`}\n        />\n      );\n    },\n    LocalTemplatePathNotFound: ({ path }) => {\n      return () => (\n        <ErrorMessage message={`Local template path not found: ${path}`} />\n      );\n    },\n    FailedToCloneRepo: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to clone repo.\"\n          hint=\"Make sure the Git URL is correct and that your local Git is configured properly to access the remote repository\"\n        />\n      );\n    },\n    InvalidGitUrl: ({ url }) => {\n      return () => <SystemErrorMessage message={`Invalid Git URL: ${url}`} />;\n    },\n    AuthenticationRequired: () => {\n      return () => (\n        <ErrorMessage message=\"You have to already be logged in to run this command.\" />\n      );\n    },\n    InvalidApiKey: () => {\n      return () => (\n        <ErrorMessage message=\"You used invalid API key to log in.\" />\n      );\n    },\n    SiteConfiguredRequired: () => {\n      return () => (\n        <ErrorMessage message=\"You must provide a `--site` in the command options.\" />\n      );\n    },\n    FailedAddingPackageToWorkspace: () => {\n      return () => (\n        <ErrorMessage\n          message=\"Could not add package to the workspaces configuration. Please add it as instructed by your package manager.\"\n          hint={\n            <Text>\n              Full error can be found in <Text bold>wix-error.log</Text>\n            </Text>\n          }\n        />\n      );\n    },\n    FailedToGenerateSelfSignedCertificate: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to generate a self-signed certificate for development.\" />\n      );\n    },\n    NonInteractiveTerminal: () => {\n      return () => (\n        <ErrorMessage message=\"This command is not supported in non-interactive terminals. Please run the command in an interactive terminal (TTY).\" />\n      );\n    },\n    FailedToResolveViteOrigin: () => {\n      return () => (\n        <ErrorMessage message=\"Failed to resolve the base url for CSS asset urls\" />\n      );\n    },\n    FailedToCreateAppRelease: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to create an app configuration.\" />\n      );\n    },\n    FailedToParseHttpErrorResponse: () => {\n      return () => (\n        <SystemErrorMessage message=\"Unexpected response from server.\" />\n      );\n    },\n    FailedToReleaseHeadlessProject: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed releasing a headless site and app\" />\n      );\n    },\n    AppReleaseConfigViolations: ({ violations }) => {\n      return () => (\n        <ErrorMessage\n          message=\"App configuration upload failed because of violations.\"\n          explanation={outdent`\n            Violations:\n            ${violations.map(formatFieldViolations).join('\\n')}\n          `}\n          hint={\n            <>\n              <Text>\n                It may be temporary error, try again shortly. If it fails again,\n                reach us on Discord:{' '}\n                <Link url=\"https://discord.gg/devs-on-wix\" />\n              </Text>\n            </>\n          }\n        />\n      );\n    },\n    FailedToUpdateAppRelease: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to update an app configuration.\" />\n      );\n    },\n    FailedToCreateComponents: () => {\n      return () => <SystemErrorMessage message=\"Failed to create components\" />;\n    },\n    FailedToFetchPackageDetails: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to fetch cli package details.\" />\n      );\n    },\n    FailedToGetResolveNpmDependenciesResult: () => {\n      return () => (\n        <SystemErrorMessage message={`Failed to resolve \"wix.lock\" file.`} />\n      );\n    },\n    CliAppVersionMismatch: ({ cliVersion, cliAppVersion }) => {\n      return () => (\n        <ErrorMessage\n          message={\n            <Text>\n              The versions of <Text bold>@wix/cli</Text> ({cliVersion}) and{' '}\n              <Text bold>@wix/cli-app</Text> ({cliAppVersion}) dependencies do\n              not match\n            </Text>\n          }\n          hint={\n            <Text>\n              Align their versions in your <Text bold>package.json</Text> and\n              re-install dependencies\n            </Text>\n          }\n        />\n      );\n    },\n    InvalidDashboardPageRoute: ({ route, errorMessage }) => {\n      return () => (\n        <ErrorMessage\n          message={`Invalid dashboard page route: ${route}`}\n          hint={errorMessage}\n        />\n      );\n    },\n    InvalidEmbeddedScriptFolder: ({ path, errorMessage }) => {\n      return () => (\n        <ErrorMessage\n          message={`Invalid embedded script folder: ${path}`}\n          hint={errorMessage}\n        />\n      );\n    },\n    InvalidEmbeddedScriptTemplate: ({ templateFilename, errorMessage }) => {\n      return () => (\n        <ErrorMessage\n          message={`Invalid embedded script template in ${templateFilename}`}\n          hint={errorMessage}\n        />\n      );\n    },\n    InvalidCustomElementTagName: ({ tagName, errorMessage }) => {\n      return () => (\n        <ErrorMessage\n          message={\n            <Text>\n              We use name of folder as tagName for your custom element.\n              Unfortunately, <Text bold>{tagName}</Text> is invalid tagName.\n              Reason: {errorMessage}\n            </Text>\n          }\n          hint={\n            <Text>\n              You can find rules for tagName here:{' '}\n              <Text bold>\n                https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry/define#valid_custom_element_names\n              </Text>\n            </Text>\n          }\n        />\n      );\n    },\n    InvalidSiteFrontendPackageVersion: ({ packageName, versionRange }) => {\n      return () => (\n        <ErrorMessage\n          message={\n            <Text>\n              Package <Text bold>{packageName}</Text> has an invalid version\n              range <Text bold>{versionRange}</Text> in your{' '}\n              <Text bold>package.json</Text> file.\n            </Text>\n          }\n          hint={\n            <Text>\n              The version range must follow{' '}\n              <Text bold>semantic versioning</Text> rules, and it must contain a\n              major version.\n              <Newline />\n              Read more about it here:{' '}\n              <Link url=\"https://docs.npmjs.com/about-semantic-versioning\" />\n            </Text>\n          }\n        />\n      );\n    },\n    FailedToCreateSiteOverride: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to create site override configuration\" />\n      );\n    },\n    FailedToGetDeploymentPipelineDescription: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get deployment pipeline details\" />\n      );\n    },\n    FailedToGetDeploymentStatus: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get deployment status\" />\n      );\n    },\n    NetworkError: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Network error occurred.\"\n          hint={`Make sure you have an active internet connection and try again shortly.`}\n        />\n      );\n    },\n    FailedToGenerateAppMarketQueryParam: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get generate appMarket query parameter\" />\n      );\n    },\n    FailedToParseLog: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to parse log from the server\" />\n      );\n    },\n    AppForVersionNotFound: ({ version }) => {\n      return () => (\n        <ErrorMessage\n          message={`Could not find app configuration for the provided version: \"${version}\"`}\n          hint={`Make sure that there is an app for this version.`}\n        />\n      );\n    },\n    FailedToFetchAppForVersion: () => {\n      return () => (\n        <SystemErrorMessage message={`Failed to fetch app configuration`} />\n      );\n    },\n    FailedToGetAppSecret: () => {\n      return () => (\n        <SystemErrorMessage\n          message={`Failed to fetch app keys and configuration`}\n        />\n      );\n    },\n    FailedToConnectToLogsService: () => {\n      return () => (\n        <ErrorMessage message={`Failed to connect to logs service.`} />\n      );\n    },\n    FailedToGetLogsTopology: () => {\n      return () => (\n        <ErrorMessage\n          message={`Failed to fetch logs configuration for the given version.`}\n          hint={`Try to use a different version.`}\n        />\n      );\n    },\n    FailedInstallCloudflareNoAccess: ({ path }) => {\n      return () => (\n        <ErrorMessage\n          message={`Failed to install required binary in \"${path}\"`}\n          hint={`Check that you have required permissions.`}\n        />\n      );\n    },\n    LogsConnectionTimeout: () => {\n      return () => (\n        <ErrorMessage message={`Log session has been closed due to timeout.`} />\n      );\n    },\n    InvalidServicePluginImplementation: () => {\n      return () => (\n        <ErrorMessage\n          message={`Your service plugin implementation is incorrect.`}\n        />\n      );\n    },\n    UnknownServicePlugin: ({ name }) => {\n      return () => (\n        <ErrorMessage\n          message={`Unknown service plugin with the name of \\`${name}\\``}\n        />\n      );\n    },\n    InvalidServicePluginFolder: ({ relativePath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Invalid folder for service plugin in \\`${relativePath}\\``}\n        />\n      );\n    },\n    InvalidSiteOverrideID: () => {\n      return () => (\n        <ErrorMessage\n          message={`Failed to read devSiteOverrideId from local app configurations.`}\n          hint={`Restart the dev environment and make sure that the .wix/app.config.json file exists.`}\n        />\n      );\n    },\n    FailedToFindEsbuildOutputFile: () => {\n      return () => (\n        <ErrorMessage\n          message={`Failed to find file in ESBuild output`}\n          hint={`Restart the dev environment and try again.`}\n        />\n      );\n    },\n    FailedOptimizingWithEsbuild: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={`Failed to optimize dependency with ESBuild.`}\n          explanation={`Restart the dev environment and try again.`}\n        />\n      );\n    },\n    FailedReadingEsbuildOutputFile: () => {\n      return () => (\n        <ErrorMessage\n          message={`Failed to read ESBuild's output file`}\n          hint={`Restart the dev environment and try again.`}\n        />\n      );\n    },\n    CliAppTemplateNotFound: ({ id }) => {\n      return () => (\n        <ErrorMessage\n          message={\n            <>\n              Template with ID <Text bold>{id}</Text> not found.\n            </>\n          }\n          hint=\"Make sure you are using the correct template ID\"\n        />\n      );\n    },\n    FailedToQueryCliAppTemplates: () => {\n      return () => (\n        <SystemErrorMessage\n          message={'Failed to fetch available app templates'}\n        />\n      );\n    },\n    FailedToCreateDevCenterAppFromTemplate: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to register your application in Wix\" />\n      );\n    },\n    FailedToQueryApps: () => {\n      return () => <SystemErrorMessage message=\"Failed to query apps\" />;\n    },\n    FailedToGetSiteInstalledApps: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get site installed apps\" />\n      );\n    },\n    FailedToGetSiteInstalledAppInstanceId: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get site installed app instance id\" />\n      );\n    },\n    FailedToGetClientSpecMap: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get site client spec map\" />\n      );\n    },\n    DeniedPermissionToGetAppSecret: () => {\n      return () => (\n        <ErrorMessage\n          message=\"Insufficient permissions\"\n          hint=\"Please log in with an account that has the required permissions to access this application\"\n        />\n      );\n    },\n    FailedToCreateVeloApp: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to create an isolated environment.\" />\n      );\n    },\n    FailedToUpdateVeloAppFiles: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to update files in the isolated environment\" />\n      );\n    },\n    FailedToGetFilesFromVelo: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to get initial project files\" />\n      );\n    },\n    FailedToOpenBrowser: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to open browser.\"\n          hint=\"Please make sure you have a browser installed, and it's appropriately configured\"\n        />\n      );\n    },\n    DeprecatedVersion: ({\n      currentVersion,\n      latestVersion,\n      deprecated,\n      hasCliAppInstalled,\n    }) => {\n      return () => (\n        <OutdatedVersionMessage\n          currentVersion={currentVersion}\n          latestVersion={latestVersion}\n          deprecated={deprecated}\n          hasCliAppInstalled={hasCliAppInstalled}\n        />\n      );\n    },\n    FailedToSyncPagesTypes: () => {\n      return () => <SystemErrorMessage message=\"Failed to sync pages types\" />;\n    },\n    FailedToInitializeSiteFsManager: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to initialize site file system manager.\"\n        />\n      );\n    },\n    FailedToGetSiteFsManagerCode: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to parse site code in local file system.\"\n        />\n      );\n    },\n    FailedToGetSiteFsManagerDocument: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to parse site document in local file system.\"\n        />\n      );\n    },\n    FailedToApplySiteFsManagerFsUpdates: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to apply site local file system updates.\"\n        />\n      );\n    },\n    FailedToApplySiteFsManagerExternalUpdates: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to apply site external updates.\"\n        />\n      );\n    },\n    FailedToSyncVeloCLIServerDocumentUpdate: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to sync local file system document updates with the Editor.\"\n        />\n      );\n    },\n    ServeDeprecated: ({ packageManagerRunCmd }) => {\n      return () => (\n        <ServeDeprecationMessage packageManagerRunCmd={packageManagerRunCmd} />\n      );\n    },\n    CannotFindConfigReferencedAsset: ({ asset, configPath, field }) => {\n      return () => (\n        <ErrorMessage\n          message={`Failed to load asset ${asset}`}\n          hint={`Make sure the asset is correctly configured in \\`${configPath}\\` under the field \\`${field}\\``}\n        />\n      );\n    },\n    CannotReleaseLockedApplication: () => {\n      return () => (\n        <ErrorMessage\n          message=\"A new version of the app can not be released at this point.\"\n          explanation=\"We’re reviewing this app. You can’t update new changes while it’s in review.\"\n        />\n      );\n    },\n    FailedToCreateIntellisenseAdapter: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to create intellisense adapter.\"\n        />\n      );\n    },\n    FailedToInitIntellisenseAdapterTypes: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to initialize site types.\"\n        />\n      );\n    },\n    FailedToUpdateIntellisenseAdapterTypes: () => {\n      return () => (\n        <ErrorMessage cause={cause} message=\"Failed to update site types.\" />\n      );\n    },\n    WebMethodOutsideOfProjectDirectory: ({ relativeId }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={`Web method \"${relativeId}\" is outside of the project directory.`}\n        />\n      );\n    },\n    FailedToCreateDraftVersion: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to retrieve release options available for your application.\" />\n      );\n    },\n    FailedToReleaseDraftVersion: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to release a new version of your application.\" />\n      );\n    },\n    WaitForEditorInstallationStateFailure: () => {\n      return () => (\n        <SystemErrorMessage\n          message={`Waiting for the Editor to finish installation timed out`}\n        />\n      );\n    },\n    EditorPendingInstallationCheckTimedout: () => {\n      return () => (\n        <SystemErrorMessage\n          message={`Editor installation details check timed out`}\n        />\n      );\n    },\n    FailedToGetSdkSlotData: () => {\n      return () => (\n        <SystemErrorMessage\n          message={`Unable to retrieve slot details to extend`}\n        />\n      );\n    },\n    FailedToListComponentByComponentType: () => {\n      return () => (\n        <SystemErrorMessage\n          message={`Unable to retrieve the list of available extensions for your application`}\n        />\n      );\n    },\n    FailedToParseBackofficeExtensionContainer: () => {\n      return () => (\n        <SystemErrorMessage\n          message={`Failed to parse backoffice extension containers data`}\n        />\n      );\n    },\n    FailedToParseBackofficePages: () => {\n      return () => (\n        <SystemErrorMessage message={`Failed to parse backoffice pages data`} />\n      );\n    },\n    FailedToCleanDistFolder: () => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={'Failed to clean the dist folder.'}\n        />\n      );\n    },\n    FailedToDeployDocument: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to deploy site document.\" />\n      );\n    },\n    FailedToEvalBackendExtension: ({ filename, errorMessage }) => {\n      return () => (\n        <ErrorMessage\n          message={`Failed to process file \"${filename}\", error details below:\n${errorMessage}`}\n        />\n      );\n    },\n    FailedToGetMonitoringLoaderScript: ({ dsn }) => {\n      return () => (\n        <SystemErrorMessage\n          message={`Failed to get a monitoring loader script for DSN \"${dsn}\".`}\n        />\n      );\n    },\n    InsufficientNonInterractiveReleaseParameters: () => {\n      return () => (\n        <ErrorMessage\n          message={`Release command in non-interactive mode requires following parameter: --version-type`}\n        />\n      );\n    },\n    DeploymentPipelineFailed: ({ tasksDescriptions }) => {\n      return () => (\n        <>\n          <ErrorMessage\n            message={`Errors in your site’s code were found while trying to build your custom code. See output below:`}\n          />\n          <Box paddingLeft={1} paddingTop={1} flexDirection=\"column\">\n            {tasksDescriptions.map((task, index) => (\n              <Fragment key={index}>\n                <Alert type={task.status === 'SUCCESS' ? 'success' : 'error'}>\n                  [{index + 1}/{tasksDescriptions.length}] {task.taskName}...\n                </Alert>\n                {Object.entries(task.description).map(([path, content]) => (\n                  <Box\n                    key={path}\n                    paddingLeft={2}\n                    paddingBottom={1}\n                    flexDirection=\"column\"\n                  >\n                    <Text bold>{path}</Text>\n                    <Text>{content.trim()}</Text>\n                  </Box>\n                ))}\n              </Fragment>\n            ))}\n          </Box>\n        </>\n      );\n    },\n    FailedToParseLatestVersion: ({ version }) => {\n      return () => (\n        <SystemErrorMessage\n          message={`The version \"${version}\" produced by the system does not conform to the expected semantic versioning format and could not be parsed.`}\n        />\n      );\n    },\n    FailedToFetchWixLockFile: () => {\n      return () => (\n        <SystemErrorMessage message={`Failed to fetch \"wix.lock\" file.`} />\n      );\n    },\n    AppNameArgumentIsInvalid: ({ errorMessage }) => {\n      return () => (\n        <ErrorMessage\n          message={errorMessage}\n          hint=\"Failed to create a new application with the specified parameters. Please modify the parameters or switch to interactive mode.\"\n        />\n      );\n    },\n    CannotReleaseMinorInNoninteractive: () => {\n      return () => (\n        <ErrorMessage\n          message={`Minor version release is not allowed.`}\n          hint={`Please release major version.`}\n        />\n      );\n    },\n    SiteComponentConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Site component config not found at ${configPath}`}\n        />\n      );\n    },\n    SiteComponentPanelConfigNotFound: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          message={`Site component panel config not found at ${configPath}`}\n        />\n      );\n    },\n    SiteComponentPanelDoNotExists: ({ panelName }) => {\n      return () => (\n        <ErrorMessage\n          message={`Site component panel with name ${panelName} do not exist`}\n        />\n      );\n    },\n    FailedToImportCliApp: () => {\n      return () => (\n        <ErrorMessage cause={cause} message=\"Failed to load `@wix/cli-app`.\" />\n      );\n    },\n    FailedToIdentifyProgramFlow: ({ reason }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message={reason}\n          hint=\"Ensure that you are executing the command from inside a project directory.\"\n        />\n      );\n    },\n    FailedToPullEnvironment: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to pull environment variables.\" />\n      );\n    },\n    FailedToSetEnvironmentVariable: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to set/update environment variable.\" />\n      );\n    },\n    FailedToRemoveEnvironmentVariable: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to remove environment variable.\" />\n      );\n    },\n    FailedToUploadStaticFiles: () => {\n      return () => (\n        <SystemErrorMessage message=\"Failed to upload static files.\" />\n      );\n    },\n    FailedCreatingAppProject: () => {\n      return () => (\n        <SystemErrorMessage message=\"An error occoured while creating an app project.\" />\n      );\n    },\n    FailedCreatingAppDeployment: () => {\n      return () => (\n        <SystemErrorMessage message=\"An error occoured while creating an app deployment.\" />\n      );\n    },\n    FailedFinalizingAppDeployment: () => {\n      return () => (\n        <SystemErrorMessage message=\"An error occoured while completing app deployment.\" />\n      );\n    },\n    BuildOutputMissing: ({ reason }) => {\n      return () => (\n        <ErrorMessage\n          message=\"Project build output is missing\"\n          explanation={reason}\n          hint=\"Build the project before proceeding.\"\n        />\n      );\n    },\n    FailedToCreateMonitoringVitePlugin: ({ configPath }) => {\n      return () => (\n        <ErrorMessage\n          cause={cause}\n          message=\"Failed to setup monitoring vite plugin.\"\n          hint={`Make sure you have the correct \\`monitoring\\` configuration in \\`${configPath}\\`.`}\n        />\n      );\n    },\n    FailedToFindAstroConfig: () => {\n      return () => (\n        <ErrorMessage message=\"No valid configuration file found. Please ensure that an astro.config.{js,cjs,mjs,ts} file exists in your project directory.\" />\n      );\n    },\n    ProjectIsAlreadyLinked: () => {\n      return () => (\n        <ErrorMessage message=\"This project is already connected to Wix, so no changes were made.\" />\n      );\n    },\n    ProjectIsNotLinkable: () => {\n      return () => (\n        <ErrorMessage message=\"Only Astro projects can be linked to Wix. The current project is missing an Astro configuration file.\" />\n      );\n    },\n  });\n}\n\nfunction formatZodIssue(issue: ZodIssue) {\n  const path = issue.path.join('.');\n\n  if (!path) {\n    return `- ${issue.message}`;\n  }\n\n  return `- \\`${path}\\`: ${issue.message}`;\n}\n\nfunction formatFieldViolations(violation: {\n  field: string;\n  description: string;\n}) {\n  return `- \\`${violation.field}\\`: ${violation.description}`;\n}\n","type TODO = any;\n\n// In the absence of a WeakSet or WeakMap implementation, don't break, but don't cache either.\nfunction noop(...args: Array<any>) {}\nfunction createWeakMap<K extends object, V>(): MyWeakMap<K, V> {\n  if (typeof WeakMap !== \"undefined\") {\n    return new WeakMap<K, V>();\n  } else {\n    return fakeSetOrMap<K, V>();\n  }\n}\n\ntype MyWeakMap<K extends object, V> = Pick<\n  WeakMap<K, V>,\n  \"delete\" | \"get\" | \"set\" | \"has\"\n>;\ntype MyWeakSetMap<K extends object, V> =\n  & Pick<WeakMap<K, V>, \"delete\" | \"get\" | \"set\" | \"has\">\n  & Pick<WeakSet<K>, \"add\">;\n\n/**\n * Creates and returns a no-op implementation of a WeakMap / WeakSet that never stores anything.\n */\nfunction fakeSetOrMap<K extends object, V = any>(): MyWeakSetMap<K, V> {\n  return {\n    add: noop as WeakSet<K>[\"add\"],\n    delete: noop as WeakMap<K, V>[\"delete\"],\n    get: noop as WeakMap<K, V>[\"get\"],\n    set: noop as WeakMap<K, V>[\"set\"],\n    has(k: K) {\n      return false;\n    },\n  };\n}\n\n// Safe hasOwnProperty\nconst hop = Object.prototype.hasOwnProperty;\nconst has = function (obj: object, prop: string): boolean {\n  return hop.call(obj, prop);\n};\n\n// Copy all own enumerable properties from source to target\nfunction extend<T, S extends object>(target: T, source: S) {\n  type Extended = T & S;\n  for (const prop in source) {\n    if (has(source, prop)) {\n      (target as any)[prop] = source[prop];\n    }\n  }\n  return target as Extended;\n}\n\nconst reLeadingNewline = /^[ \\t]*(?:\\r\\n|\\r|\\n)/;\nconst reTrailingNewline = /(?:\\r\\n|\\r|\\n)[ \\t]*$/;\nconst reStartsWithNewlineOrIsEmpty = /^(?:[\\r\\n]|$)/;\nconst reDetectIndentation = /(?:\\r\\n|\\r|\\n)([ \\t]*)(?:[^ \\t\\r\\n]|$)/;\nconst reOnlyWhitespaceWithAtLeastOneNewline = /^[ \\t]*[\\r\\n][ \\t\\r\\n]*$/;\n\nfunction _outdentArray(\n  strings: ReadonlyArray<string>,\n  firstInterpolatedValueSetsIndentationLevel: boolean,\n  options: Options,\n) {\n  // If first interpolated value is a reference to outdent,\n  // determine indentation level from the indentation of the interpolated value.\n  let indentationLevel = 0;\n\n  const match = strings[0].match(reDetectIndentation);\n  if (match) {\n    indentationLevel = match[1].length;\n  }\n\n  const reSource = `(\\\\r\\\\n|\\\\r|\\\\n).{0,${indentationLevel}}`;\n  const reMatchIndent = new RegExp(reSource, \"g\");\n\n  if (firstInterpolatedValueSetsIndentationLevel) {\n    strings = strings.slice(1);\n  }\n\n  const { newline, trimLeadingNewline, trimTrailingNewline } = options;\n  const normalizeNewlines = typeof newline === \"string\";\n  const l = strings.length;\n  const outdentedStrings = strings.map((v, i) => {\n    // Remove leading indentation from all lines\n    v = v.replace(reMatchIndent, \"$1\");\n    // Trim a leading newline from the first string\n    if (i === 0 && trimLeadingNewline) {\n      v = v.replace(reLeadingNewline, \"\");\n    }\n    // Trim a trailing newline from the last string\n    if (i === l - 1 && trimTrailingNewline) {\n      v = v.replace(reTrailingNewline, \"\");\n    }\n    // Normalize newlines\n    if (normalizeNewlines) {\n      v = v.replace(/\\r\\n|\\n|\\r/g, (_) => newline as string);\n    }\n    return v;\n  });\n  return outdentedStrings;\n}\n\nfunction concatStringsAndValues(\n  strings: ReadonlyArray<string>,\n  values: ReadonlyArray<any>,\n): string {\n  let ret = \"\";\n  for (let i = 0, l = strings.length; i < l; i++) {\n    ret += strings[i];\n    if (i < l - 1) {\n      ret += values[i];\n    }\n  }\n  return ret;\n}\n\nfunction isTemplateStringsArray(v: any): v is TemplateStringsArray {\n  return has(v, \"raw\") && has(v, \"length\");\n}\n\n/**\n * It is assumed that opts will not change.  If this is a problem, clone your options object and pass the clone to\n * makeInstance\n * @param options\n * @return {outdent}\n */\nfunction createInstance(options: Options): Outdent {\n  /** Cache of pre-processed template literal arrays */\n  const arrayAutoIndentCache = createWeakMap<\n    TemplateStringsArray,\n    Array<string>\n  >();\n  /**\n     * Cache of pre-processed template literal arrays, where first interpolated value is a reference to outdent,\n     * before interpolated values are injected.\n     */\n  const arrayFirstInterpSetsIndentCache = createWeakMap<\n    TemplateStringsArray,\n    Array<string>\n  >();\n\n  /* tslint:disable:no-shadowed-variable */\n  function outdent(\n    stringsOrOptions: TemplateStringsArray,\n    ...values: Array<any>\n  ): string;\n  function outdent(stringsOrOptions: Options): Outdent;\n  function outdent(\n    stringsOrOptions: TemplateStringsArray | Options,\n    ...values: Array<any>\n  ): string | Outdent {\n    /* tslint:enable:no-shadowed-variable */\n    if (isTemplateStringsArray(stringsOrOptions)) {\n      const strings = stringsOrOptions;\n\n      // Is first interpolated value a reference to outdent, alone on its own line, without any preceding non-whitespace?\n      const firstInterpolatedValueSetsIndentationLevel =\n        (values[0] === outdent || values[0] === defaultOutdent) &&\n        reOnlyWhitespaceWithAtLeastOneNewline.test(strings[0]) &&\n        reStartsWithNewlineOrIsEmpty.test(strings[1]);\n\n      // Perform outdentation\n      const cache = firstInterpolatedValueSetsIndentationLevel\n        ? arrayFirstInterpSetsIndentCache\n        : arrayAutoIndentCache;\n      let renderedArray = cache.get(strings);\n      if (!renderedArray) {\n        renderedArray = _outdentArray(\n          strings,\n          firstInterpolatedValueSetsIndentationLevel,\n          options,\n        );\n        cache.set(strings, renderedArray);\n      }\n      /** If no interpolated values, skip concatenation step */\n      if (values.length === 0) {\n        return renderedArray[0];\n      }\n      /** Concatenate string literals with interpolated values */\n      const rendered = concatStringsAndValues(\n        renderedArray,\n        firstInterpolatedValueSetsIndentationLevel ? values.slice(1) : values,\n      );\n\n      return rendered;\n    } else {\n      // Create and return a new instance of outdent with the given options\n      return createInstance(\n        extend(extend({}, options), stringsOrOptions || {}),\n      );\n    }\n  }\n\n  const fullOutdent = extend(outdent, {\n    string(str: string): string {\n      return _outdentArray([str], false, options)[0];\n    },\n  });\n\n  return fullOutdent;\n}\n\nconst defaultOutdent = createInstance({\n  trimLeadingNewline: true,\n  trimTrailingNewline: true,\n});\n\nexport interface Outdent {\n  /**\n     * Remove indentation from a template literal.\n     */\n  (strings: TemplateStringsArray, ...values: Array<any>): string;\n  /**\n     * Create and return a new Outdent instance with the given options.\n     */\n  (options: Options): Outdent;\n\n  /**\n     * Remove indentation from a string\n     */\n  string(str: string): string;\n\n  // /**\n  //  * Remove indentation from a template literal, but return a tuple of the\n  //  * outdented TemplateStringsArray and\n  //  */\n  // pass(strings: TemplateStringsArray, ...values: Array<any>): [TemplateStringsArray, ...Array<any>];\n}\nexport interface Options {\n  trimLeadingNewline?: boolean;\n  trimTrailingNewline?: boolean;\n  /**\n     * Normalize all newlines in the template literal to this value.\n     * \n     * If `null`, newlines are left untouched.\n     * \n     * Newlines that get normalized are '\\r\\n', '\\r', and '\\n'.\n     * \n     * Newlines within interpolated values are *never* normalized.\n     * \n     * Although intended for normalizing to '\\n' or '\\r\\n',\n     * you can also set to any string; for example ' '.\n     */\n  newline?: string | null;\n}\n\n// Named exports.  Simple and preferred.\n// import outdent from 'outdent';\nexport default defaultOutdent;\n// import {outdent} from 'outdent';\nexport { defaultOutdent as outdent };\n\n// In CommonJS environments, enable `var outdent = require('outdent');` by\n// replacing the exports object.\n// Make sure that our replacement includes the named exports from above.\ndeclare var module: any;\nif (typeof module !== \"undefined\") {\n  // In webpack harmony-modules environments, module.exports is read-only,\n  // so we fail gracefully.\n  try {\n    module.exports = defaultOutdent;\n    Object.defineProperty(defaultOutdent, \"__esModule\", { value: true });\n    (defaultOutdent as any).default = defaultOutdent;\n    (defaultOutdent as any).outdent = defaultOutdent;\n  } catch (e) {}\n}\n","import React from 'react';\nimport type { FC, ReactNode } from 'react';\nimport { ErrorDetails } from '@wix/cli-ui-kit';\nimport { isCliError } from '@wix/cli-error';\n\nfunction getOriginalCause(error?: Error) {\n  if (isCliError(error)) {\n    return getOriginalCause(error.cause());\n  }\n\n  return error;\n}\n\nexport const ErrorMessage: FC<{\n  message: ReactNode;\n  cause?: Error;\n  explanation?: ReactNode;\n  hint?: ReactNode;\n}> = ({ message, cause, explanation, hint }) => {\n  const originalCause = getOriginalCause(cause);\n\n  return (\n    <ErrorDetails\n      message={\n        originalCause ? (\n          <>\n            {message} Cause: {originalCause.message}\n          </>\n        ) : (\n          message\n        )\n      }\n      hint={hint}\n      explanation={explanation}\n    />\n  );\n};\n\nexport const SystemErrorMessage: FC<{\n  message: ReactNode;\n  explanation?: ReactNode;\n  hint?: ReactNode;\n}> = ({ message, explanation, hint }) => (\n  <ErrorDetails\n    message={message}\n    explanation={explanation}\n    hint={\n      hint ??\n      'This is probably a temporary system error and has been logged. Try again shortly.'\n    }\n  />\n);\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Box, Text, Alert } from '@wix/cli-ui-kit';\n\ninterface Props {\n  packageManagerRunCmd?: string;\n}\n\nexport const ServeDeprecationMessage: FC<Props> = ({\n  packageManagerRunCmd,\n}) => {\n  return (\n    <Box rowGap={1} paddingBottom={1} flexDirection=\"column\">\n      <Alert type=\"error\">Deprecation Notice</Alert>\n      <Text>\n        <Text skin=\"info\">serve</Text> command is being replaced by{' '}\n        <Text skin=\"info\">preview</Text> command.\n      </Text>\n      <Text>\n        Please run{' '}\n        <Text skin=\"info\">\n          {packageManagerRunCmd\n            ? `${packageManagerRunCmd} wix app preview`\n            : 'wix app preview'}\n        </Text>{' '}\n        instead.\n      </Text>\n    </Box>\n  );\n};\n","import process from 'node:process';\nimport React from 'react';\nimport { renderErrorSync } from '@wix/cli-ui-kit';\nimport { writeCrashReport } from '@wix/cli-debug-log';\nimport { ErrorViewer } from './components/ErrorViewer.js';\nimport type { ErrorReporterOptions } from './error-reporter.js';\nimport { createErrorReporter } from './error-reporter.js';\nimport { collectUserFeedback } from './user-feedback.js';\n\nexport type ErrorHandlerFn = (args: { error: unknown; data?: unknown }) => void;\n\nexport function createErrorHandler({\n  debugOutputPath,\n  userFeedbackCachePath,\n  ...errorReporterOptions\n}: {\n  debugOutputPath: string;\n  userFeedbackCachePath?: string;\n} & ErrorReporterOptions) {\n  const errorReporter = createErrorReporter(errorReporterOptions);\n\n  const handler: ErrorHandlerFn = function ({ error, data }) {\n    const reportResult = errorReporter.reportError(error, { data });\n    renderErrorSync(<ErrorViewer error={error} />);\n    writeCrashReport(debugOutputPath, error);\n    process.exitCode = 1;\n\n    collectUserFeedback({\n      reportResult,\n      errorReporter,\n      cachePath: userFeedbackCachePath,\n    }).catch((e: unknown) => {\n      writeCrashReport(debugOutputPath, e);\n    });\n  };\n\n  const registerToProcessErrors = function () {\n    process.on('uncaughtException', (error) => {\n      handler({\n        error,\n        data: { mechanism: { handled: false, type: 'uncaughtException' } },\n      });\n    });\n\n    process.on('unhandledRejection', (error) => {\n      /**\n       * Temporary workaround for https://github.com/vitejs/vite/issues/14706\n       */\n      if (\n        error instanceof Error &&\n        error.message.startsWith('Build failed with') &&\n        error.stack?.includes('esbuild')\n      ) {\n        return;\n      }\n\n      /**\n       * Workaround for PostCSS unhandled errors https://github.com/vitejs/vite/issues/18882\n       */\n      if (\n        error instanceof Error &&\n        error.message.startsWith('Failed to load PostCSS config')\n      ) {\n        return;\n      }\n\n      handler({\n        error,\n        data: { mechanism: { handled: false, type: 'unhandledRejection' } },\n      });\n    });\n  };\n\n  return {\n    handler,\n    errorReporter,\n    registerToProcessErrors,\n  };\n}\n","import { isType, variant, fields } from 'variant';\nimport type { VariantOf } from 'variant';\nimport {\n  NodeClient,\n  Scope,\n  getDefaultIntegrations,\n  defaultStackParser,\n  makeNodeTransport,\n} from '@sentry/node';\nimport { getTestOverrides } from '@wix/cli-test-overrides';\nimport { extractHttpError, getHttpErrorInfo } from '@wix/cli-http-client';\nimport VError from 'verror';\nimport { outdent } from 'outdent';\nimport type { CliError } from '@wix/cli-error';\nimport {\n  isCliSystemError,\n  normalizeError,\n  CliSystemErrorCode,\n} from '@wix/cli-error';\nimport EventEmitter from 'node:events';\nimport ci from 'ci-info';\n\ninterface TypedEventEmitter {\n  on: (event: 'errorReported', listener: (error: CliError) => void) => this;\n  emit: (event: 'errorReported', error: CliError) => boolean;\n}\n\nexport interface ErrorReporterOptions {\n  dsn: string;\n  release: string;\n}\n\ninterface User {\n  id: string;\n}\n\ninterface UserFeedback {\n  userId: string;\n  eventId: string;\n  feedback: string;\n}\n\nexport type ErrorReporter = ReturnType<typeof createErrorReporter>;\n\nexport const ReportErrorResult = variant({\n  Reported: fields<{ eventId: string }>(),\n  Ignored: {},\n});\nexport type ReportErrorResult = VariantOf<typeof ReportErrorResult>;\n\nconst reportError = (\n  scope: Scope,\n  originalError: CliError,\n  { data }: { data?: unknown } = {}\n) => {\n  if (!isCliSystemError(originalError)) {\n    return ReportErrorResult.Ignored();\n  }\n\n  const error = isType(originalError.cliCode, CliSystemErrorCode.UnknownFailure)\n    ? originalError.cliCode.error\n    : originalError;\n\n  const eventId = scope.captureException(error, {\n    data,\n    captureContext: (localScope) => {\n      const httpError = extractHttpError(error);\n      if (httpError) {\n        localScope.setTag('requestId', httpError.requestId);\n        localScope.setContext('requestInfo', getHttpErrorInfo(httpError));\n      }\n      if (error instanceof Error) {\n        localScope.setContext('error details', {\n          info: VError.info(error),\n          fullStack: VError.fullStack(error),\n        });\n      }\n\n      localScope.setTag('ci', yesOrNo(ci.isCI));\n\n      const ciName = ci.name ?? process.env.CI_NAME ?? null;\n      localScope.setTag('ci.name', ciName);\n\n      localScope.setContext('CI', {\n        Name: ciName,\n        'Is CI': yesOrNo(ci.isCI),\n        'Is PR': yesOrNo(ci.isPR),\n      });\n\n      return localScope;\n    },\n  });\n\n  return ReportErrorResult.Reported({ eventId });\n};\n\nexport function createErrorReporter({ dsn, release }: ErrorReporterOptions) {\n  const { sentryDsn: sentryDsnOverride } = getTestOverrides();\n\n  // https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/\n  const sentryClient = new NodeClient({\n    enabled:\n      sentryDsnOverride !== undefined || process.env.NODE_ENV === 'production',\n    dsn: sentryDsnOverride ?? dsn,\n    release,\n    integrations: getDefaultIntegrations({}).filter(\n      (integration) =>\n        integration.name !== 'OnUnhandledRejection' &&\n        integration.name !== 'OnUncaughtException' &&\n        // By default, @sentry/node adds metadata about installed packages.\n        integration.name !== 'Modules'\n    ),\n    stackParser: defaultStackParser,\n    transport: makeNodeTransport,\n    beforeSend(event) {\n      // By default @sentry/node includes the local hostname as `server_name`\n      // which is sensitive and not useful.\n\n      delete event.server_name;\n      return event;\n    },\n    // Since we pass `requestInfo`, the default depth of 3\n    // redacts most useful info passed from API error responses\n    // so we increase it to include more of the potential error http repsonse.\n    normalizeDepth: 10,\n  });\n\n  const sentryScope = new Scope();\n  sentryScope.setClient(sentryClient);\n  sentryClient.init();\n\n  const emitter: TypedEventEmitter = new EventEmitter();\n\n  return {\n    on: emitter.on.bind(emitter),\n    reportError: (\n      originalError: unknown,\n      { data }: { data?: unknown } = {}\n    ) => {\n      const error = normalizeError(originalError);\n      const result = reportError(sentryScope, error, { data });\n\n      emitter.emit('errorReported', error);\n\n      return result;\n    },\n    reportUserFeedback: async ({ userId, eventId, feedback }: UserFeedback) => {\n      /**\n       * Importing @sentry/browser because it includes the `captureUserFeedback` method\n       * which is not available in @sentry/node.\n       * This is a workaround until the method is added to @sentry/node.\n       * See: https://github.com/getsentry/sentry-javascript/issues/11072\n       */\n      const { BrowserClient } = await import('@sentry/browser');\n\n      const client = new BrowserClient({\n        enabled: sentryClient.getOptions().enabled,\n        dsn: sentryClient.getOptions().dsn,\n        integrations: [],\n        transport: makeNodeTransport,\n        stackParser: defaultStackParser,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-deprecated\n      client.captureUserFeedback({\n        event_id: eventId,\n        name: '',\n        email: `${userId}@wix.com`,\n        comments: outdent`\n          ---\n          user: https://bo.wix.com/um/users/${userId}\n          ---\n          ${feedback}\n        `,\n      });\n    },\n    setContext: (name: string, context: Record<string, unknown>) =>\n      sentryScope.setContext(name, context),\n    setTag: (key: string, value: string) => sentryScope.setTag(key, value),\n    setUser: (user: User) => sentryScope.setUser(user),\n    getUser: (): User | undefined => {\n      const user = sentryScope.getUser();\n      if (typeof user?.id === 'string') {\n        return { id: user.id };\n      }\n    },\n  };\n}\n\nfunction yesOrNo(value: boolean | null) {\n  if (value == null) {\n    return null;\n  }\n  return value ? 'yes' : 'no';\n}\n","export { httpIntegration } from './integrations/http.js';\nexport { nativeNodeFetchIntegration } from './integrations/node-fetch.js';\nexport { consoleIntegration } from './integrations/console.js';\nexport { nodeContextIntegration } from './integrations/context.js';\nexport { contextLinesIntegration } from './integrations/contextlines.js';\nexport { localVariablesIntegration } from './integrations/local-variables/index.js';\nexport { modulesIntegration } from './integrations/modules.js';\nexport { onUncaughtExceptionIntegration } from './integrations/onuncaughtexception.js';\nexport { onUnhandledRejectionIntegration } from './integrations/onunhandledrejection.js';\nexport { anrIntegration } from './integrations/anr/index.js';\nexport { expressErrorHandler, expressIntegration, setupExpressErrorHandler } from './integrations/tracing/express.js';\nexport { fastifyIntegration, setupFastifyErrorHandler } from './integrations/tracing/fastify.js';\nexport { graphqlIntegration } from './integrations/tracing/graphql.js';\nexport { mongoIntegration } from './integrations/tracing/mongo.js';\nexport { mongooseIntegration } from './integrations/tracing/mongoose.js';\nexport { mysqlIntegration } from './integrations/tracing/mysql.js';\nexport { mysql2Integration } from './integrations/tracing/mysql2.js';\nexport { redisIntegration } from './integrations/tracing/redis.js';\nexport { nestIntegration, setupNestErrorHandler } from './integrations/tracing/nest.js';\nexport { postgresIntegration } from './integrations/tracing/postgres.js';\nexport { prismaIntegration } from './integrations/tracing/prisma.js';\nexport { hapiIntegration, setupHapiErrorHandler } from './integrations/tracing/hapi/index.js';\nexport { koaIntegration, setupKoaErrorHandler } from './integrations/tracing/koa.js';\nexport { connectIntegration, setupConnectErrorHandler } from './integrations/tracing/connect.js';\nexport { spotlightIntegration } from './integrations/spotlight.js';\nexport { SentryContextManager } from './otel/contextManager.js';\nexport { generateInstrumentOnce } from './otel/instrument.js';\nexport { getDefaultIntegrations, getDefaultIntegrationsWithoutPerformance, init, initWithoutDefaultIntegrations, validateOpenTelemetrySetup } from './sdk/index.js';\nexport { initOpenTelemetry, preloadOpenTelemetry } from './sdk/initOtel.js';\nexport { getAutoPerformanceIntegrations } from './integrations/tracing/index.js';\nexport { defaultStackParser, getSentryRelease } from './sdk/api.js';\nexport { createGetModuleFromFilename } from './utils/module.js';\nexport { makeNodeTransport } from './transports/http.js';\nexport { NodeClient } from './sdk/client.js';\nexport { cron } from './cron/index.js';\nexport { DEFAULT_USER_INCLUDES, addRequestDataToEvent, extractRequestData } from '@sentry/utils';\nexport { addOpenTelemetryInstrumentation, continueTrace, setOpenTelemetryContextAsyncContextStrategy as setNodeAsyncContextStrategy } from '@sentry/opentelemetry';\nexport { SDK_VERSION, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, Scope, addBreadcrumb, addEventProcessor, addIntegration, captureCheckIn, captureConsoleIntegration, captureEvent, captureException, captureFeedback, captureMessage, captureSession, close, createTransport, debugIntegration, dedupeIntegration, endSession, extraErrorDataIntegration, flush, functionToStringIntegration, getActiveSpan, getClient, getCurrentHub, getCurrentScope, getGlobalScope, getIsolationScope, getRootSpan, getSpanDescendants, getSpanStatusFromHttpCode, inboundFiltersIntegration, isInitialized, lastEventId, linkedErrorsIntegration, metricsDefault as metrics, parameterize, requestDataIntegration, rewriteFramesIntegration, sessionTimingIntegration, setContext, setCurrentClient, setExtra, setExtras, setHttpStatus, setMeasurement, setTag, setTags, setUser, spanToBaggageHeader, spanToJSON, spanToTraceHeader, startInactiveSpan, startNewTrace, startSession, startSpan, startSpanManual, trpcMiddleware, withActiveSpan, withIsolationScope, withMonitor, withScope, zodErrorsIntegration } from '@sentry/core';\n//# sourceMappingURL=index.js.map\n","import type { SpanKind, SpanStatus } from '@opentelemetry/api';\nimport type { ReadableSpan, TimedEvent } from '@opentelemetry/sdk-trace-base';\n\nimport type { AbstractSpan } from '../types';\n\n/**\n * Check if a given span has attributes.\n * This is necessary because the base `Span` type does not have attributes,\n * so in places where we are passed a generic span, we need to check if we want to access them.\n */\nexport function spanHasAttributes<SpanType extends AbstractSpan>(\n  span: SpanType,\n): span is SpanType & { attributes: ReadableSpan['attributes'] } {\n  const castSpan = span as ReadableSpan;\n  return !!castSpan.attributes && typeof castSpan.attributes === 'object';\n}\n\n/**\n * Check if a given span has a kind.\n * This is necessary because the base `Span` type does not have a kind,\n * so in places where we are passed a generic span, we need to check if we want to access it.\n */\nexport function spanHasKind<SpanType extends AbstractSpan>(span: SpanType): span is SpanType & { kind: SpanKind } {\n  const castSpan = span as ReadableSpan;\n  return !!castSpan.kind;\n}\n\n/**\n * Check if a given span has a status.\n * This is necessary because the base `Span` type does not have a status,\n * so in places where we are passed a generic span, we need to check if we want to access it.\n */\nexport function spanHasStatus<SpanType extends AbstractSpan>(\n  span: SpanType,\n): span is SpanType & { status: SpanStatus } {\n  const castSpan = span as ReadableSpan;\n  return !!castSpan.status;\n}\n\n/**\n * Check if a given span has a name.\n * This is necessary because the base `Span` type does not have a name,\n * so in places where we are passed a generic span, we need to check if we want to access it.\n */\nexport function spanHasName<SpanType extends AbstractSpan>(span: SpanType): span is SpanType & { name: string } {\n  const castSpan = span as ReadableSpan;\n  return !!castSpan.name;\n}\n\n/**\n * Check if a given span has a kind.\n * This is necessary because the base `Span` type does not have a kind,\n * so in places where we are passed a generic span, we need to check if we want to access it.\n */\nexport function spanHasParentId<SpanType extends AbstractSpan>(\n  span: SpanType,\n): span is SpanType & { parentSpanId: string } {\n  const castSpan = span as ReadableSpan;\n  return !!castSpan.parentSpanId;\n}\n\n/**\n * Check if a given span has events.\n * This is necessary because the base `Span` type does not have events,\n * so in places where we are passed a generic span, we need to check if we want to access it.\n */\nexport function spanHasEvents<SpanType extends AbstractSpan>(\n  span: SpanType,\n): span is SpanType & { events: TimedEvent[] } {\n  const castSpan = span as ReadableSpan;\n  return Array.isArray(castSpan.events);\n}\n","import type { Span } from '@opentelemetry/api';\nimport type { ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport { SEMATTRS_HTTP_METHOD, SEMATTRS_HTTP_URL } from '@opentelemetry/semantic-conventions';\nimport type { SanitizedRequestData } from '@sentry/types';\nimport { getSanitizedUrlString, parseUrl } from '@sentry/utils';\n\nimport { spanHasAttributes } from './spanTypes';\n\n/**\n * Get sanitizied request data from an OTEL span.\n */\nexport function getRequestSpanData(span: Span | ReadableSpan): Partial<SanitizedRequestData> {\n  // The base `Span` type has no `attributes`, so we need to guard here against that\n  if (!spanHasAttributes(span)) {\n    return {};\n  }\n\n  const data: Partial<SanitizedRequestData> = {\n    url: span.attributes[SEMATTRS_HTTP_URL] as string | undefined,\n    'http.method': span.attributes[SEMATTRS_HTTP_METHOD] as string | undefined,\n  };\n\n  // Default to GET if URL is set but method is not\n  if (!data['http.method'] && data.url) {\n    data['http.method'] = 'GET';\n  }\n\n  try {\n    const urlStr = span.attributes[SEMATTRS_HTTP_URL];\n    if (typeof urlStr === 'string') {\n      const url = parseUrl(urlStr);\n\n      data.url = getSanitizedUrlString(url);\n\n      if (url.search) {\n        data['http.query'] = url.search;\n      }\n      if (url.hash) {\n        data['http.fragment'] = url.hash;\n      }\n    }\n  } catch {\n    // ignore\n  }\n\n  return data;\n}\n","import type { Tracer } from '@opentelemetry/api';\nimport { trace } from '@opentelemetry/api';\nimport type { BasicTracerProvider } from '@opentelemetry/sdk-trace-base';\nimport type { BaseClient } from '@sentry/core';\nimport { SDK_VERSION } from '@sentry/core';\nimport type { Client } from '@sentry/types';\n\nimport type { OpenTelemetryClient as OpenTelemetryClientInterface } from '../types';\n\n// Typescript complains if we do not use `...args: any[]` for the mixin, with:\n// A mixin class must have a constructor with a single rest parameter of type 'any[]'.ts(2545)\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Wrap an Client with things we need for OpenTelemetry support.\n *\n * Usage:\n * const OpenTelemetryClient = getWrappedClientClass(NodeClient);\n * const client = new OpenTelemetryClient(options);\n */\nexport function wrapClientClass<\n  ClassConstructor extends new (\n    ...args: any[]\n  ) => Client & BaseClient<any>,\n  WrappedClassConstructor extends new (\n    ...args: any[]\n  ) => Client & BaseClient<any> & OpenTelemetryClientInterface,\n>(ClientClass: ClassConstructor): WrappedClassConstructor {\n  class OpenTelemetryClient extends ClientClass implements OpenTelemetryClientInterface {\n    public traceProvider: BasicTracerProvider | undefined;\n    private _tracer: Tracer | undefined;\n\n    public constructor(...args: any[]) {\n      super(...args);\n    }\n\n    /** Get the OTEL tracer. */\n    public get tracer(): Tracer {\n      if (this._tracer) {\n        return this._tracer;\n      }\n\n      const name = '@sentry/opentelemetry';\n      const version = SDK_VERSION;\n      const tracer = trace.getTracer(name, version);\n      this._tracer = tracer;\n\n      return tracer;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public async flush(timeout?: number): Promise<boolean> {\n      const provider = this.traceProvider;\n      const spanProcessor = provider?.activeSpanProcessor;\n\n      if (spanProcessor) {\n        await spanProcessor.forceFlush();\n      }\n\n      return super.flush(timeout);\n    }\n  }\n\n  return OpenTelemetryClient as unknown as WrappedClassConstructor;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n","import { SpanKind } from '@opentelemetry/api';\n\nimport type { AbstractSpan } from '../types';\nimport { spanHasKind } from './spanTypes';\n\n/**\n * Get the span kind from a span.\n * For whatever reason, this is not public API on the generic \"Span\" type,\n * so we need to check if we actually have a `SDKTraceBaseSpan` where we can fetch this from.\n * Otherwise, we fall back to `SpanKind.INTERNAL`.\n */\nexport function getSpanKind(span: AbstractSpan): SpanKind {\n  if (spanHasKind(span)) {\n    return span.kind;\n  }\n\n  return SpanKind.INTERNAL;\n}\n","import { createContextKey } from '@opentelemetry/api';\n\nexport const SENTRY_TRACE_HEADER = 'sentry-trace';\nexport const SENTRY_BAGGAGE_HEADER = 'baggage';\n\nexport const SENTRY_TRACE_STATE_DSC = 'sentry.dsc';\nexport const SENTRY_TRACE_STATE_PARENT_SPAN_ID = 'sentry.parent_span_id';\nexport const SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING = 'sentry.sampled_not_recording';\nexport const SENTRY_TRACE_STATE_URL = 'sentry.url';\n\nexport const SENTRY_SCOPES_CONTEXT_KEY = createContextKey('sentry_scopes');\n\nexport const SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY = createContextKey('sentry_fork_isolation_scope');\n\nexport const SENTRY_FORK_SET_SCOPE_CONTEXT_KEY = createContextKey('sentry_fork_set_scope');\n\nexport const SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY = createContextKey('sentry_fork_set_isolation_scope');\n","import type { Context } from '@opentelemetry/api';\nimport type { Scope } from '@sentry/types';\nimport { addNonEnumerableProperty } from '@sentry/utils';\n\nimport { SENTRY_SCOPES_CONTEXT_KEY } from '../constants';\nimport type { CurrentScopes } from '../types';\n\nconst SCOPE_CONTEXT_FIELD = '_scopeContext';\n\n/**\n * Try to get the current scopes from the given OTEL context.\n * This requires a Context Manager that was wrapped with getWrappedContextManager.\n */\nexport function getScopesFromContext(context: Context): CurrentScopes | undefined {\n  return context.getValue(SENTRY_SCOPES_CONTEXT_KEY) as CurrentScopes | undefined;\n}\n\n/**\n * Set the current scopes on an OTEL context.\n * This will return a forked context with the Propagation Context set.\n */\nexport function setScopesOnContext(context: Context, scopes: CurrentScopes): Context {\n  return context.setValue(SENTRY_SCOPES_CONTEXT_KEY, scopes);\n}\n\n/**\n * Set the context on the scope so we can later look it up.\n * We need this to get the context from the scope in the `trace` functions.\n */\nexport function setContextOnScope(scope: Scope, context: Context): void {\n  addNonEnumerableProperty(scope, SCOPE_CONTEXT_FIELD, context);\n}\n\n/**\n * Get the context related to a scope.\n * TODO v8: Use this for the `trace` functions.\n * */\nexport function getContextFromScope(scope: Scope): Context | undefined {\n  return (scope as { [SCOPE_CONTEXT_FIELD]?: Context })[SCOPE_CONTEXT_FIELD];\n}\n","import { SEMATTRS_HTTP_URL } from '@opentelemetry/semantic-conventions';\nimport { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport type { AbstractSpan } from '../types';\nimport { spanHasAttributes } from './spanTypes';\n\n/**\n *\n * @param otelSpan Checks wheter a given OTEL Span is an http request to sentry.\n * @returns boolean\n */\nexport function isSentryRequestSpan(span: AbstractSpan): boolean {\n  if (!spanHasAttributes(span)) {\n    return false;\n  }\n\n  const { attributes } = span;\n\n  const httpUrl = attributes[SEMATTRS_HTTP_URL];\n\n  if (!httpUrl) {\n    return false;\n  }\n\n  return isSentryRequestUrl(httpUrl.toString(), getClient());\n}\n","import type { AttributeValue, Attributes } from '@opentelemetry/api';\nimport { SpanKind } from '@opentelemetry/api';\nimport {\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_FAAS_TRIGGER,\n  SEMATTRS_HTTP_METHOD,\n  SEMATTRS_HTTP_ROUTE,\n  SEMATTRS_HTTP_TARGET,\n  SEMATTRS_HTTP_URL,\n  SEMATTRS_MESSAGING_SYSTEM,\n  SEMATTRS_RPC_SERVICE,\n} from '@opentelemetry/semantic-conventions';\nimport type { SpanAttributes, TransactionSource } from '@sentry/types';\nimport { getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment } from '@sentry/utils';\n\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP } from '@sentry/core';\nimport type { AbstractSpan } from '../types';\nimport { getSpanKind } from './getSpanKind';\nimport { spanHasAttributes, spanHasName } from './spanTypes';\n\ninterface SpanDescription {\n  op: string | undefined;\n  description: string;\n  source: TransactionSource;\n  data?: Record<string, string | undefined>;\n}\n\n/**\n * Infer the op & description for a set of name, attributes and kind of a span.\n */\nexport function inferSpanData(name: string, attributes: SpanAttributes, kind: SpanKind): SpanDescription {\n  // This attribute is intentionally exported as a SEMATTR constant because it should stay intimite API\n  if (attributes['sentry.skip_span_data_inference']) {\n    return {\n      op: undefined,\n      description: name,\n      source: 'custom',\n      data: {\n        // Suggest to callers of `parseSpanDescription` to wipe the hint because it is unnecessary data in the end.\n        'sentry.skip_span_data_inference': undefined,\n      },\n    };\n  }\n\n  // if http.method exists, this is an http request span\n  //\n  // TODO: Referencing `http.request.method` is a temporary workaround until the semantic\n  // conventions export an attribute key for it.\n  const httpMethod = attributes['http.request.method'] || attributes[SEMATTRS_HTTP_METHOD];\n  if (httpMethod) {\n    return descriptionForHttpMethod({ attributes, name, kind }, httpMethod);\n  }\n\n  const dbSystem = attributes[SEMATTRS_DB_SYSTEM];\n  const opIsCache =\n    typeof attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] === 'string' &&\n    attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP].startsWith('cache.');\n\n  // If db.type exists then this is a database call span\n  // If the Redis DB is used as a cache, the span description should not be changed\n  if (dbSystem && !opIsCache) {\n    return descriptionForDbSystem({ attributes, name });\n  }\n\n  // If rpc.service exists then this is a rpc call span.\n  const rpcService = attributes[SEMATTRS_RPC_SERVICE];\n  if (rpcService) {\n    return {\n      op: 'rpc',\n      description: name,\n      source: 'route',\n    };\n  }\n\n  // If messaging.system exists then this is a messaging system span.\n  const messagingSystem = attributes[SEMATTRS_MESSAGING_SYSTEM];\n  if (messagingSystem) {\n    return {\n      op: 'message',\n      description: name,\n      source: 'route',\n    };\n  }\n\n  // If faas.trigger exists then this is a function as a service span.\n  const faasTrigger = attributes[SEMATTRS_FAAS_TRIGGER];\n  if (faasTrigger) {\n    return { op: faasTrigger.toString(), description: name, source: 'route' };\n  }\n\n  return { op: undefined, description: name, source: 'custom' };\n}\n\n/**\n * Extract better op/description from an otel span.\n *\n * Based on https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/7422ce2a06337f68a59b552b8c5a2ac125d6bae5/exporter/sentryexporter/sentry_exporter.go#L306\n */\nexport function parseSpanDescription(span: AbstractSpan): SpanDescription {\n  const attributes = spanHasAttributes(span) ? span.attributes : {};\n  const name = spanHasName(span) ? span.name : '<unknown>';\n  const kind = getSpanKind(span);\n\n  return inferSpanData(name, attributes, kind);\n}\n\nfunction descriptionForDbSystem({ attributes, name }: { attributes: Attributes; name: string }): SpanDescription {\n  // Use DB statement (Ex \"SELECT * FROM table\") if possible as description.\n  const statement = attributes[SEMATTRS_DB_STATEMENT];\n\n  const description = statement ? statement.toString() : name;\n\n  return { op: 'db', description, source: 'task' };\n}\n\n/** Only exported for tests. */\nexport function descriptionForHttpMethod(\n  { name, kind, attributes }: { name: string; attributes: Attributes; kind: SpanKind },\n  httpMethod: AttributeValue,\n): SpanDescription {\n  const opParts = ['http'];\n\n  switch (kind) {\n    case SpanKind.CLIENT:\n      opParts.push('client');\n      break;\n    case SpanKind.SERVER:\n      opParts.push('server');\n      break;\n  }\n\n  const { urlPath, url, query, fragment, hasRoute } = getSanitizedUrl(attributes, kind);\n\n  if (!urlPath) {\n    return { op: opParts.join('.'), description: name, source: 'custom' };\n  }\n\n  // Ex. description=\"GET /api/users\".\n  const description = `${httpMethod} ${urlPath}`;\n\n  // If `httpPath` is a root path, then we can categorize the transaction source as route.\n  const source: TransactionSource = hasRoute || urlPath === '/' ? 'route' : 'url';\n\n  const data: Record<string, string> = {};\n\n  if (url) {\n    data.url = url;\n  }\n  if (query) {\n    data['http.query'] = query;\n  }\n  if (fragment) {\n    data['http.fragment'] = fragment;\n  }\n\n  return {\n    op: opParts.join('.'),\n    description,\n    source,\n    data,\n  };\n}\n\n/** Exported for tests only */\nexport function getSanitizedUrl(\n  attributes: Attributes,\n  kind: SpanKind,\n): {\n  url: string | undefined;\n  urlPath: string | undefined;\n  query: string | undefined;\n  fragment: string | undefined;\n  hasRoute: boolean;\n} {\n  // This is the relative path of the URL, e.g. /sub\n  const httpTarget = attributes[SEMATTRS_HTTP_TARGET];\n  // This is the full URL, including host & query params etc., e.g. https://example.com/sub?foo=bar\n  const httpUrl = attributes[SEMATTRS_HTTP_URL];\n  // This is the normalized route name - may not always be available!\n  const httpRoute = attributes[SEMATTRS_HTTP_ROUTE];\n\n  const parsedUrl = typeof httpUrl === 'string' ? parseUrl(httpUrl) : undefined;\n  const url = parsedUrl ? getSanitizedUrlString(parsedUrl) : undefined;\n  const query = parsedUrl && parsedUrl.search ? parsedUrl.search : undefined;\n  const fragment = parsedUrl && parsedUrl.hash ? parsedUrl.hash : undefined;\n\n  if (typeof httpRoute === 'string') {\n    return { urlPath: httpRoute, url, query, fragment, hasRoute: true };\n  }\n\n  if (kind === SpanKind.SERVER && typeof httpTarget === 'string') {\n    return { urlPath: stripUrlQueryAndFragment(httpTarget), url, query, fragment, hasRoute: false };\n  }\n\n  if (parsedUrl) {\n    return { urlPath: url, url, query, fragment, hasRoute: false };\n  }\n\n  // fall back to target even for client spans, if no URL is present\n  if (typeof httpTarget === 'string') {\n    return { urlPath: stripUrlQueryAndFragment(httpTarget), url, query, fragment, hasRoute: false };\n  }\n\n  return { urlPath: undefined, url, query, fragment, hasRoute: false };\n}\n","import { SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, spanToJSON } from '@sentry/core';\nimport type { Client } from '@sentry/types';\nimport { parseSpanDescription } from './parseSpanDescription';\nimport { spanHasName } from './spanTypes';\n\n/**\n * Setup a DSC handler on the passed client,\n * ensuring that the transaction name is inferred from the span correctly.\n */\nexport function enhanceDscWithOpenTelemetryRootSpanName(client: Client): void {\n  client.on('createDsc', (dsc, rootSpan) => {\n    // We want to overwrite the transaction on the DSC that is created by default in core\n    // The reason for this is that we want to infer the span name, not use the initial one\n    // Otherwise, we'll get names like \"GET\" instead of e.g. \"GET /foo\"\n    // `parseSpanDescription` takes the attributes of the span into account for the name\n    // This mutates the passed-in DSC\n    if (rootSpan) {\n      const jsonSpan = spanToJSON(rootSpan);\n      const attributes = jsonSpan.data || {};\n      const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n      const { description } = spanHasName(rootSpan) ? parseSpanDescription(rootSpan) : { description: undefined };\n      if (source !== 'url' && description) {\n        dsc.transaction = description;\n      }\n    }\n  });\n}\n","import { TraceState } from '@opentelemetry/core';\nimport type { DynamicSamplingContext } from '@sentry/types';\nimport { dynamicSamplingContextToSentryBaggageHeader } from '@sentry/utils';\nimport {\n  SENTRY_TRACE_STATE_DSC,\n  SENTRY_TRACE_STATE_PARENT_SPAN_ID,\n  SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING,\n} from '../constants';\n\n/**\n * Generate a TraceState for the given data.\n */\nexport function makeTraceState({\n  parentSpanId,\n  dsc,\n  sampled,\n}: {\n  parentSpanId?: string;\n  dsc?: Partial<DynamicSamplingContext>;\n  sampled?: boolean;\n}): TraceState {\n  // We store the DSC as OTEL trace state on the span context\n  const dscString = dsc ? dynamicSamplingContextToSentryBaggageHeader(dsc) : undefined;\n\n  // We _always_ set the parent span ID, even if it is empty\n  // If we'd set this to 'undefined' we could not know if the trace state was set, but there was no parentSpanId,\n  // vs the trace state was not set at all (in which case we want to do fallback handling)\n  // If `''`, it should be considered \"no parent\"\n  const traceStateBase = new TraceState().set(SENTRY_TRACE_STATE_PARENT_SPAN_ID, parentSpanId || '');\n\n  const traceStateWithDsc = dscString ? traceStateBase.set(SENTRY_TRACE_STATE_DSC, dscString) : traceStateBase;\n\n  // We also specifically want to store if this is sampled to be not recording,\n  // or unsampled (=could be either sampled or not)\n  return sampled === false ? traceStateWithDsc.set(SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING, '1') : traceStateWithDsc;\n}\n","import type { SpanContext } from '@opentelemetry/api';\nimport { TraceFlags } from '@opentelemetry/api';\nimport type { PropagationContext } from '@sentry/types';\nimport { makeTraceState } from './makeTraceState';\n\n/**\n * Generates a SpanContext that represents a PropagationContext.\n * This can be set on a `context` to make this a (virtual) active span.\n */\nexport function generateSpanContextForPropagationContext(propagationContext: PropagationContext): SpanContext {\n  // We store the DSC as OTEL trace state on the span context\n  const traceState = makeTraceState({\n    parentSpanId: propagationContext.parentSpanId,\n    dsc: propagationContext.dsc,\n    sampled: propagationContext.sampled,\n  });\n\n  const spanContext: SpanContext = {\n    traceId: propagationContext.traceId,\n    spanId: propagationContext.parentSpanId || '',\n    isRemote: true,\n    traceFlags: propagationContext.sampled ? TraceFlags.SAMPLED : TraceFlags.NONE,\n    traceState,\n  };\n\n  return spanContext;\n}\n","import type { Span } from '@opentelemetry/api';\nimport { trace } from '@opentelemetry/api';\n\n/**\n * Returns the currently active span.\n */\nexport function getActiveSpan(): Span | undefined {\n  return trace.getActiveSpan();\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import type { SpanContext } from '@opentelemetry/api';\nimport { TraceFlags } from '@opentelemetry/api';\nimport { baggageHeaderToDynamicSamplingContext } from '@sentry/utils';\nimport { SENTRY_TRACE_STATE_DSC, SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING } from '../constants';\n\n/**\n * OpenTelemetry only knows about SAMPLED or NONE decision,\n * but for us it is important to differentiate between unset and unsampled.\n *\n * Both of these are identified as `traceFlags === TracegFlags.NONE`,\n * but we additionally look at a special trace state to differentiate between them.\n */\nexport function getSamplingDecision(spanContext: SpanContext): boolean | undefined {\n  const { traceFlags, traceState } = spanContext;\n\n  const sampledNotRecording = traceState ? traceState.get(SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING) === '1' : false;\n\n  // If trace flag is `SAMPLED`, we interpret this as sampled\n  // If it is `NONE`, it could mean either it was sampled to be not recorder, or that it was not sampled at all\n  // For us this is an important difference, sow e look at the SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING\n  // to identify which it is\n  if (traceFlags === TraceFlags.SAMPLED) {\n    return true;\n  }\n\n  if (sampledNotRecording) {\n    return false;\n  }\n\n  // Fall back to DSC as a last resort, that may also contain `sampled`...\n  const dscString = traceState ? traceState.get(SENTRY_TRACE_STATE_DSC) : undefined;\n  const dsc = dscString ? baggageHeaderToDynamicSamplingContext(dscString) : undefined;\n\n  if (dsc?.sampled === 'true') {\n    return true;\n  }\n  if (dsc?.sampled === 'false') {\n    return false;\n  }\n\n  return undefined;\n}\n","type OpenTelemetryElement = 'SentrySpanProcessor' | 'SentryContextManager' | 'SentryPropagator' | 'SentrySampler';\n\nconst setupElements = new Set<OpenTelemetryElement>();\n\n/** Get all the OpenTelemetry elements that have been set up. */\nexport function openTelemetrySetupCheck(): OpenTelemetryElement[] {\n  return Array.from(setupElements);\n}\n\n/** Mark an OpenTelemetry element as setup. */\nexport function setIsSetup(element: OpenTelemetryElement): void {\n  setupElements.add(element);\n}\n\n/** Only exported for tests. */\nexport function clearOpenTelemetrySetupCheck(): void {\n  setupElements.clear();\n}\n","import type { Baggage, Context, Span, TextMapGetter, TextMapSetter } from '@opentelemetry/api';\nimport { INVALID_TRACEID } from '@opentelemetry/api';\nimport { context } from '@opentelemetry/api';\nimport { propagation, trace } from '@opentelemetry/api';\nimport { W3CBaggagePropagator, isTracingSuppressed } from '@opentelemetry/core';\nimport { SEMATTRS_HTTP_URL } from '@opentelemetry/semantic-conventions';\nimport type { continueTrace } from '@sentry/core';\nimport { hasTracingEnabled } from '@sentry/core';\nimport { getRootSpan } from '@sentry/core';\nimport { spanToJSON } from '@sentry/core';\nimport {\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n} from '@sentry/core';\nimport type { DynamicSamplingContext, Options, PropagationContext } from '@sentry/types';\nimport {\n  LRUMap,\n  SENTRY_BAGGAGE_KEY_PREFIX,\n  baggageHeaderToDynamicSamplingContext,\n  generateSentryTraceHeader,\n  logger,\n  parseBaggageHeader,\n  propagationContextFromHeaders,\n  stringMatchesSomePattern,\n} from '@sentry/utils';\n\nimport {\n  SENTRY_BAGGAGE_HEADER,\n  SENTRY_TRACE_HEADER,\n  SENTRY_TRACE_STATE_DSC,\n  SENTRY_TRACE_STATE_PARENT_SPAN_ID,\n  SENTRY_TRACE_STATE_URL,\n} from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport { getScopesFromContext, setScopesOnContext } from './utils/contextData';\nimport { generateSpanContextForPropagationContext } from './utils/generateSpanContextForPropagationContext';\nimport { getSamplingDecision } from './utils/getSamplingDecision';\nimport { setIsSetup } from './utils/setupCheck';\n\n/** Get the Sentry propagation context from a span context. */\nexport function getPropagationContextFromSpan(span: Span): PropagationContext {\n  const spanContext = span.spanContext();\n  const { traceId, spanId, traceState } = spanContext;\n\n  // When we have a dsc trace state, it means this came from the incoming trace\n  // Then this takes presedence over the root span\n  const dscString = traceState ? traceState.get(SENTRY_TRACE_STATE_DSC) : undefined;\n  const traceStateDsc = dscString ? baggageHeaderToDynamicSamplingContext(dscString) : undefined;\n\n  const parentSpanId = traceState ? traceState.get(SENTRY_TRACE_STATE_PARENT_SPAN_ID) || undefined : undefined;\n\n  const sampled = getSamplingDecision(spanContext);\n\n  // No trace state? --> Take DSC from root span\n  const dsc = traceStateDsc || getDynamicSamplingContextFromSpan(getRootSpan(span));\n\n  return {\n    traceId,\n    spanId,\n    sampled,\n    parentSpanId,\n    dsc,\n  };\n}\n\n/**\n * Injects and extracts `sentry-trace` and `baggage` headers from carriers.\n */\nexport class SentryPropagator extends W3CBaggagePropagator {\n  /** A map of URLs that have already been checked for if they match tracePropagationTargets. */\n  private _urlMatchesTargetsMap: LRUMap<string, boolean>;\n\n  public constructor() {\n    super();\n    setIsSetup('SentryPropagator');\n\n    // We're caching results so we don't have to recompute regexp every time we create a request.\n    this._urlMatchesTargetsMap = new LRUMap<string, boolean>(100);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    if (isTracingSuppressed(context)) {\n      DEBUG_BUILD && logger.log('[Tracing] Not injecting trace data for url because tracing is suppressed.');\n      return;\n    }\n\n    const activeSpan = trace.getSpan(context);\n    const url = activeSpan && getCurrentURL(activeSpan);\n\n    const tracePropagationTargets = getClient()?.getOptions()?.tracePropagationTargets;\n    if (\n      typeof url === 'string' &&\n      tracePropagationTargets &&\n      !this._shouldInjectTraceData(tracePropagationTargets, url)\n    ) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Tracing] Not injecting trace data for url because it does not match tracePropagationTargets:',\n          url,\n        );\n      return;\n    }\n\n    const existingBaggageHeader = getExistingBaggage(carrier);\n    let baggage = propagation.getBaggage(context) || propagation.createBaggage({});\n\n    const { dynamicSamplingContext, traceId, spanId, sampled } = getInjectionData(context);\n\n    if (existingBaggageHeader) {\n      const baggageEntries = parseBaggageHeader(existingBaggageHeader);\n\n      if (baggageEntries) {\n        Object.entries(baggageEntries).forEach(([key, value]) => {\n          baggage = baggage.setEntry(key, { value });\n        });\n      }\n    }\n\n    if (dynamicSamplingContext) {\n      baggage = Object.entries(dynamicSamplingContext).reduce<Baggage>((b, [dscKey, dscValue]) => {\n        if (dscValue) {\n          return b.setEntry(`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`, { value: dscValue });\n        }\n        return b;\n      }, baggage);\n    }\n\n    // We also want to avoid setting the default OTEL trace ID, if we get that for whatever reason\n    if (traceId && traceId !== INVALID_TRACEID) {\n      setter.set(carrier, SENTRY_TRACE_HEADER, generateSentryTraceHeader(traceId, spanId, sampled));\n    }\n\n    super.inject(propagation.setBaggage(context, baggage), carrier, setter);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const maybeSentryTraceHeader: string | string[] | undefined = getter.get(carrier, SENTRY_TRACE_HEADER);\n    const baggage = getter.get(carrier, SENTRY_BAGGAGE_HEADER);\n\n    const sentryTrace = maybeSentryTraceHeader\n      ? Array.isArray(maybeSentryTraceHeader)\n        ? maybeSentryTraceHeader[0]\n        : maybeSentryTraceHeader\n      : undefined;\n\n    const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n\n    // Add remote parent span context\n    const ctxWithSpanContext = getContextWithRemoteActiveSpan(context, { sentryTrace, baggage });\n\n    // Also update the scope on the context (to be sure this is picked up everywhere)\n    const scopes = getScopesFromContext(ctxWithSpanContext);\n    const newScopes = {\n      scope: scopes ? scopes.scope.clone() : getCurrentScope().clone(),\n      isolationScope: scopes ? scopes.isolationScope : getIsolationScope(),\n    };\n    newScopes.scope.setPropagationContext(propagationContext);\n\n    return setScopesOnContext(ctxWithSpanContext, newScopes);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public fields(): string[] {\n    return [SENTRY_TRACE_HEADER, SENTRY_BAGGAGE_HEADER];\n  }\n\n  /** If we want to inject trace data for a given URL. */\n  private _shouldInjectTraceData(tracePropagationTargets: Options['tracePropagationTargets'], url: string): boolean {\n    if (tracePropagationTargets === undefined) {\n      return true;\n    }\n\n    const cachedDecision = this._urlMatchesTargetsMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = stringMatchesSomePattern(url, tracePropagationTargets);\n    this._urlMatchesTargetsMap.set(url, decision);\n    return decision;\n  }\n}\n\nfunction getInjectionData(context: Context): {\n  dynamicSamplingContext: Partial<DynamicSamplingContext> | undefined;\n  traceId: string | undefined;\n  spanId: string | undefined;\n  sampled: boolean | undefined;\n} {\n  const span = hasTracingEnabled() ? trace.getSpan(context) : undefined;\n  const spanIsRemote = span?.spanContext().isRemote;\n\n  // If we have a local span, we can just pick everything from it\n  if (span && !spanIsRemote) {\n    const spanContext = span.spanContext();\n\n    const propagationContext = getPropagationContextFromSpan(span);\n    const dynamicSamplingContext = getDynamicSamplingContext(propagationContext, spanContext.traceId);\n    return {\n      dynamicSamplingContext,\n      traceId: spanContext.traceId,\n      spanId: spanContext.spanId,\n      sampled: getSamplingDecision(spanContext),\n    };\n  }\n\n  // Else we try to use the propagation context from the scope\n  const scope = getScopesFromContext(context)?.scope || getCurrentScope();\n\n  const propagationContext = scope.getPropagationContext();\n  const dynamicSamplingContext = getDynamicSamplingContext(propagationContext, propagationContext.traceId);\n  return {\n    dynamicSamplingContext,\n    traceId: propagationContext.traceId,\n    spanId: propagationContext.spanId,\n    sampled: propagationContext.sampled,\n  };\n}\n\n/** Get the DSC from a context, or fall back to use the one from the client. */\nfunction getDynamicSamplingContext(\n  propagationContext: PropagationContext,\n  traceId: string | undefined,\n): Partial<DynamicSamplingContext> | undefined {\n  // If we have a DSC on the propagation context, we just use it\n  if (propagationContext?.dsc) {\n    return propagationContext.dsc;\n  }\n\n  // Else, we try to generate a new one\n  const client = getClient();\n\n  if (client) {\n    return getDynamicSamplingContextFromClient(traceId || propagationContext.traceId, client);\n  }\n\n  return undefined;\n}\n\nfunction getContextWithRemoteActiveSpan(\n  ctx: Context,\n  { sentryTrace, baggage }: Parameters<typeof continueTrace>[0],\n): Context {\n  const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n\n  const spanContext = generateSpanContextForPropagationContext(propagationContext);\n  return trace.setSpanContext(ctx, spanContext);\n}\n\n/**\n * Takes trace strings and propagates them as a remote active span.\n * This should be used in addition to `continueTrace` in OTEL-powered environments.\n */\nexport function continueTraceAsRemoteSpan<T>(\n  ctx: Context,\n  options: Parameters<typeof continueTrace>[0],\n  callback: () => T,\n): T {\n  const ctxWithSpanContext = getContextWithRemoteActiveSpan(ctx, options);\n\n  return context.with(ctxWithSpanContext, callback);\n}\n\n/** Try to get the existing baggage header so we can merge this in. */\nfunction getExistingBaggage(carrier: unknown): string | undefined {\n  try {\n    const baggage = (carrier as Record<string, string | string[]>)[SENTRY_BAGGAGE_HEADER];\n    return Array.isArray(baggage) ? baggage.join(',') : baggage;\n  } catch {\n    return undefined;\n  }\n}\n\n/**\n * It is pretty tricky to get access to the outgoing request URL of a request in the propagator.\n * As we only have access to the context of the span to be sent and the carrier (=headers),\n * but the span may be unsampled and thus have no attributes.\n *\n * So we use the following logic:\n * 1. If we have an active span, we check if it has a URL attribute.\n * 2. Else, if the active span has no URL attribute (e.g. it is unsampled), we check a special trace state (which we set in our sampler).\n */\nfunction getCurrentURL(span: Span): string | undefined {\n  const urlAttribute = spanToJSON(span).data?.[SEMATTRS_HTTP_URL];\n  if (urlAttribute) {\n    return urlAttribute;\n  }\n\n  // Also look at the traceState, which we may set in the sampler even for unsampled spans\n  const urlTraceState = span.spanContext().traceState?.get(SENTRY_TRACE_STATE_URL);\n  if (urlTraceState) {\n    return urlTraceState;\n  }\n\n  return undefined;\n}\n","import type { Context, Span, SpanContext, SpanOptions, Tracer } from '@opentelemetry/api';\nimport { INVALID_SPANID, SpanStatusCode, TraceFlags, context, trace } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport {\n  SDK_VERSION,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  continueTrace as baseContinueTrace,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromSpan,\n  getRootSpan,\n  handleCallbackErrors,\n  spanToJSON,\n} from '@sentry/core';\nimport type { Client, Scope, Span as SentrySpan } from '@sentry/types';\nimport { continueTraceAsRemoteSpan } from './propagator';\n\nimport type { OpenTelemetryClient, OpenTelemetrySpanContext } from './types';\nimport { getContextFromScope, getScopesFromContext } from './utils/contextData';\nimport { getSamplingDecision } from './utils/getSamplingDecision';\nimport { makeTraceState } from './utils/makeTraceState';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nexport function startSpan<T>(options: OpenTelemetrySpanContext, callback: (span: Span) => T): T {\n  const tracer = getTracer();\n\n  const { name, parentSpan: customParentSpan } = options;\n\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = getActiveSpanWrapper<T>(customParentSpan);\n\n  return wrapper(() => {\n    const activeCtx = getContext(options.scope, options.forceTransaction);\n    const shouldSkipSpan = options.onlyIfParent && !trace.getSpan(activeCtx);\n    const ctx = shouldSkipSpan ? suppressTracing(activeCtx) : activeCtx;\n\n    const spanOptions = getSpanOptions(options);\n\n    return tracer.startActiveSpan(name, spanOptions, ctx, span => {\n      return handleCallbackErrors(\n        () => callback(span),\n        () => {\n          // Only set the span status to ERROR when there wasn't any status set before, in order to avoid stomping useful span statuses\n          if (spanToJSON(span).status === undefined) {\n            span.setStatus({ code: SpanStatusCode.ERROR });\n          }\n        },\n        () => span.end(),\n      );\n    });\n  });\n}\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nexport function startSpanManual<T>(\n  options: OpenTelemetrySpanContext,\n  callback: (span: Span, finish: () => void) => T,\n): T {\n  const tracer = getTracer();\n\n  const { name, parentSpan: customParentSpan } = options;\n\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = getActiveSpanWrapper<T>(customParentSpan);\n\n  return wrapper(() => {\n    const activeCtx = getContext(options.scope, options.forceTransaction);\n    const shouldSkipSpan = options.onlyIfParent && !trace.getSpan(activeCtx);\n    const ctx = shouldSkipSpan ? suppressTracing(activeCtx) : activeCtx;\n\n    const spanOptions = getSpanOptions(options);\n\n    return tracer.startActiveSpan(name, spanOptions, ctx, span => {\n      return handleCallbackErrors(\n        () => callback(span, () => span.end()),\n        () => {\n          // Only set the span status to ERROR when there wasn't any status set before, in order to avoid stomping useful span statuses\n          if (spanToJSON(span).status === undefined) {\n            span.setStatus({ code: SpanStatusCode.ERROR });\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getActiveSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * This function will always return a span,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nexport function startInactiveSpan(options: OpenTelemetrySpanContext): Span {\n  const tracer = getTracer();\n\n  const { name, parentSpan: customParentSpan } = options;\n\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = getActiveSpanWrapper<Span>(customParentSpan);\n\n  return wrapper(() => {\n    const activeCtx = getContext(options.scope, options.forceTransaction);\n    const shouldSkipSpan = options.onlyIfParent && !trace.getSpan(activeCtx);\n    const ctx = shouldSkipSpan ? suppressTracing(activeCtx) : activeCtx;\n\n    const spanOptions = getSpanOptions(options);\n\n    const span = tracer.startSpan(name, spanOptions, ctx);\n\n    return span;\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback. Can be\n * passed `null` to start an entirely new span tree.\n *\n * @param span Spans started in the context of the provided callback will be children of this span. If `null` is passed,\n * spans started within the callback will be root spans.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span | null, callback: (scope: Scope) => T): T {\n  const newContextWithActiveSpan = span ? trace.setSpan(context.active(), span) : trace.deleteSpan(context.active());\n  return context.with(newContextWithActiveSpan, () => callback(getCurrentScope()));\n}\n\nfunction getTracer(): Tracer {\n  const client = getClient<Client & OpenTelemetryClient>();\n  return (client && client.tracer) || trace.getTracer('@sentry/opentelemetry', SDK_VERSION);\n}\n\nfunction getSpanOptions(options: OpenTelemetrySpanContext): SpanOptions {\n  const { startTime, attributes, kind, op } = options;\n\n  // OTEL expects timestamps in ms, not seconds\n  const fixedStartTime = typeof startTime === 'number' ? ensureTimestampInMilliseconds(startTime) : startTime;\n\n  return {\n    attributes: op\n      ? {\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: op,\n          ...attributes,\n        }\n      : attributes,\n    kind,\n    startTime: fixedStartTime,\n  };\n}\n\nfunction ensureTimestampInMilliseconds(timestamp: number): number {\n  const isMs = timestamp < 9999999999;\n  return isMs ? timestamp * 1000 : timestamp;\n}\n\nfunction getContext(scope: Scope | undefined, forceTransaction: boolean | undefined): Context {\n  const ctx = getContextForScope(scope);\n  const actualScope = getScopesFromContext(ctx)?.scope;\n\n  const parentSpan = trace.getSpan(ctx);\n\n  // In the case that we have no parent span, we need to \"simulate\" one to ensure the propagation context is correct\n  if (!parentSpan) {\n    const client = getClient();\n\n    if (actualScope && client) {\n      const propagationContext = actualScope.getPropagationContext();\n\n      // We store the DSC as OTEL trace state on the span context\n      const traceState = makeTraceState({\n        parentSpanId: propagationContext.parentSpanId,\n        // Not defined yet, we want to pick this up on-demand only\n        dsc: undefined,\n        sampled: propagationContext.sampled,\n      });\n\n      const spanOptions: SpanContext = {\n        traceId: propagationContext.traceId,\n        spanId: propagationContext.parentSpanId || propagationContext.spanId,\n        isRemote: true,\n        traceFlags: propagationContext.sampled ? TraceFlags.SAMPLED : TraceFlags.NONE,\n        traceState,\n      };\n\n      // Add remote parent span context,\n      return trace.setSpanContext(ctx, spanOptions);\n    }\n\n    // if we have no scope or client, we just return the context as-is\n    return ctx;\n  }\n\n  // If we don't want to force a transaction, and we have a parent span, all good, we just return as-is!\n  if (!forceTransaction) {\n    return ctx;\n  }\n\n  // Else, if we do have a parent span but want to force a transaction, we have to simulate a \"root\" context\n\n  // Else, we need to do two things:\n  // 1. Unset the parent span from the context, so we'll create a new root span\n  // 2. Ensure the propagation context is correct, so we'll continue from the parent span\n  const ctxWithoutSpan = trace.deleteSpan(ctx);\n\n  const { spanId, traceId } = parentSpan.spanContext();\n  const sampled = getSamplingDecision(parentSpan.spanContext());\n\n  // In this case, when we are forcing a transaction, we want to treat this like continuing an incoming trace\n  // so we set the traceState according to the root span\n  const rootSpan = getRootSpan(parentSpan);\n  const dsc = getDynamicSamplingContextFromSpan(rootSpan);\n\n  const traceState = makeTraceState({\n    dsc,\n    parentSpanId: spanId !== INVALID_SPANID ? spanId : undefined,\n    sampled,\n  });\n\n  const spanOptions: SpanContext = {\n    traceId,\n    spanId,\n    isRemote: true,\n    traceFlags: sampled ? TraceFlags.SAMPLED : TraceFlags.NONE,\n    traceState,\n  };\n\n  const ctxWithSpanContext = trace.setSpanContext(ctxWithoutSpan, spanOptions);\n\n  return ctxWithSpanContext;\n}\n\nfunction getContextForScope(scope?: Scope): Context {\n  if (scope) {\n    const ctx = getContextFromScope(scope);\n    if (ctx) {\n      return ctx;\n    }\n  }\n\n  return context.active();\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n * and `<meta name=\"baggage\">` HTML tags.\n *\n * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n * be attached to the incoming trace.\n *\n * This is a custom version of `continueTrace` that is used in OTEL-powered environments.\n * It propagates the trace as a remote span, in addition to setting it on the propagation context.\n */\nexport function continueTrace<T>(options: Parameters<typeof baseContinueTrace>[0], callback: () => T): T {\n  return baseContinueTrace(options, () => {\n    return continueTraceAsRemoteSpan(context.active(), options, callback);\n  });\n}\n\nfunction getActiveSpanWrapper<T>(parentSpan: Span | SentrySpan | undefined | null): (callback: () => T) => T {\n  return parentSpan !== undefined\n    ? (callback: () => T) => {\n        return withActiveSpan(parentSpan, callback);\n      }\n    : (callback: () => T) => callback();\n}\n","import { context } from '@opentelemetry/api';\nimport { suppressTracing as suppressTracingImpl } from '@opentelemetry/core';\n\n/** Suppress tracing in the given callback, ensuring no spans are generated inside of it. */\nexport function suppressTracing<T>(callback: () => T): T {\n  const ctx = suppressTracingImpl(context.active());\n  return context.with(ctx, callback);\n}\n","import { getDynamicSamplingContextFromSpan, getRootSpan } from '@sentry/core';\nimport type { Client } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport { SENTRY_TRACE_STATE_PARENT_SPAN_ID } from './constants';\nimport { getActiveSpan } from './utils/getActiveSpan';\nimport { spanHasParentId } from './utils/spanTypes';\n\n/** Ensure the `trace` context is set on all events. */\nexport function setupEventContextTrace(client: Client): void {\n  client.on('preprocessEvent', event => {\n    const span = getActiveSpan();\n    // For transaction events, this is handled separately\n    // Because the active span may not be the span that is actually the transaction event\n    if (!span || event.type === 'transaction') {\n      return;\n    }\n\n    const spanContext = span.spanContext();\n\n    // If we have a parent span id from trace state, use that ('' means no parent should be used)\n    // Else, pick the one from the span\n    const parentSpanIdFromTraceState = spanContext.traceState?.get(SENTRY_TRACE_STATE_PARENT_SPAN_ID);\n    const parent_span_id =\n      typeof parentSpanIdFromTraceState === 'string'\n        ? parentSpanIdFromTraceState || undefined\n        : spanHasParentId(span)\n          ? span.parentSpanId\n          : undefined;\n\n    // If event has already set `trace` context, use that one.\n    event.contexts = {\n      trace: dropUndefinedKeys({\n        trace_id: spanContext.traceId,\n        span_id: spanContext.spanId,\n        parent_span_id,\n      }),\n      ...event.contexts,\n    };\n\n    const rootSpan = getRootSpan(span);\n\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(rootSpan),\n      ...event.sdkProcessingMetadata,\n    };\n\n    return event;\n  });\n}\n","import * as api from '@opentelemetry/api';\nimport { getDefaultCurrentScope, getDefaultIsolationScope, setAsyncContextStrategy } from '@sentry/core';\nimport type { withActiveSpan as defaultWithActiveSpan } from '@sentry/core';\nimport type { Scope } from '@sentry/types';\n\nimport {\n  SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY,\n  SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY,\n  SENTRY_FORK_SET_SCOPE_CONTEXT_KEY,\n} from './constants';\nimport { startInactiveSpan, startSpan, startSpanManual, withActiveSpan } from './trace';\nimport type { CurrentScopes } from './types';\nimport { getScopesFromContext } from './utils/contextData';\nimport { getActiveSpan } from './utils/getActiveSpan';\nimport { suppressTracing } from './utils/suppressTracing';\n\n/**\n * Sets the async context strategy to use follow the OTEL context under the hood.\n * We handle forking a hub inside of our custom OTEL Context Manager (./otelContextManager.ts)\n */\nexport function setOpenTelemetryContextAsyncContextStrategy(): void {\n  function getScopes(): CurrentScopes {\n    const ctx = api.context.active();\n    const scopes = getScopesFromContext(ctx);\n\n    if (scopes) {\n      return scopes;\n    }\n\n    // fallback behavior:\n    // if, for whatever reason, we can't find scopes on the context here, we have to fix this somehow\n    return {\n      scope: getDefaultCurrentScope(),\n      isolationScope: getDefaultIsolationScope(),\n    };\n  }\n\n  function withScope<T>(callback: (scope: Scope) => T): T {\n    const ctx = api.context.active();\n\n    // We depend on the otelContextManager to handle the context/hub\n    // We set the `SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY` context value, which is picked up by\n    // the OTEL context manager, which uses the presence of this key to determine if it should\n    // fork the isolation scope, or not\n    // as by default, we don't want to fork this, unless triggered explicitly by `withScope`\n    return api.context.with(ctx, () => {\n      return callback(getCurrentScope());\n    });\n  }\n\n  function withSetScope<T>(scope: Scope, callback: (scope: Scope) => T): T {\n    const ctx = api.context.active();\n\n    // We depend on the otelContextManager to handle the context/hub\n    // We set the `SENTRY_FORK_SET_SCOPE_CONTEXT_KEY` context value, which is picked up by\n    // the OTEL context manager, which picks up this scope as the current scope\n    return api.context.with(ctx.setValue(SENTRY_FORK_SET_SCOPE_CONTEXT_KEY, scope), () => {\n      return callback(scope);\n    });\n  }\n\n  function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n    const ctx = api.context.active();\n\n    // We depend on the otelContextManager to handle the context/hub\n    // We set the `SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY` context value, which is picked up by\n    // the OTEL context manager, which uses the presence of this key to determine if it should\n    // fork the isolation scope, or not\n    return api.context.with(ctx.setValue(SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY, true), () => {\n      return callback(getIsolationScope());\n    });\n  }\n\n  function withSetIsolationScope<T>(isolationScope: Scope, callback: (isolationScope: Scope) => T): T {\n    const ctx = api.context.active();\n\n    // We depend on the otelContextManager to handle the context/hub\n    // We set the `SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY` context value, which is picked up by\n    // the OTEL context manager, which uses the presence of this key to determine if it should\n    // fork the isolation scope, or not\n    return api.context.with(ctx.setValue(SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY, isolationScope), () => {\n      return callback(getIsolationScope());\n    });\n  }\n\n  function getCurrentScope(): Scope {\n    return getScopes().scope;\n  }\n\n  function getIsolationScope(): Scope {\n    return getScopes().isolationScope;\n  }\n\n  setAsyncContextStrategy({\n    withScope,\n    withSetScope,\n    withSetIsolationScope,\n    withIsolationScope,\n    getCurrentScope,\n    getIsolationScope,\n    startSpan,\n    startSpanManual,\n    startInactiveSpan,\n    getActiveSpan,\n    // The types here don't fully align, because our own `Span` type is narrower\n    // than the OTEL one - but this is OK for here, as we now we'll only have OTEL spans passed around\n    withActiveSpan: withActiveSpan as typeof defaultWithActiveSpan,\n    suppressTracing: suppressTracing,\n  });\n}\n","import type { Context, ContextManager } from '@opentelemetry/api';\nimport { getCurrentScope, getIsolationScope } from '@sentry/core';\nimport type { Scope } from '@sentry/types';\n\nimport {\n  SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY,\n  SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY,\n  SENTRY_FORK_SET_SCOPE_CONTEXT_KEY,\n} from './constants';\nimport { getScopesFromContext, setContextOnScope, setScopesOnContext } from './utils/contextData';\nimport { setIsSetup } from './utils/setupCheck';\n\n/**\n * Wrap an OpenTelemetry ContextManager in a way that ensures the context is kept in sync with the Sentry Scope.\n *\n * Usage:\n * import { AsyncLocalStorageContextManager } from '@opentelemetry/context-async-hooks';\n * const SentryContextManager = wrapContextManagerClass(AsyncLocalStorageContextManager);\n * const contextManager = new SentryContextManager();\n */\nexport function wrapContextManagerClass<ContextManagerInstance extends ContextManager>(\n  ContextManagerClass: new (...args: unknown[]) => ContextManagerInstance,\n): typeof ContextManagerClass {\n  /**\n   * This is a custom ContextManager for OpenTelemetry, which extends the default AsyncLocalStorageContextManager.\n   * It ensures that we create new scopes per context, so that the OTEL Context & the Sentry Scope are always in sync.\n   *\n   * Note that we currently only support AsyncHooks with this,\n   * but since this should work for Node 14+ anyhow that should be good enough.\n   */\n\n  // @ts-expect-error TS does not like this, but we know this is fine\n  class SentryContextManager extends ContextManagerClass {\n    public constructor(...args: unknown[]) {\n      super(...args);\n      setIsSetup('SentryContextManager');\n    }\n    /**\n     * Overwrite with() of the original AsyncLocalStorageContextManager\n     * to ensure we also create new scopes per context.\n     */\n    public with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n      context: Context,\n      fn: F,\n      thisArg?: ThisParameterType<F>,\n      ...args: A\n    ): ReturnType<F> {\n      const currentScopes = getScopesFromContext(context);\n      const currentScope = currentScopes?.scope || getCurrentScope();\n      const currentIsolationScope = currentScopes?.isolationScope || getIsolationScope();\n\n      const shouldForkIsolationScope = context.getValue(SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY) === true;\n      const scope = context.getValue(SENTRY_FORK_SET_SCOPE_CONTEXT_KEY) as Scope | undefined;\n      const isolationScope = context.getValue(SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY) as Scope | undefined;\n\n      const newCurrentScope = scope || currentScope.clone();\n      const newIsolationScope =\n        isolationScope || (shouldForkIsolationScope ? currentIsolationScope.clone() : currentIsolationScope);\n      const scopes = { scope: newCurrentScope, isolationScope: newIsolationScope };\n\n      const ctx1 = setScopesOnContext(context, scopes);\n\n      // Remove the unneeded values again\n      const ctx2 = ctx1\n        .deleteValue(SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY)\n        .deleteValue(SENTRY_FORK_SET_SCOPE_CONTEXT_KEY)\n        .deleteValue(SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY);\n\n      setContextOnScope(newCurrentScope, ctx2);\n\n      return super.with(ctx2, fn, thisArg, ...args);\n    }\n  }\n\n  return SentryContextManager as unknown as typeof ContextManagerClass;\n}\n","/** If this attribute is true, it means that the parent is a remote span. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE = 'sentry.parentIsRemote';\n","import type { ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE } from '../semanticAttributes';\n\nexport interface SpanNode {\n  id: string;\n  span?: ReadableSpan;\n  parentNode?: SpanNode | undefined;\n  children: SpanNode[];\n}\n\ntype SpanMap = Map<string, SpanNode>;\n\n/**\n * This function runs through a list of OTEL Spans, and wraps them in an `SpanNode`\n * where each node holds a reference to their parent node.\n */\nexport function groupSpansWithParents(spans: ReadableSpan[]): SpanNode[] {\n  const nodeMap: SpanMap = new Map<string, SpanNode>();\n\n  for (const span of spans) {\n    createOrUpdateSpanNodeAndRefs(nodeMap, span);\n  }\n\n  return Array.from(nodeMap, function ([_id, spanNode]) {\n    return spanNode;\n  });\n}\n\n/**\n * This returns the _local_ parent ID - `parentId` on the span may point to a remote span.\n */\nexport function getLocalParentId(span: ReadableSpan): string | undefined {\n  const parentIsRemote = span.attributes[SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE] === true;\n  // If the parentId is the trace parent ID, we pretend it's undefined\n  // As this means the parent exists somewhere else\n  return !parentIsRemote ? span.parentSpanId : undefined;\n}\n\nfunction createOrUpdateSpanNodeAndRefs(nodeMap: SpanMap, span: ReadableSpan): void {\n  const id = span.spanContext().spanId;\n  const parentId = getLocalParentId(span);\n\n  if (!parentId) {\n    createOrUpdateNode(nodeMap, { id, span, children: [] });\n    return;\n  }\n\n  // Else make sure to create parent node as well\n  // Note that the parent may not know it's parent _yet_, this may be updated in a later pass\n  const parentNode = createOrGetParentNode(nodeMap, parentId);\n  const node = createOrUpdateNode(nodeMap, { id, span, parentNode, children: [] });\n  parentNode.children.push(node);\n}\n\nfunction createOrGetParentNode(nodeMap: SpanMap, id: string): SpanNode {\n  const existing = nodeMap.get(id);\n\n  if (existing) {\n    return existing;\n  }\n\n  return createOrUpdateNode(nodeMap, { id, children: [] });\n}\n\nfunction createOrUpdateNode(nodeMap: SpanMap, spanNode: SpanNode): SpanNode {\n  const existing = nodeMap.get(spanNode.id);\n\n  // If span is already set, nothing to do here\n  if (existing && existing.span) {\n    return existing;\n  }\n\n  // If it exists but span is not set yet, we update it\n  if (existing && !existing.span) {\n    existing.span = spanNode.span;\n    existing.parentNode = spanNode.parentNode;\n    return existing;\n  }\n\n  // Else, we create a new one...\n  nodeMap.set(spanNode.id, spanNode);\n  return spanNode;\n}\n","import { SpanStatusCode } from '@opentelemetry/api';\nimport { SEMATTRS_HTTP_STATUS_CODE, SEMATTRS_RPC_GRPC_STATUS_CODE } from '@opentelemetry/semantic-conventions';\nimport { SPAN_STATUS_ERROR, SPAN_STATUS_OK, getSpanStatusFromHttpCode } from '@sentry/core';\nimport type { SpanAttributes, SpanStatus } from '@sentry/types';\n\nimport type { AbstractSpan } from '../types';\nimport { spanHasAttributes, spanHasStatus } from './spanTypes';\n\n// canonicalCodesGrpcMap maps some GRPC codes to Sentry's span statuses. See description in grpc documentation.\nconst canonicalGrpcErrorCodesMap: Record<string, SpanStatus['message']> = {\n  '1': 'cancelled',\n  '2': 'unknown_error',\n  '3': 'invalid_argument',\n  '4': 'deadline_exceeded',\n  '5': 'not_found',\n  '6': 'already_exists',\n  '7': 'permission_denied',\n  '8': 'resource_exhausted',\n  '9': 'failed_precondition',\n  '10': 'aborted',\n  '11': 'out_of_range',\n  '12': 'unimplemented',\n  '13': 'internal_error',\n  '14': 'unavailable',\n  '15': 'data_loss',\n  '16': 'unauthenticated',\n} as const;\n\nconst isStatusErrorMessageValid = (message: string): boolean => {\n  return Object.values(canonicalGrpcErrorCodesMap).includes(message as SpanStatus['message']);\n};\n\n/**\n * Get a Sentry span status from an otel span.\n */\nexport function mapStatus(span: AbstractSpan): SpanStatus {\n  const attributes = spanHasAttributes(span) ? span.attributes : {};\n  const status = spanHasStatus(span) ? span.status : undefined;\n\n  if (status) {\n    // Since span status OK is not set by default, we give it priority: https://opentelemetry.io/docs/concepts/signals/traces/#span-status\n    if (status.code === SpanStatusCode.OK) {\n      return { code: SPAN_STATUS_OK };\n      // If the span is already marked as erroneous we return that exact status\n    } else if (status.code === SpanStatusCode.ERROR) {\n      if (typeof status.message === 'undefined') {\n        const inferredStatus = inferStatusFromAttributes(attributes);\n        if (inferredStatus) {\n          return inferredStatus;\n        }\n      }\n\n      if (status.message && isStatusErrorMessageValid(status.message)) {\n        return { code: SPAN_STATUS_ERROR, message: status.message };\n      } else {\n        return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n      }\n    }\n  }\n\n  // If the span status is UNSET, we try to infer it from HTTP or GRPC status codes.\n  const inferredStatus = inferStatusFromAttributes(attributes);\n\n  if (inferredStatus) {\n    return inferredStatus;\n  }\n\n  // We default to setting the spans status to ok.\n  if (status && status.code === SpanStatusCode.UNSET) {\n    return { code: SPAN_STATUS_OK };\n  } else {\n    return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n  }\n}\n\nfunction inferStatusFromAttributes(attributes: SpanAttributes): SpanStatus | undefined {\n  // If the span status is UNSET, we try to infer it from HTTP or GRPC status codes.\n\n  const httpCodeAttribute = attributes[SEMATTRS_HTTP_STATUS_CODE];\n  const grpcCodeAttribute = attributes[SEMATTRS_RPC_GRPC_STATUS_CODE];\n\n  const numberHttpCode =\n    typeof httpCodeAttribute === 'number'\n      ? httpCodeAttribute\n      : typeof httpCodeAttribute === 'string'\n        ? parseInt(httpCodeAttribute)\n        : undefined;\n\n  if (typeof numberHttpCode === 'number') {\n    return getSpanStatusFromHttpCode(numberHttpCode);\n  }\n\n  if (typeof grpcCodeAttribute === 'string') {\n    return { code: SPAN_STATUS_ERROR, message: canonicalGrpcErrorCodesMap[grpcCodeAttribute] || 'unknown_error' };\n  }\n\n  return undefined;\n}\n","import type { Span } from '@opentelemetry/api';\nimport { SpanKind } from '@opentelemetry/api';\nimport type { ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport { SEMATTRS_HTTP_STATUS_CODE } from '@opentelemetry/semantic-conventions';\nimport {\n  captureEvent,\n  getCapturedScopesOnSpan,\n  getDynamicSamplingContextFromSpan,\n  getMetricSummaryJsonForSpan,\n  timedEventsToMeasurements,\n} from '@sentry/core';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  getStatusMessage,\n  spanTimeInputToSeconds,\n} from '@sentry/core';\nimport type { SpanJSON, SpanOrigin, TraceContext, TransactionEvent, TransactionSource } from '@sentry/types';\nimport { dropUndefinedKeys, logger } from '@sentry/utils';\nimport { SENTRY_TRACE_STATE_PARENT_SPAN_ID } from './constants';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE } from './semanticAttributes';\nimport { getRequestSpanData } from './utils/getRequestSpanData';\nimport type { SpanNode } from './utils/groupSpansWithParents';\nimport { getLocalParentId } from './utils/groupSpansWithParents';\nimport { groupSpansWithParents } from './utils/groupSpansWithParents';\nimport { mapStatus } from './utils/mapStatus';\nimport { parseSpanDescription } from './utils/parseSpanDescription';\n\ntype SpanNodeCompleted = SpanNode & { span: ReadableSpan };\n\nconst MAX_SPAN_COUNT = 1000;\nconst DEFAULT_TIMEOUT = 300; // 5 min\n\n/**\n * A Sentry-specific exporter that converts OpenTelemetry Spans to Sentry Spans & Transactions.\n */\nexport class SentrySpanExporter {\n  private _flushTimeout: ReturnType<typeof setTimeout> | undefined;\n  private _finishedSpans: ReadableSpan[];\n  private _timeout: number;\n\n  public constructor(options?: { timeout?: number }) {\n    this._finishedSpans = [];\n    this._timeout = options?.timeout || DEFAULT_TIMEOUT;\n  }\n\n  /** Export a single span. */\n  public export(span: ReadableSpan): void {\n    this._finishedSpans.push(span);\n\n    // If the span has a local parent ID, we don't need to export anything just yet\n    if (getLocalParentId(span)) {\n      const openSpanCount = this._finishedSpans.length;\n      DEBUG_BUILD && logger.log(`SpanExporter has ${openSpanCount} unsent spans remaining`);\n      this._cleanupOldSpans();\n      return;\n    }\n\n    this._clearTimeout();\n\n    // If we got a parent span, we try to send the span tree\n    // Wait a tick for this, to ensure we avoid race conditions\n    this._flushTimeout = setTimeout(() => {\n      this.flush();\n    }, 1);\n  }\n\n  /** Try to flush any pending spans immediately. */\n  public flush(): void {\n    this._clearTimeout();\n\n    const openSpanCount = this._finishedSpans.length;\n\n    const remainingSpans = maybeSend(this._finishedSpans);\n\n    const remainingOpenSpanCount = remainingSpans.length;\n    const sentSpanCount = openSpanCount - remainingOpenSpanCount;\n\n    DEBUG_BUILD &&\n      logger.log(`SpanExporter exported ${sentSpanCount} spans, ${remainingOpenSpanCount} unsent spans remaining`);\n\n    this._cleanupOldSpans(remainingSpans);\n  }\n\n  /** Clear the exporter. */\n  public clear(): void {\n    this._finishedSpans = [];\n    this._clearTimeout();\n  }\n\n  /** Clear the flush timeout. */\n  private _clearTimeout(): void {\n    if (this._flushTimeout) {\n      clearTimeout(this._flushTimeout);\n      this._flushTimeout = undefined;\n    }\n  }\n\n  /**\n   * Remove any span that is older than 5min.\n   * We do this to avoid leaking memory.\n   */\n  private _cleanupOldSpans(spans = this._finishedSpans): void {\n    this._finishedSpans = spans.filter(span => {\n      const shouldDrop = shouldCleanupSpan(span, this._timeout);\n      DEBUG_BUILD &&\n        shouldDrop &&\n        logger.log(\n          `SpanExporter dropping span ${span.name} (${\n            span.spanContext().spanId\n          }) because it is pending for more than 5 minutes.`,\n        );\n      return !shouldDrop;\n    });\n  }\n}\n\n/**\n * Send the given spans, but only if they are part of a finished transaction.\n *\n * Returns the unsent spans.\n * Spans remain unsent when their parent span is not yet finished.\n * This will happen regularly, as child spans are generally finished before their parents.\n * But it _could_ also happen because, for whatever reason, a parent span was lost.\n * In this case, we'll eventually need to clean this up.\n */\nfunction maybeSend(spans: ReadableSpan[]): ReadableSpan[] {\n  const grouped = groupSpansWithParents(spans);\n  const remaining = new Set(grouped);\n\n  const rootNodes = getCompletedRootNodes(grouped);\n\n  rootNodes.forEach(root => {\n    remaining.delete(root);\n    const span = root.span;\n    const transactionEvent = createTransactionForOtelSpan(span);\n\n    // We'll recursively add all the child spans to this array\n    const spans = transactionEvent.spans || [];\n\n    root.children.forEach(child => {\n      createAndFinishSpanForOtelSpan(child, spans, remaining);\n    });\n\n    // spans.sort() mutates the array, but we do not use this anymore after this point\n    // so we can safely mutate it here\n    transactionEvent.spans =\n      spans.length > MAX_SPAN_COUNT\n        ? spans.sort((a, b) => a.start_timestamp - b.start_timestamp).slice(0, MAX_SPAN_COUNT)\n        : spans;\n\n    const measurements = timedEventsToMeasurements(span.events);\n    if (measurements) {\n      transactionEvent.measurements = measurements;\n    }\n\n    captureEvent(transactionEvent);\n  });\n\n  return Array.from(remaining)\n    .map(node => node.span)\n    .filter((span): span is ReadableSpan => !!span);\n}\n\nfunction nodeIsCompletedRootNode(node: SpanNode): node is SpanNodeCompleted {\n  return !!node.span && !node.parentNode;\n}\n\nfunction getCompletedRootNodes(nodes: SpanNode[]): SpanNodeCompleted[] {\n  return nodes.filter(nodeIsCompletedRootNode);\n}\n\nfunction shouldCleanupSpan(span: ReadableSpan, maxStartTimeOffsetSeconds: number): boolean {\n  const cutoff = Date.now() / 1000 - maxStartTimeOffsetSeconds;\n  return spanTimeInputToSeconds(span.startTime) < cutoff;\n}\n\nfunction parseSpan(span: ReadableSpan): { op?: string; origin?: SpanOrigin; source?: TransactionSource } {\n  const attributes = span.attributes;\n\n  const origin = attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined;\n  const op = attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] as string | undefined;\n  const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] as TransactionSource | undefined;\n\n  return { origin, op, source };\n}\n\nfunction createTransactionForOtelSpan(span: ReadableSpan): TransactionEvent {\n  const { op, description, data, origin = 'manual', source } = getSpanData(span);\n  const capturedSpanScopes = getCapturedScopesOnSpan(span as unknown as Span);\n\n  const sampleRate = span.attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] as number | undefined;\n\n  const attributes = dropUndefinedKeys({\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n    [SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE]: sampleRate,\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: op,\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: origin,\n    ...data,\n    ...removeSentryAttributes(span.attributes),\n  });\n\n  const { traceId: trace_id, spanId: span_id } = span.spanContext();\n\n  const parentSpanIdFromTraceState = span.spanContext().traceState?.get(SENTRY_TRACE_STATE_PARENT_SPAN_ID);\n\n  // If parentSpanIdFromTraceState is defined at all, we want it to take presedence\n  // In that case, an empty string should be interpreted as \"no parent span id\",\n  // even if `span.parentSpanId` is set\n  // this is the case when we are starting a new trace, where we have a virtual span based on the propagationContext\n  // We only want to continue the traceId in this case, but ignore the parent span\n  const parent_span_id =\n    typeof parentSpanIdFromTraceState === 'string' ? parentSpanIdFromTraceState || undefined : span.parentSpanId;\n\n  const status = mapStatus(span);\n\n  const traceContext: TraceContext = dropUndefinedKeys({\n    parent_span_id,\n    span_id,\n    trace_id,\n    data: attributes,\n    origin,\n    op,\n    status: getStatusMessage(status), // As per protocol, span status is allowed to be undefined\n  });\n\n  const transactionEvent: TransactionEvent = {\n    contexts: {\n      trace: traceContext,\n      otel: {\n        resource: span.resource.attributes,\n      },\n    },\n    spans: [],\n    start_timestamp: spanTimeInputToSeconds(span.startTime),\n    timestamp: spanTimeInputToSeconds(span.endTime),\n    transaction: description,\n    type: 'transaction',\n    sdkProcessingMetadata: {\n      ...dropUndefinedKeys({\n        capturedSpanScope: capturedSpanScopes.scope,\n        capturedSpanIsolationScope: capturedSpanScopes.isolationScope,\n        sampleRate,\n        dynamicSamplingContext: getDynamicSamplingContextFromSpan(span as unknown as Span),\n      }),\n    },\n    ...(source && {\n      transaction_info: {\n        source,\n      },\n    }),\n    _metrics_summary: getMetricSummaryJsonForSpan(span as unknown as Span),\n  };\n\n  return transactionEvent;\n}\n\nfunction createAndFinishSpanForOtelSpan(node: SpanNode, spans: SpanJSON[], remaining: Set<SpanNode>): void {\n  remaining.delete(node);\n  const span = node.span;\n\n  const shouldDrop = !span;\n\n  // If this span should be dropped, we still want to create spans for the children of this\n  if (shouldDrop) {\n    node.children.forEach(child => {\n      createAndFinishSpanForOtelSpan(child, spans, remaining);\n    });\n    return;\n  }\n\n  const span_id = span.spanContext().spanId;\n  const trace_id = span.spanContext().traceId;\n\n  const { attributes, startTime, endTime, parentSpanId } = span;\n\n  const { op, description, data, origin = 'manual' } = getSpanData(span);\n  const allData = dropUndefinedKeys({\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: origin,\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: op,\n    ...removeSentryAttributes(attributes),\n    ...data,\n  });\n\n  const status = mapStatus(span);\n\n  const spanJSON: SpanJSON = dropUndefinedKeys({\n    span_id,\n    trace_id,\n    data: allData,\n    description,\n    parent_span_id: parentSpanId,\n    start_timestamp: spanTimeInputToSeconds(startTime),\n    // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n    timestamp: spanTimeInputToSeconds(endTime) || undefined,\n    status: getStatusMessage(status), // As per protocol, span status is allowed to be undefined\n    op,\n    origin,\n    _metrics_summary: getMetricSummaryJsonForSpan(span as unknown as Span),\n    measurements: timedEventsToMeasurements(span.events),\n  });\n\n  spans.push(spanJSON);\n\n  node.children.forEach(child => {\n    createAndFinishSpanForOtelSpan(child, spans, remaining);\n  });\n}\n\nfunction getSpanData(span: ReadableSpan): {\n  data: Record<string, unknown>;\n  op?: string;\n  description: string;\n  source?: TransactionSource;\n  origin?: SpanOrigin;\n} {\n  const { op: definedOp, source: definedSource, origin } = parseSpan(span);\n  const { op: inferredOp, description, source: inferredSource, data: inferredData } = parseSpanDescription(span);\n\n  const op = definedOp || inferredOp;\n  const source = definedSource || inferredSource;\n\n  const data = { ...inferredData, ...getData(span) };\n\n  return {\n    op,\n    description,\n    source,\n    origin,\n    data,\n  };\n}\n\n/**\n * Remove custom `sentry.` attribtues we do not need to send.\n * These are more carrier attributes we use inside of the SDK, we do not need to send them to the API.\n */\nfunction removeSentryAttributes(data: Record<string, unknown>): Record<string, unknown> {\n  const cleanedData = { ...data };\n\n  /* eslint-disable @typescript-eslint/no-dynamic-delete */\n  delete cleanedData[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE];\n  delete cleanedData[SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE];\n  /* eslint-enable @typescript-eslint/no-dynamic-delete */\n\n  return cleanedData;\n}\n\nfunction getData(span: ReadableSpan): Record<string, unknown> {\n  const attributes = span.attributes;\n  const data: Record<string, unknown> = {};\n\n  if (span.kind !== SpanKind.INTERNAL) {\n    data['otel.kind'] = SpanKind[span.kind];\n  }\n\n  if (attributes[SEMATTRS_HTTP_STATUS_CODE]) {\n    const statusCode = attributes[SEMATTRS_HTTP_STATUS_CODE] as string;\n    data['http.response.status_code'] = statusCode;\n  }\n\n  const requestData = getRequestSpanData(span);\n\n  if (requestData.url) {\n    data.url = requestData.url;\n  }\n\n  if (requestData['http.query']) {\n    data['http.query'] = requestData['http.query'].slice(1);\n  }\n  if (requestData['http.fragment']) {\n    data['http.fragment'] = requestData['http.fragment'].slice(1);\n  }\n\n  return data;\n}\n","import type { Context } from '@opentelemetry/api';\nimport { ROOT_CONTEXT, trace } from '@opentelemetry/api';\nimport type { ReadableSpan, Span, SpanProcessor as SpanProcessorInterface } from '@opentelemetry/sdk-trace-base';\nimport {\n  addChildSpanToSpan,\n  getClient,\n  getDefaultCurrentScope,\n  getDefaultIsolationScope,\n  logSpanEnd,\n  logSpanStart,\n  setCapturedScopesOnSpan,\n} from '@sentry/core';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE } from './semanticAttributes';\nimport { SentrySpanExporter } from './spanExporter';\nimport { getScopesFromContext } from './utils/contextData';\nimport { setIsSetup } from './utils/setupCheck';\n\nfunction onSpanStart(span: Span, parentContext: Context): void {\n  // This is a reliable way to get the parent span - because this is exactly how the parent is identified in the OTEL SDK\n  const parentSpan = trace.getSpan(parentContext);\n\n  let scopes = getScopesFromContext(parentContext);\n\n  // We need access to the parent span in order to be able to move up the span tree for breadcrumbs\n  if (parentSpan && !parentSpan.spanContext().isRemote) {\n    addChildSpanToSpan(parentSpan, span);\n  }\n\n  // We need this in the span exporter\n  if (parentSpan && parentSpan.spanContext().isRemote) {\n    span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE, true);\n  }\n\n  // The root context does not have scopes stored, so we check for this specifically\n  // As fallback we attach the global scopes\n  if (parentContext === ROOT_CONTEXT) {\n    scopes = {\n      scope: getDefaultCurrentScope(),\n      isolationScope: getDefaultIsolationScope(),\n    };\n  }\n\n  // We need the scope at time of span creation in order to apply it to the event when the span is finished\n  if (scopes) {\n    setCapturedScopesOnSpan(span, scopes.scope, scopes.isolationScope);\n  }\n\n  logSpanStart(span);\n\n  const client = getClient();\n  client?.emit('spanStart', span);\n}\n\nfunction onSpanEnd(span: Span): void {\n  logSpanEnd(span);\n\n  const client = getClient();\n  client?.emit('spanEnd', span);\n}\n\n/**\n * Converts OpenTelemetry Spans to Sentry Spans and sends them to Sentry via\n * the Sentry SDK.\n */\nexport class SentrySpanProcessor implements SpanProcessorInterface {\n  private _exporter: SentrySpanExporter;\n\n  public constructor(options?: { timeout?: number }) {\n    setIsSetup('SentrySpanProcessor');\n    this._exporter = new SentrySpanExporter(options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async forceFlush(): Promise<void> {\n    this._exporter.flush();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async shutdown(): Promise<void> {\n    this._exporter.clear();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public onStart(span: Span, parentContext: Context): void {\n    onSpanStart(span, parentContext);\n  }\n\n  /** @inheritDoc */\n  public onEnd(span: Span & ReadableSpan): void {\n    onSpanEnd(span);\n\n    this._exporter.export(span);\n  }\n}\n","import type { Attributes, Context, Span, TraceState as TraceStateInterface } from '@opentelemetry/api';\nimport { SpanKind } from '@opentelemetry/api';\nimport { isSpanContextValid, trace } from '@opentelemetry/api';\nimport { TraceState } from '@opentelemetry/core';\nimport type { Sampler, SamplingResult } from '@opentelemetry/sdk-trace-base';\nimport { SamplingDecision } from '@opentelemetry/sdk-trace-base';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE,\n  hasTracingEnabled,\n  sampleSpan,\n} from '@sentry/core';\nimport type { Client, SpanAttributes } from '@sentry/types';\nimport { logger } from '@sentry/utils';\nimport { SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING, SENTRY_TRACE_STATE_URL } from './constants';\n\nimport { SEMATTRS_HTTP_METHOD, SEMATTRS_HTTP_URL } from '@opentelemetry/semantic-conventions';\nimport { DEBUG_BUILD } from './debug-build';\nimport { getPropagationContextFromSpan } from './propagator';\nimport { getSamplingDecision } from './utils/getSamplingDecision';\nimport { inferSpanData } from './utils/parseSpanDescription';\nimport { setIsSetup } from './utils/setupCheck';\n\n/**\n * A custom OTEL sampler that uses Sentry sampling rates to make its decision\n */\nexport class SentrySampler implements Sampler {\n  private _client: Client;\n\n  public constructor(client: Client) {\n    this._client = client;\n    setIsSetup('SentrySampler');\n  }\n\n  /** @inheritDoc */\n  public shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    spanAttributes: SpanAttributes,\n    _links: unknown,\n  ): SamplingResult {\n    const options = this._client.getOptions();\n\n    const parentSpan = trace.getSpan(context);\n    const parentContext = parentSpan?.spanContext();\n\n    if (!hasTracingEnabled(options)) {\n      return wrapSamplingDecision({ decision: undefined, context, spanAttributes });\n    }\n\n    // If we have a http.client span that has no local parent, we never want to sample it\n    // but we want to leave downstream sampling decisions up to the server\n    if (\n      spanKind === SpanKind.CLIENT &&\n      spanAttributes[SEMATTRS_HTTP_METHOD] &&\n      (!parentSpan || parentContext?.isRemote)\n    ) {\n      return wrapSamplingDecision({ decision: undefined, context, spanAttributes });\n    }\n\n    const parentSampled = parentSpan ? getParentSampled(parentSpan, traceId, spanName) : undefined;\n\n    // We want to pass the inferred name & attributes to the sampler method\n    const {\n      description: inferredSpanName,\n      data: inferredAttributes,\n      op,\n    } = inferSpanData(spanName, spanAttributes, spanKind);\n\n    const mergedAttributes = {\n      ...inferredAttributes,\n      ...spanAttributes,\n    };\n\n    if (op) {\n      mergedAttributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] = op;\n    }\n\n    const mutableSamplingDecision = { decision: true };\n    this._client.emit(\n      'beforeSampling',\n      {\n        spanAttributes: mergedAttributes,\n        spanName: inferredSpanName,\n        parentSampled: parentSampled,\n        parentContext: parentContext,\n      },\n      mutableSamplingDecision,\n    );\n    if (!mutableSamplingDecision.decision) {\n      return wrapSamplingDecision({ decision: undefined, context, spanAttributes });\n    }\n\n    const [sampled, sampleRate] = sampleSpan(options, {\n      name: inferredSpanName,\n      attributes: mergedAttributes,\n      transactionContext: {\n        name: inferredSpanName,\n        parentSampled,\n      },\n      parentSampled,\n    });\n\n    const attributes: Attributes = {\n      [SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE]: sampleRate,\n    };\n\n    const method = `${spanAttributes[SEMATTRS_HTTP_METHOD]}`.toUpperCase();\n    if (method === 'OPTIONS' || method === 'HEAD') {\n      DEBUG_BUILD && logger.log(`[Tracing] Not sampling span because HTTP method is '${method}' for ${spanName}`);\n\n      return {\n        ...wrapSamplingDecision({ decision: SamplingDecision.NOT_RECORD, context, spanAttributes }),\n        attributes,\n      };\n    }\n\n    if (!sampled) {\n      return {\n        ...wrapSamplingDecision({ decision: SamplingDecision.NOT_RECORD, context, spanAttributes }),\n        attributes,\n      };\n    }\n    return {\n      ...wrapSamplingDecision({ decision: SamplingDecision.RECORD_AND_SAMPLED, context, spanAttributes }),\n      attributes,\n    };\n  }\n\n  /** Returns the sampler name or short description with the configuration. */\n  public toString(): string {\n    return 'SentrySampler';\n  }\n}\n\nfunction getParentRemoteSampled(parentSpan: Span): boolean | undefined {\n  const traceId = parentSpan.spanContext().traceId;\n  const traceparentData = getPropagationContextFromSpan(parentSpan);\n\n  // Only inherit sampled if `traceId` is the same\n  return traceparentData && traceId === traceparentData.traceId ? traceparentData.sampled : undefined;\n}\n\nfunction getParentSampled(parentSpan: Span, traceId: string, spanName: string): boolean | undefined {\n  const parentContext = parentSpan.spanContext();\n\n  // Only inherit sample rate if `traceId` is the same\n  // Note for testing: `isSpanContextValid()` checks the format of the traceId/spanId, so we need to pass valid ones\n  if (isSpanContextValid(parentContext) && parentContext.traceId === traceId) {\n    if (parentContext.isRemote) {\n      const parentSampled = getParentRemoteSampled(parentSpan);\n      DEBUG_BUILD &&\n        logger.log(`[Tracing] Inheriting remote parent's sampled decision for ${spanName}: ${parentSampled}`);\n      return parentSampled;\n    }\n\n    const parentSampled = getSamplingDecision(parentContext);\n    DEBUG_BUILD && logger.log(`[Tracing] Inheriting parent's sampled decision for ${spanName}: ${parentSampled}`);\n    return parentSampled;\n  }\n\n  return undefined;\n}\n\n/**\n * Wrap a sampling decision with data that Sentry needs to work properly with it.\n * If you pass `decision: undefined`, it will be treated as `NOT_RECORDING`, but in contrast to passing `NOT_RECORDING`\n * it will not propagate this decision to downstream Sentry SDKs.\n */\nexport function wrapSamplingDecision({\n  decision,\n  context,\n  spanAttributes,\n}: { decision: SamplingDecision | undefined; context: Context; spanAttributes: SpanAttributes }): SamplingResult {\n  const traceState = getBaseTraceState(context, spanAttributes);\n\n  // If the decision is undefined, we treat it as NOT_RECORDING, but we don't propagate this decision to downstream SDKs\n  // Which is done by not setting `SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING` traceState\n  if (decision == undefined) {\n    return { decision: SamplingDecision.NOT_RECORD, traceState };\n  }\n\n  if (decision === SamplingDecision.NOT_RECORD) {\n    return { decision, traceState: traceState.set(SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING, '1') };\n  }\n\n  return { decision, traceState };\n}\n\nfunction getBaseTraceState(context: Context, spanAttributes: SpanAttributes): TraceStateInterface {\n  const parentSpan = trace.getSpan(context);\n  const parentContext = parentSpan?.spanContext();\n\n  let traceState = parentContext?.traceState || new TraceState();\n\n  // We always keep the URL on the trace state, so we can access it in the propagator\n  const url = spanAttributes[SEMATTRS_HTTP_URL];\n  if (url && typeof url === 'string') {\n    traceState = traceState.set(SENTRY_TRACE_STATE_URL, url);\n  }\n\n  return traceState;\n}\n","import type { Instrumentation } from '@opentelemetry/instrumentation';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\n\n/**\n * This method takes an OpenTelemetry instrumentation or\n * array of instrumentations and registers them with OpenTelemetry.\n */\nexport function addOpenTelemetryInstrumentation(...instrumentations: Instrumentation[]): void {\n  registerInstrumentations({\n    instrumentations,\n  });\n}\n","import { context } from '@opentelemetry/api';\nimport { getScopesFromContext } from '@sentry/opentelemetry';\nimport type { Scope } from '@sentry/types';\n\n/**\n * Update the active isolation scope.\n * Should be used with caution!\n */\nexport function setIsolationScope(isolationScope: Scope): void {\n  const scopes = getScopesFromContext(context.active());\n  if (scopes) {\n    scopes.isolationScope = isolationScope;\n  }\n}\n","import type { Span } from '@opentelemetry/api';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '@sentry/core';\nimport type { SpanOrigin } from '@sentry/types';\n\n/** Adds an origin to an OTEL Span. */\nexport function addOriginToSpan(span: Span, origin: SpanOrigin): void {\n  span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, origin);\n}\n","import type { RequestOptions } from 'node:http';\n\n/** Build a full URL from request options. */\nexport function getRequestUrl(requestOptions: RequestOptions): string {\n  const protocol = requestOptions.protocol || '';\n  const hostname = requestOptions.hostname || requestOptions.host || '';\n  // Don't log standard :80 (http) and :443 (https) ports to reduce the noise\n  // Also don't add port if the hostname already includes a port\n  const port =\n    !requestOptions.port || requestOptions.port === 80 || requestOptions.port === 443 || /^(.*):(\\d+)$/.test(hostname)\n      ? ''\n      : `:${requestOptions.port}`;\n  const path = requestOptions.path ? requestOptions.path : '/';\n  return `${protocol}//${hostname}${port}${path}`;\n}\n","import type { ClientRequest, IncomingMessage, RequestOptions, ServerResponse } from 'node:http';\nimport type { Span } from '@opentelemetry/api';\nimport { HttpInstrumentation } from '@opentelemetry/instrumentation-http';\nimport { addOpenTelemetryInstrumentation } from '@sentry/opentelemetry';\n\nimport {\n  addBreadcrumb,\n  defineIntegration,\n  getCapturedScopesOnSpan,\n  getCurrentScope,\n  getIsolationScope,\n  isSentryRequestUrl,\n  setCapturedScopesOnSpan,\n} from '@sentry/core';\nimport { getClient } from '@sentry/opentelemetry';\nimport type { IntegrationFn, SanitizedRequestData } from '@sentry/types';\n\nimport { getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment } from '@sentry/utils';\nimport type { NodeClient } from '../sdk/client';\nimport { setIsolationScope } from '../sdk/scope';\nimport type { HTTPModuleRequestIncomingMessage } from '../transports/http-module';\nimport { addOriginToSpan } from '../utils/addOriginToSpan';\nimport { getRequestUrl } from '../utils/getRequestUrl';\n\nconst INTEGRATION_NAME = 'Http';\n\ninterface HttpOptions {\n  /**\n   * Whether breadcrumbs should be recorded for requests.\n   * Defaults to true\n   */\n  breadcrumbs?: boolean;\n\n  /**\n   * Do not capture spans or breadcrumbs for outgoing HTTP requests to URLs where the given callback returns `true`.\n   * This controls both span & breadcrumb creation - spans will be non recording if tracing is disabled.\n   *\n   * The `url` param contains the entire URL, including query string (if any), protocol, host, etc. of the outgoing request.\n   * For example: `'https://someService.com/users/details?id=123'`\n   *\n   * The `request` param contains the original {@type RequestOptions} object used to make the outgoing request.\n   * You can use it to filter on additional properties like method, headers, etc.\n   */\n  ignoreOutgoingRequests?: (url: string, request: RequestOptions) => boolean;\n\n  /**\n   * Do not capture spans or breadcrumbs for incoming HTTP requests to URLs where the given callback returns `true`.\n   * This controls both span & breadcrumb creation - spans will be non recording if tracing is disabled.\n   *\n   * The `urlPath` param consists of the URL path and query string (if any) of the incoming request.\n   * For example: `'/users/details?id=123'`\n   *\n   * The `request` param contains the original {@type IncomingMessage} object of the incoming request.\n   * You can use it to filter on additional properties like method, headers, etc.\n   */\n  ignoreIncomingRequests?: (urlPath: string, request: IncomingMessage) => boolean;\n\n  /**\n   * Additional instrumentation options that are passed to the underlying HttpInstrumentation.\n   */\n  instrumentation?: {\n    requestHook?: (span: Span, req: ClientRequest | HTTPModuleRequestIncomingMessage) => void;\n    responseHook?: (span: Span, response: HTTPModuleRequestIncomingMessage | ServerResponse) => void;\n    applyCustomAttributesOnSpan?: (\n      span: Span,\n      request: ClientRequest | HTTPModuleRequestIncomingMessage,\n      response: HTTPModuleRequestIncomingMessage | ServerResponse,\n    ) => void;\n\n    /**\n     * You can pass any configuration through to the underlying instrumention.\n     * Note that there are no semver guarantees for this!\n     */\n    _experimentalConfig?: ConstructorParameters<typeof HttpInstrumentation>[0];\n  };\n\n  /** Allows to pass a custom version of HttpInstrumentation. We use this for Next.js. */\n  _instrumentation?: typeof HttpInstrumentation;\n}\n\nlet _httpOptions: HttpOptions = {};\nlet _httpInstrumentation: HttpInstrumentation | undefined;\n\n/**\n * Instrument the HTTP module.\n * This can only be instrumented once! If this called again later, we just update the options.\n */\nexport const instrumentHttp = Object.assign(\n  function (): void {\n    if (_httpInstrumentation) {\n      return;\n    }\n\n    const _InstrumentationClass = _httpOptions._instrumentation || HttpInstrumentation;\n\n    _httpInstrumentation = new _InstrumentationClass({\n      ..._httpOptions.instrumentation?._experimentalConfig,\n      ignoreOutgoingRequestHook: request => {\n        const url = getRequestUrl(request);\n\n        if (!url) {\n          return false;\n        }\n\n        if (isSentryRequestUrl(url, getClient())) {\n          return true;\n        }\n\n        const _ignoreOutgoingRequests = _httpOptions.ignoreOutgoingRequests;\n        if (_ignoreOutgoingRequests && _ignoreOutgoingRequests(url, request)) {\n          return true;\n        }\n\n        return false;\n      },\n\n      ignoreIncomingRequestHook: request => {\n        // request.url is the only property that holds any information about the url\n        // it only consists of the URL path and query string (if any)\n        const urlPath = request.url;\n\n        const method = request.method?.toUpperCase();\n        // We do not capture OPTIONS/HEAD requests as transactions\n        if (method === 'OPTIONS' || method === 'HEAD') {\n          return true;\n        }\n\n        const _ignoreIncomingRequests = _httpOptions.ignoreIncomingRequests;\n        if (urlPath && _ignoreIncomingRequests && _ignoreIncomingRequests(urlPath, request)) {\n          return true;\n        }\n\n        return false;\n      },\n\n      requireParentforOutgoingSpans: false,\n      requireParentforIncomingSpans: false,\n      requestHook: (span, req) => {\n        addOriginToSpan(span, 'auto.http.otel.http');\n\n        // both, incoming requests and \"client\" requests made within the app trigger the requestHook\n        // we only want to isolate and further annotate incoming requests (IncomingMessage)\n        if (_isClientRequest(req)) {\n          _httpOptions.instrumentation?.requestHook?.(span, req);\n          return;\n        }\n\n        const scopes = getCapturedScopesOnSpan(span);\n\n        const isolationScope = (scopes.isolationScope || getIsolationScope()).clone();\n        const scope = scopes.scope || getCurrentScope();\n\n        // Update the isolation scope, isolate this request\n        isolationScope.setSDKProcessingMetadata({ request: req });\n\n        const client = getClient<NodeClient>();\n        if (client && client.getOptions().autoSessionTracking) {\n          isolationScope.setRequestSession({ status: 'ok' });\n        }\n        setIsolationScope(isolationScope);\n        setCapturedScopesOnSpan(span, scope, isolationScope);\n\n        // attempt to update the scope's `transactionName` based on the request URL\n        // Ideally, framework instrumentations coming after the HttpInstrumentation\n        // update the transactionName once we get a parameterized route.\n        const httpMethod = (req.method || 'GET').toUpperCase();\n        const httpTarget = stripUrlQueryAndFragment(req.url || '/');\n\n        const bestEffortTransactionName = `${httpMethod} ${httpTarget}`;\n\n        isolationScope.setTransactionName(bestEffortTransactionName);\n\n        _httpOptions.instrumentation?.requestHook?.(span, req);\n      },\n      responseHook: (span, res) => {\n        const client = getClient<NodeClient>();\n        if (client && client.getOptions().autoSessionTracking) {\n          setImmediate(() => {\n            client['_captureRequestSession']();\n          });\n        }\n\n        _httpOptions.instrumentation?.responseHook?.(span, res);\n      },\n      applyCustomAttributesOnSpan: (\n        span: Span,\n        request: ClientRequest | HTTPModuleRequestIncomingMessage,\n        response: HTTPModuleRequestIncomingMessage | ServerResponse,\n      ) => {\n        const _breadcrumbs = typeof _httpOptions.breadcrumbs === 'undefined' ? true : _httpOptions.breadcrumbs;\n        if (_breadcrumbs) {\n          _addRequestBreadcrumb(request, response);\n        }\n\n        _httpOptions.instrumentation?.applyCustomAttributesOnSpan?.(span, request, response);\n      },\n    });\n\n    addOpenTelemetryInstrumentation(_httpInstrumentation);\n  },\n  {\n    id: INTEGRATION_NAME,\n  },\n);\n\nconst _httpIntegration = ((options: HttpOptions = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      _httpOptions = options;\n      instrumentHttp();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * The http integration instruments Node's internal http and https modules.\n * It creates breadcrumbs and spans for outgoing HTTP requests which will be attached to the currently active span.\n */\nexport const httpIntegration = defineIntegration(_httpIntegration);\n\n/** Add a breadcrumb for outgoing requests. */\nfunction _addRequestBreadcrumb(\n  request: ClientRequest | HTTPModuleRequestIncomingMessage,\n  response: HTTPModuleRequestIncomingMessage | ServerResponse,\n): void {\n  // Only generate breadcrumbs for outgoing requests\n  if (!_isClientRequest(request)) {\n    return;\n  }\n\n  const data = getBreadcrumbData(request);\n  addBreadcrumb(\n    {\n      category: 'http',\n      data: {\n        status_code: response.statusCode,\n        ...data,\n      },\n      type: 'http',\n    },\n    {\n      event: 'response',\n      request,\n      response,\n    },\n  );\n}\n\nfunction getBreadcrumbData(request: ClientRequest): Partial<SanitizedRequestData> {\n  try {\n    // `request.host` does not contain the port, but the host header does\n    const host = request.getHeader('host') || request.host;\n    const url = new URL(request.path, `${request.protocol}//${host}`);\n    const parsedUrl = parseUrl(url.toString());\n\n    const data: Partial<SanitizedRequestData> = {\n      url: getSanitizedUrlString(parsedUrl),\n      'http.method': request.method || 'GET',\n    };\n\n    if (parsedUrl.search) {\n      data['http.query'] = parsedUrl.search;\n    }\n    if (parsedUrl.hash) {\n      data['http.fragment'] = parsedUrl.hash;\n    }\n\n    return data;\n  } catch {\n    return {};\n  }\n}\n\n/**\n * Determines if @param req is a ClientRequest, meaning the request was created within the express app\n * and it's an outgoing request.\n * Checking for properties instead of using `instanceOf` to avoid importing the request classes.\n */\nfunction _isClientRequest(req: ClientRequest | HTTPModuleRequestIncomingMessage): req is ClientRequest {\n  return 'outputData' in req && 'outputSize' in req && !('client' in req) && !('statusCode' in req);\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { parseSemver } from '@sentry/utils';\n\nexport const NODE_VERSION = parseSemver(process.versions.node) as { major: number; minor: number; patch: number };\nexport const NODE_MAJOR = NODE_VERSION.major;\n","import type { Span } from '@opentelemetry/api';\nimport { trace } from '@opentelemetry/api';\nimport { context, propagation } from '@opentelemetry/api';\nimport { addBreadcrumb, defineIntegration, getCurrentScope, hasTracingEnabled } from '@sentry/core';\nimport {\n  addOpenTelemetryInstrumentation,\n  generateSpanContextForPropagationContext,\n  getPropagationContextFromSpan,\n} from '@sentry/opentelemetry';\nimport type { IntegrationFn, SanitizedRequestData } from '@sentry/types';\nimport { getSanitizedUrlString, logger, parseUrl } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { NODE_MAJOR } from '../nodeVersion';\n\nimport type { FetchInstrumentation } from 'opentelemetry-instrumentation-fetch-node';\n\nimport { addOriginToSpan } from '../utils/addOriginToSpan';\n\ninterface FetchRequest {\n  method: string;\n  origin: string;\n  path: string;\n  headers: string | string[];\n}\n\ninterface FetchResponse {\n  headers: Buffer[];\n  statusCode: number;\n}\n\ninterface NodeFetchOptions {\n  /**\n   * Whether breadcrumbs should be recorded for requests.\n   * Defaults to true\n   */\n  breadcrumbs?: boolean;\n\n  /**\n   * Do not capture spans or breadcrumbs for outgoing fetch requests to URLs where the given callback returns `true`.\n   * This controls both span & breadcrumb creation - spans will be non recording if tracing is disabled.\n   */\n  ignoreOutgoingRequests?: (url: string) => boolean;\n}\n\nconst _nativeNodeFetchIntegration = ((options: NodeFetchOptions = {}) => {\n  const _breadcrumbs = typeof options.breadcrumbs === 'undefined' ? true : options.breadcrumbs;\n  const _ignoreOutgoingRequests = options.ignoreOutgoingRequests;\n\n  async function getInstrumentation(): Promise<FetchInstrumentation | void> {\n    // Only add NodeFetch if Node >= 18, as previous versions do not support it\n    if (NODE_MAJOR < 18) {\n      DEBUG_BUILD && logger.log('NodeFetch is not supported on Node < 18, skipping instrumentation...');\n      return;\n    }\n\n    try {\n      const pkg = await import('opentelemetry-instrumentation-fetch-node');\n      const { FetchInstrumentation } = pkg;\n\n      class SentryNodeFetchInstrumentation extends FetchInstrumentation {\n        // We extend this method so we have access to request _and_ response for the breadcrumb\n        public onHeaders({ request, response }: { request: FetchRequest; response: FetchResponse }): void {\n          if (_breadcrumbs) {\n            _addRequestBreadcrumb(request, response);\n          }\n\n          return super.onHeaders({ request, response });\n        }\n      }\n\n      return new SentryNodeFetchInstrumentation({\n        ignoreRequestHook: (request: FetchRequest) => {\n          const url = getAbsoluteUrl(request.origin, request.path);\n          const tracingDisabled = !hasTracingEnabled();\n          const shouldIgnore = _ignoreOutgoingRequests && url && _ignoreOutgoingRequests(url);\n\n          if (shouldIgnore) {\n            return true;\n          }\n\n          // If tracing is disabled, we still want to propagate traces\n          // So we do that manually here, matching what the instrumentation does otherwise\n          if (tracingDisabled) {\n            const ctx = context.active();\n            const addedHeaders: Record<string, string> = {};\n\n            // We generate a virtual span context from the active one,\n            // Where we attach the URL to the trace state, so the propagator can pick it up\n            const activeSpan = trace.getSpan(ctx);\n            const propagationContext = activeSpan\n              ? getPropagationContextFromSpan(activeSpan)\n              : getCurrentScope().getPropagationContext();\n\n            const spanContext = generateSpanContextForPropagationContext(propagationContext);\n            // We know that in practice we'll _always_ haven a traceState here\n            spanContext.traceState = spanContext.traceState?.set('sentry.url', url);\n            const ctxWithUrlTraceState = trace.setSpanContext(ctx, spanContext);\n\n            propagation.inject(ctxWithUrlTraceState, addedHeaders);\n\n            const requestHeaders = request.headers;\n            if (Array.isArray(requestHeaders)) {\n              Object.entries(addedHeaders).forEach(headers => requestHeaders.push(...headers));\n            } else {\n              request.headers += Object.entries(addedHeaders)\n                .map(([k, v]) => `${k}: ${v}\\r\\n`)\n                .join('');\n            }\n\n            // Prevent starting a span for this request\n            return true;\n          }\n\n          return false;\n        },\n        onRequest: ({ span }: { span: Span }) => {\n          _updateSpan(span);\n        },\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      } as any);\n    } catch (error) {\n      // Could not load instrumentation\n      DEBUG_BUILD && logger.log('Error while loading NodeFetch instrumentation: \\n', error);\n    }\n  }\n\n  return {\n    name: 'NodeFetch',\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      getInstrumentation().then(instrumentation => {\n        if (instrumentation) {\n          addOpenTelemetryInstrumentation(instrumentation);\n        }\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const nativeNodeFetchIntegration = defineIntegration(_nativeNodeFetchIntegration);\n\n/** Update the span with data we need. */\nfunction _updateSpan(span: Span): void {\n  addOriginToSpan(span, 'auto.http.otel.node_fetch');\n}\n\n/** Add a breadcrumb for outgoing requests. */\nfunction _addRequestBreadcrumb(request: FetchRequest, response: FetchResponse): void {\n  const data = getBreadcrumbData(request);\n\n  addBreadcrumb(\n    {\n      category: 'http',\n      data: {\n        status_code: response.statusCode,\n        ...data,\n      },\n      type: 'http',\n    },\n    {\n      event: 'response',\n      request,\n      response,\n    },\n  );\n}\n\nfunction getBreadcrumbData(request: FetchRequest): Partial<SanitizedRequestData> {\n  try {\n    const url = new URL(request.path, request.origin);\n    const parsedUrl = parseUrl(url.toString());\n\n    const data: Partial<SanitizedRequestData> = {\n      url: getSanitizedUrlString(parsedUrl),\n      'http.method': request.method || 'GET',\n    };\n\n    if (parsedUrl.search) {\n      data['http.query'] = parsedUrl.search;\n    }\n    if (parsedUrl.hash) {\n      data['http.fragment'] = parsedUrl.hash;\n    }\n\n    return data;\n  } catch {\n    return {};\n  }\n}\n\n// Matching the behavior of the base instrumentation\nfunction getAbsoluteUrl(origin: string, path: string = '/'): string {\n  const url = `${origin}`;\n\n  if (origin.endsWith('/') && path.startsWith('/')) {\n    return `${url}${path.slice(1)}`;\n  }\n\n  if (!origin.endsWith('/') && !path.startsWith('/')) {\n    return `${url}/${path.slice(1)}`;\n  }\n\n  return `${url}${path}`;\n}\n","import * as util from 'node:util';\nimport { addBreadcrumb, defineIntegration, getClient } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport { addConsoleInstrumentationHandler, severityLevelFromString } from '@sentry/utils';\n\nconst INTEGRATION_NAME = 'Console';\n\nconst _consoleIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        addBreadcrumb(\n          {\n            category: 'console',\n            level: severityLevelFromString(level),\n            message: util.format.apply(undefined, args),\n          },\n          {\n            input: [...args],\n            level,\n          },\n        );\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Capture console logs as breadcrumbs.\n */\nexport const consoleIntegration = defineIntegration(_consoleIntegration);\n","/* eslint-disable max-lines */\nimport { execFile } from 'node:child_process';\nimport { readFile, readdir } from 'node:fs';\nimport * as os from 'node:os';\nimport { join } from 'node:path';\nimport { promisify } from 'node:util';\nimport { defineIntegration } from '@sentry/core';\nimport type {\n  AppContext,\n  CloudResourceContext,\n  Contexts,\n  CultureContext,\n  DeviceContext,\n  Event,\n  IntegrationFn,\n  OsContext,\n} from '@sentry/types';\n\nexport const readFileAsync = promisify(readFile);\nexport const readDirAsync = promisify(readdir);\n\n// Process enhanced with methods from Node 18, 20, 22 as @types/node\n// is on `14.18.0` to match minimum version requirements of the SDK\ninterface ProcessWithCurrentValues extends NodeJS.Process {\n  availableMemory?(): number;\n}\n\nconst INTEGRATION_NAME = 'Context';\n\ninterface DeviceContextOptions {\n  cpu?: boolean;\n  memory?: boolean;\n}\n\ninterface ContextOptions {\n  app?: boolean;\n  os?: boolean;\n  device?: DeviceContextOptions | boolean;\n  culture?: boolean;\n  cloudResource?: boolean;\n}\n\nconst _nodeContextIntegration = ((options: ContextOptions = {}) => {\n  let cachedContext: Promise<Contexts> | undefined;\n\n  const _options = {\n    app: true,\n    os: true,\n    device: true,\n    culture: true,\n    cloudResource: true,\n    ...options,\n  };\n\n  /** Add contexts to the event. Caches the context so we only look it up once. */\n  async function addContext(event: Event): Promise<Event> {\n    if (cachedContext === undefined) {\n      cachedContext = _getContexts();\n    }\n\n    const updatedContext = _updateContext(await cachedContext);\n\n    event.contexts = {\n      ...event.contexts,\n      app: { ...updatedContext.app, ...event.contexts?.app },\n      os: { ...updatedContext.os, ...event.contexts?.os },\n      device: { ...updatedContext.device, ...event.contexts?.device },\n      culture: { ...updatedContext.culture, ...event.contexts?.culture },\n      cloud_resource: { ...updatedContext.cloud_resource, ...event.contexts?.cloud_resource },\n    };\n\n    return event;\n  }\n\n  /** Get the contexts from node. */\n  async function _getContexts(): Promise<Contexts> {\n    const contexts: Contexts = {};\n\n    if (_options.os) {\n      contexts.os = await getOsContext();\n    }\n\n    if (_options.app) {\n      contexts.app = getAppContext();\n    }\n\n    if (_options.device) {\n      contexts.device = getDeviceContext(_options.device);\n    }\n\n    if (_options.culture) {\n      const culture = getCultureContext();\n\n      if (culture) {\n        contexts.culture = culture;\n      }\n    }\n\n    if (_options.cloudResource) {\n      contexts.cloud_resource = getCloudResourceContext();\n    }\n\n    return contexts;\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      return addContext(event);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Capture context about the environment and the device that the client is running on, to events.\n */\nexport const nodeContextIntegration = defineIntegration(_nodeContextIntegration);\n\n/**\n * Updates the context with dynamic values that can change\n */\nfunction _updateContext(contexts: Contexts): Contexts {\n  // Only update properties if they exist\n\n  if (contexts?.app?.app_memory) {\n    contexts.app.app_memory = process.memoryUsage().rss;\n  }\n\n  if (contexts?.app?.free_memory && typeof (process as ProcessWithCurrentValues).availableMemory === 'function') {\n    const freeMemory = (process as ProcessWithCurrentValues).availableMemory?.();\n    if (freeMemory != null) {\n      contexts.app.free_memory = freeMemory;\n    }\n  }\n\n  if (contexts?.device?.free_memory) {\n    contexts.device.free_memory = os.freemem();\n  }\n\n  return contexts;\n}\n\n/**\n * Returns the operating system context.\n *\n * Based on the current platform, this uses a different strategy to provide the\n * most accurate OS information. Since this might involve spawning subprocesses\n * or accessing the file system, this should only be executed lazily and cached.\n *\n *  - On macOS (Darwin), this will execute the `sw_vers` utility. The context\n *    has a `name`, `version`, `build` and `kernel_version` set.\n *  - On Linux, this will try to load a distribution release from `/etc` and set\n *    the `name`, `version` and `kernel_version` fields.\n *  - On all other platforms, only a `name` and `version` will be returned. Note\n *    that `version` might actually be the kernel version.\n */\nasync function getOsContext(): Promise<OsContext> {\n  const platformId = os.platform();\n  switch (platformId) {\n    case 'darwin':\n      return getDarwinInfo();\n    case 'linux':\n      return getLinuxInfo();\n    default:\n      return {\n        name: PLATFORM_NAMES[platformId] || platformId,\n        version: os.release(),\n      };\n  }\n}\n\nfunction getCultureContext(): CultureContext | undefined {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    if (typeof (process.versions as unknown as any).icu !== 'string') {\n      // Node was built without ICU support\n      return;\n    }\n\n    // Check that node was built with full Intl support. Its possible it was built without support for non-English\n    // locales which will make resolvedOptions inaccurate\n    //\n    // https://nodejs.org/api/intl.html#detecting-internationalization-support\n    const january = new Date(9e8);\n    const spanish = new Intl.DateTimeFormat('es', { month: 'long' });\n    if (spanish.format(january) === 'enero') {\n      const options = Intl.DateTimeFormat().resolvedOptions();\n\n      return {\n        locale: options.locale,\n        timezone: options.timeZone,\n      };\n    }\n  } catch (err) {\n    //\n  }\n\n  return;\n}\n\n/**\n * Get app context information from process\n */\nexport function getAppContext(): AppContext {\n  const app_memory = process.memoryUsage().rss;\n  const app_start_time = new Date(Date.now() - process.uptime() * 1000).toISOString();\n  // https://nodejs.org/api/process.html#processavailablememory\n  const appContext: AppContext = { app_start_time, app_memory };\n\n  if (typeof (process as ProcessWithCurrentValues).availableMemory === 'function') {\n    const freeMemory = (process as ProcessWithCurrentValues).availableMemory?.();\n    if (freeMemory != null) {\n      appContext.free_memory = freeMemory;\n    }\n  }\n\n  return appContext;\n}\n\n/**\n * Gets device information from os\n */\nexport function getDeviceContext(deviceOpt: DeviceContextOptions | true): DeviceContext {\n  const device: DeviceContext = {};\n\n  // Sometimes os.uptime() throws due to lacking permissions: https://github.com/getsentry/sentry-javascript/issues/8202\n  let uptime;\n  try {\n    uptime = os.uptime && os.uptime();\n  } catch (e) {\n    // noop\n  }\n\n  // os.uptime or its return value seem to be undefined in certain environments (e.g. Azure functions).\n  // Hence, we only set boot time, if we get a valid uptime value.\n  // @see https://github.com/getsentry/sentry-javascript/issues/5856\n  if (typeof uptime === 'number') {\n    device.boot_time = new Date(Date.now() - uptime * 1000).toISOString();\n  }\n\n  device.arch = os.arch();\n\n  if (deviceOpt === true || deviceOpt.memory) {\n    device.memory_size = os.totalmem();\n    device.free_memory = os.freemem();\n  }\n\n  if (deviceOpt === true || deviceOpt.cpu) {\n    const cpuInfo: os.CpuInfo[] | undefined = os.cpus();\n    const firstCpu = cpuInfo && cpuInfo[0];\n    if (firstCpu) {\n      device.processor_count = cpuInfo.length;\n      device.cpu_description = firstCpu.model;\n      device.processor_frequency = firstCpu.speed;\n    }\n  }\n\n  return device;\n}\n\n/** Mapping of Node's platform names to actual OS names. */\nconst PLATFORM_NAMES: { [platform: string]: string } = {\n  aix: 'IBM AIX',\n  freebsd: 'FreeBSD',\n  openbsd: 'OpenBSD',\n  sunos: 'SunOS',\n  win32: 'Windows',\n};\n\n/** Linux version file to check for a distribution. */\ninterface DistroFile {\n  /** The file name, located in `/etc`. */\n  name: string;\n  /** Potential distributions to check. */\n  distros: [string, ...string[]];\n}\n\n/** Mapping of linux release files located in /etc to distributions. */\nconst LINUX_DISTROS: DistroFile[] = [\n  { name: 'fedora-release', distros: ['Fedora'] },\n  { name: 'redhat-release', distros: ['Red Hat Linux', 'Centos'] },\n  { name: 'redhat_version', distros: ['Red Hat Linux'] },\n  { name: 'SuSE-release', distros: ['SUSE Linux'] },\n  { name: 'lsb-release', distros: ['Ubuntu Linux', 'Arch Linux'] },\n  { name: 'debian_version', distros: ['Debian'] },\n  { name: 'debian_release', distros: ['Debian'] },\n  { name: 'arch-release', distros: ['Arch Linux'] },\n  { name: 'gentoo-release', distros: ['Gentoo Linux'] },\n  { name: 'novell-release', distros: ['SUSE Linux'] },\n  { name: 'alpine-release', distros: ['Alpine Linux'] },\n];\n\n/** Functions to extract the OS version from Linux release files. */\nconst LINUX_VERSIONS: {\n  [identifier: string]: (content: string) => string | undefined;\n} = {\n  alpine: content => content,\n  arch: content => matchFirst(/distrib_release=(.*)/, content),\n  centos: content => matchFirst(/release ([^ ]+)/, content),\n  debian: content => content,\n  fedora: content => matchFirst(/release (..)/, content),\n  mint: content => matchFirst(/distrib_release=(.*)/, content),\n  red: content => matchFirst(/release ([^ ]+)/, content),\n  suse: content => matchFirst(/VERSION = (.*)\\n/, content),\n  ubuntu: content => matchFirst(/distrib_release=(.*)/, content),\n};\n\n/**\n * Executes a regular expression with one capture group.\n *\n * @param regex A regular expression to execute.\n * @param text Content to execute the RegEx on.\n * @returns The captured string if matched; otherwise undefined.\n */\nfunction matchFirst(regex: RegExp, text: string): string | undefined {\n  const match = regex.exec(text);\n  return match ? match[1] : undefined;\n}\n\n/** Loads the macOS operating system context. */\nasync function getDarwinInfo(): Promise<OsContext> {\n  // Default values that will be used in case no operating system information\n  // can be loaded. The default version is computed via heuristics from the\n  // kernel version, but the build ID is missing.\n  const darwinInfo: OsContext = {\n    kernel_version: os.release(),\n    name: 'Mac OS X',\n    version: `10.${Number(os.release().split('.')[0]) - 4}`,\n  };\n\n  try {\n    // We try to load the actual macOS version by executing the `sw_vers` tool.\n    // This tool should be available on every standard macOS installation. In\n    // case this fails, we stick with the values computed above.\n\n    const output = await new Promise<string>((resolve, reject) => {\n      execFile('/usr/bin/sw_vers', (error: Error | null, stdout: string) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(stdout);\n      });\n    });\n\n    darwinInfo.name = matchFirst(/^ProductName:\\s+(.*)$/m, output);\n    darwinInfo.version = matchFirst(/^ProductVersion:\\s+(.*)$/m, output);\n    darwinInfo.build = matchFirst(/^BuildVersion:\\s+(.*)$/m, output);\n  } catch (e) {\n    // ignore\n  }\n\n  return darwinInfo;\n}\n\n/** Returns a distribution identifier to look up version callbacks. */\nfunction getLinuxDistroId(name: string): string {\n  return (name.split(' ') as [string])[0].toLowerCase();\n}\n\n/** Loads the Linux operating system context. */\nasync function getLinuxInfo(): Promise<OsContext> {\n  // By default, we cannot assume anything about the distribution or Linux\n  // version. `os.release()` returns the kernel version and we assume a generic\n  // \"Linux\" name, which will be replaced down below.\n  const linuxInfo: OsContext = {\n    kernel_version: os.release(),\n    name: 'Linux',\n  };\n\n  try {\n    // We start guessing the distribution by listing files in the /etc\n    // directory. This is were most Linux distributions (except Knoppix) store\n    // release files with certain distribution-dependent meta data. We search\n    // for exactly one known file defined in `LINUX_DISTROS` and exit if none\n    // are found. In case there are more than one file, we just stick with the\n    // first one.\n    const etcFiles = await readDirAsync('/etc');\n    const distroFile = LINUX_DISTROS.find(file => etcFiles.includes(file.name));\n    if (!distroFile) {\n      return linuxInfo;\n    }\n\n    // Once that file is known, load its contents. To make searching in those\n    // files easier, we lowercase the file contents. Since these files are\n    // usually quite small, this should not allocate too much memory and we only\n    // hold on to it for a very short amount of time.\n    const distroPath = join('/etc', distroFile.name);\n    const contents = ((await readFileAsync(distroPath, { encoding: 'utf-8' })) as string).toLowerCase();\n\n    // Some Linux distributions store their release information in the same file\n    // (e.g. RHEL and Centos). In those cases, we scan the file for an\n    // identifier, that basically consists of the first word of the linux\n    // distribution name (e.g. \"red\" for Red Hat). In case there is no match, we\n    // just assume the first distribution in our list.\n    const { distros } = distroFile;\n    linuxInfo.name = distros.find(d => contents.indexOf(getLinuxDistroId(d)) >= 0) || distros[0];\n\n    // Based on the found distribution, we can now compute the actual version\n    // number. This is different for every distribution, so several strategies\n    // are computed in `LINUX_VERSIONS`.\n    const id = getLinuxDistroId(linuxInfo.name);\n    linuxInfo.version = LINUX_VERSIONS[id]?.(contents);\n  } catch (e) {\n    // ignore\n  }\n\n  return linuxInfo;\n}\n\n/**\n * Grabs some information about hosting provider based on best effort.\n */\nfunction getCloudResourceContext(): CloudResourceContext | undefined {\n  if (process.env.VERCEL) {\n    // https://vercel.com/docs/concepts/projects/environment-variables/system-environment-variables#system-environment-variables\n    return {\n      'cloud.provider': 'vercel',\n      'cloud.region': process.env.VERCEL_REGION,\n    };\n  } else if (process.env.AWS_REGION) {\n    // https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\n    return {\n      'cloud.provider': 'aws',\n      'cloud.region': process.env.AWS_REGION,\n      'cloud.platform': process.env.AWS_EXECUTION_ENV,\n    };\n  } else if (process.env.GCP_PROJECT) {\n    // https://cloud.google.com/composer/docs/how-to/managing/environment-variables#reserved_variables\n    return {\n      'cloud.provider': 'gcp',\n    };\n  } else if (process.env.ALIYUN_REGION_ID) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'alibaba_cloud',\n      'cloud.region': process.env.ALIYUN_REGION_ID,\n    };\n  } else if (process.env.WEBSITE_SITE_NAME && process.env.REGION_NAME) {\n    // https://learn.microsoft.com/en-us/azure/app-service/reference-app-settings?tabs=kudu%2Cdotnet#app-environment\n    return {\n      'cloud.provider': 'azure',\n      'cloud.region': process.env.REGION_NAME,\n    };\n  } else if (process.env.IBM_CLOUD_REGION) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'ibm_cloud',\n      'cloud.region': process.env.IBM_CLOUD_REGION,\n    };\n  } else if (process.env.TENCENTCLOUD_REGION) {\n    // https://www.tencentcloud.com/document/product/583/32748\n    return {\n      'cloud.provider': 'tencent_cloud',\n      'cloud.region': process.env.TENCENTCLOUD_REGION,\n      'cloud.account.id': process.env.TENCENTCLOUD_APPID,\n      'cloud.availability_zone': process.env.TENCENTCLOUD_ZONE,\n    };\n  } else if (process.env.NETLIFY) {\n    // https://docs.netlify.com/configure-builds/environment-variables/#read-only-variables\n    return {\n      'cloud.provider': 'netlify',\n    };\n  } else if (process.env.FLY_REGION) {\n    // https://fly.io/docs/reference/runtime-environment/\n    return {\n      'cloud.provider': 'fly.io',\n      'cloud.region': process.env.FLY_REGION,\n    };\n  } else if (process.env.DYNO) {\n    // https://devcenter.heroku.com/articles/dynos#local-environment-variables\n    return {\n      'cloud.provider': 'heroku',\n    };\n  } else {\n    return undefined;\n  }\n}\n","import { createReadStream } from 'node:fs';\nimport { createInterface } from 'node:readline';\nimport { defineIntegration } from '@sentry/core';\nimport type { Event, IntegrationFn, StackFrame } from '@sentry/types';\nimport { LRUMap, logger, snipLine } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst LRU_FILE_CONTENTS_CACHE = new LRUMap<string, Record<number, string>>(10);\nconst LRU_FILE_CONTENTS_FS_READ_FAILED = new LRUMap<string, 1>(20);\nconst DEFAULT_LINES_OF_CONTEXT = 7;\nconst INTEGRATION_NAME = 'ContextLines';\n// Determines the upper bound of lineno/colno that we will attempt to read. Large colno values are likely to be\n// minified code while large lineno values are likely to be bundled code.\n// Exported for testing purposes.\nexport const MAX_CONTEXTLINES_COLNO: number = 1000;\nexport const MAX_CONTEXTLINES_LINENO: number = 10000;\n\ninterface ContextLinesOptions {\n  /**\n   * Sets the number of context lines for each frame when loading a file.\n   * Defaults to 7.\n   *\n   * Set to 0 to disable loading and inclusion of source files.\n   **/\n  frameContextLines?: number;\n}\n\n/**\n * Exported for testing purposes.\n */\nexport function resetFileContentCache(): void {\n  LRU_FILE_CONTENTS_CACHE.clear();\n}\n\n/**\n * Get or init map value\n */\nfunction emplace<T extends LRUMap<K, V>, K extends string, V>(map: T, key: K, contents: V): V {\n  const value = map.get(key);\n\n  if (value === undefined) {\n    map.set(key, contents);\n    return contents;\n  }\n\n  return value;\n}\n\n/**\n * Determines if context lines should be skipped for a file.\n * - .min.(mjs|cjs|js) files are and not useful since they dont point to the original source\n * - node: prefixed modules are part of the runtime and cannot be resolved to a file\n * - data: skip json, wasm and inline js https://nodejs.org/api/esm.html#data-imports\n */\nfunction shouldSkipContextLinesForFile(path: string): boolean {\n  // Test the most common prefix and extension first. These are the ones we\n  // are most likely to see in user applications and are the ones we can break out of first.\n  if (path.startsWith('node:')) return true;\n  if (path.endsWith('.min.js')) return true;\n  if (path.endsWith('.min.cjs')) return true;\n  if (path.endsWith('.min.mjs')) return true;\n  if (path.startsWith('data:')) return true;\n  return false;\n}\n\n/**\n * Determines if we should skip contextlines based off the max lineno and colno values.\n */\nfunction shouldSkipContextLinesForFrame(frame: StackFrame): boolean {\n  if (frame.lineno !== undefined && frame.lineno > MAX_CONTEXTLINES_LINENO) return true;\n  if (frame.colno !== undefined && frame.colno > MAX_CONTEXTLINES_COLNO) return true;\n  return false;\n}\n/**\n * Checks if we have all the contents that we need in the cache.\n */\nfunction rangeExistsInContentCache(file: string, range: ReadlineRange): boolean {\n  const contents = LRU_FILE_CONTENTS_CACHE.get(file);\n  if (contents === undefined) return false;\n\n  for (let i = range[0]; i <= range[1]; i++) {\n    if (contents[i] === undefined) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Creates contiguous ranges of lines to read from a file. In the case where context lines overlap,\n * the ranges are merged to create a single range.\n */\nfunction makeLineReaderRanges(lines: number[], linecontext: number): ReadlineRange[] {\n  if (!lines.length) {\n    return [];\n  }\n\n  let i = 0;\n  const line = lines[0];\n\n  if (typeof line !== 'number') {\n    return [];\n  }\n\n  let current = makeContextRange(line, linecontext);\n  const out: ReadlineRange[] = [];\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (i === lines.length - 1) {\n      out.push(current);\n      break;\n    }\n\n    // If the next line falls into the current range, extend the current range to lineno + linecontext.\n    const next = lines[i + 1];\n    if (typeof next !== 'number') {\n      break;\n    }\n    if (next <= current[1]) {\n      current[1] = next + linecontext;\n    } else {\n      out.push(current);\n      current = makeContextRange(next, linecontext);\n    }\n\n    i++;\n  }\n\n  return out;\n}\n\n/**\n * Extracts lines from a file and stores them in a cache.\n */\nfunction getContextLinesFromFile(path: string, ranges: ReadlineRange[], output: Record<number, string>): Promise<void> {\n  return new Promise((resolve, _reject) => {\n    // It is important *not* to have any async code between createInterface and the 'line' event listener\n    // as it will cause the 'line' event to\n    // be emitted before the listener is attached.\n    const stream = createReadStream(path);\n    const lineReaded = createInterface({\n      input: stream,\n    });\n\n    // Init at zero and increment at the start of the loop because lines are 1 indexed.\n    let lineNumber = 0;\n    let currentRangeIndex = 0;\n    const range = ranges[currentRangeIndex];\n    if (range === undefined) {\n      // We should never reach this point, but if we do, we should resolve the promise to prevent it from hanging.\n      resolve();\n      return;\n    }\n    let rangeStart = range[0];\n    let rangeEnd = range[1];\n\n    // We use this inside Promise.all, so we need to resolve the promise even if there is an error\n    // to prevent Promise.all from short circuiting the rest.\n    function onStreamError(e: Error): void {\n      // Mark file path as failed to read and prevent multiple read attempts.\n      LRU_FILE_CONTENTS_FS_READ_FAILED.set(path, 1);\n      DEBUG_BUILD && logger.error(`Failed to read file: ${path}. Error: ${e}`);\n      lineReaded.close();\n      lineReaded.removeAllListeners();\n      resolve();\n    }\n\n    // We need to handle the error event to prevent the process from crashing in < Node 16\n    // https://github.com/nodejs/node/pull/31603\n    stream.on('error', onStreamError);\n    lineReaded.on('error', onStreamError);\n    lineReaded.on('close', resolve);\n\n    lineReaded.on('line', line => {\n      lineNumber++;\n      if (lineNumber < rangeStart) return;\n\n      // !Warning: This mutates the cache by storing the snipped line into the cache.\n      output[lineNumber] = snipLine(line, 0);\n\n      if (lineNumber >= rangeEnd) {\n        if (currentRangeIndex === ranges.length - 1) {\n          // We need to close the file stream and remove listeners, else the reader will continue to run our listener;\n          lineReaded.close();\n          lineReaded.removeAllListeners();\n          return;\n        }\n        currentRangeIndex++;\n        const range = ranges[currentRangeIndex];\n        if (range === undefined) {\n          // This should never happen as it means we have a bug in the context.\n          lineReaded.close();\n          lineReaded.removeAllListeners();\n          return;\n        }\n        rangeStart = range[0];\n        rangeEnd = range[1];\n      }\n    });\n  });\n}\n\n/**\n * Adds surrounding (context) lines of the line that an exception occurred on to the event.\n * This is done by reading the file line by line and extracting the lines. The extracted lines are stored in\n * a cache to prevent multiple reads of the same file. Failures to read a file are similarly cached to prevent multiple\n * failing reads from happening.\n */\n/* eslint-disable complexity */\nasync function addSourceContext(event: Event, contextLines: number): Promise<Event> {\n  // keep a lookup map of which files we've already enqueued to read,\n  // so we don't enqueue the same file multiple times which would cause multiple i/o reads\n  const filesToLines: Record<string, number[]> = {};\n\n  if (contextLines > 0 && event.exception?.values) {\n    for (const exception of event.exception.values) {\n      if (!exception.stacktrace?.frames?.length) {\n        continue;\n      }\n\n      // Maps preserve insertion order, so we iterate in reverse, starting at the\n      // outermost frame and closer to where the exception has occurred (poor mans priority)\n      for (let i = exception.stacktrace.frames.length - 1; i >= 0; i--) {\n        const frame: StackFrame | undefined = exception.stacktrace.frames[i];\n        const filename = frame?.filename;\n\n        if (\n          !frame ||\n          typeof filename !== 'string' ||\n          typeof frame.lineno !== 'number' ||\n          shouldSkipContextLinesForFile(filename) ||\n          shouldSkipContextLinesForFrame(frame)\n        ) {\n          continue;\n        }\n\n        const filesToLinesOutput = filesToLines[filename];\n        if (!filesToLinesOutput) filesToLines[filename] = [];\n        // @ts-expect-error this is defined above\n        filesToLines[filename].push(frame.lineno);\n      }\n    }\n  }\n\n  const files = Object.keys(filesToLines);\n  if (files.length == 0) {\n    return event;\n  }\n\n  const readlinePromises: Promise<void>[] = [];\n  for (const file of files) {\n    // If we failed to read this before, dont try reading it again.\n    if (LRU_FILE_CONTENTS_FS_READ_FAILED.get(file)) {\n      continue;\n    }\n\n    const filesToLineRanges = filesToLines[file];\n    if (!filesToLineRanges) {\n      continue;\n    }\n\n    // Sort ranges so that they are sorted by line increasing order and match how the file is read.\n    filesToLineRanges.sort((a, b) => a - b);\n    // Check if the contents are already in the cache and if we can avoid reading the file again.\n    const ranges = makeLineReaderRanges(filesToLineRanges, contextLines);\n    if (ranges.every(r => rangeExistsInContentCache(file, r))) {\n      continue;\n    }\n\n    const cache = emplace(LRU_FILE_CONTENTS_CACHE, file, {});\n    readlinePromises.push(getContextLinesFromFile(file, ranges, cache));\n  }\n\n  // The promise rejections are caught in order to prevent them from short circuiting Promise.all\n  await Promise.all(readlinePromises).catch(() => {\n    DEBUG_BUILD && logger.log('Failed to read one or more source files and resolve context lines');\n  });\n\n  // Perform the same loop as above, but this time we can assume all files are in the cache\n  // and attempt to add source context to frames.\n  if (contextLines > 0 && event.exception?.values) {\n    for (const exception of event.exception.values) {\n      if (exception.stacktrace && exception.stacktrace.frames && exception.stacktrace.frames.length > 0) {\n        addSourceContextToFrames(exception.stacktrace.frames, contextLines, LRU_FILE_CONTENTS_CACHE);\n      }\n    }\n  }\n\n  return event;\n}\n/* eslint-enable complexity */\n\n/** Adds context lines to frames */\nfunction addSourceContextToFrames(\n  frames: StackFrame[],\n  contextLines: number,\n  cache: LRUMap<string, Record<number, string>>,\n): void {\n  for (const frame of frames) {\n    // Only add context if we have a filename and it hasn't already been added\n    if (frame.filename && frame.context_line === undefined && typeof frame.lineno === 'number') {\n      const contents = cache.get(frame.filename);\n      if (contents === undefined) {\n        continue;\n      }\n\n      addContextToFrame(frame.lineno, frame, contextLines, contents);\n    }\n  }\n}\n\n/**\n * Clears the context lines from a frame, used to reset a frame to its original state\n * if we fail to resolve all context lines for it.\n */\nfunction clearLineContext(frame: StackFrame): void {\n  delete frame.pre_context;\n  delete frame.context_line;\n  delete frame.post_context;\n}\n\n/**\n * Resolves context lines before and after the given line number and appends them to the frame;\n */\nexport function addContextToFrame(\n  lineno: number,\n  frame: StackFrame,\n  contextLines: number,\n  contents: Record<number, string> | undefined,\n): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping.\n  // We already check for lineno before calling this, but since StackFrame lineno ism optional, we check it again.\n  if (frame.lineno === undefined || contents === undefined) {\n    DEBUG_BUILD && logger.error('Cannot resolve context for frame with no lineno or file contents');\n    return;\n  }\n\n  frame.pre_context = [];\n  for (let i = makeRangeStart(lineno, contextLines); i < lineno; i++) {\n    // We always expect the start context as line numbers cannot be negative. If we dont find a line, then\n    // something went wrong somewhere. Clear the context and return without adding any linecontext.\n    const line = contents[i];\n    if (line === undefined) {\n      clearLineContext(frame);\n      DEBUG_BUILD && logger.error(`Could not find line ${i} in file ${frame.filename}`);\n      return;\n    }\n\n    frame.pre_context.push(line);\n  }\n\n  // We should always have the context line. If we dont, something went wrong, so we clear the context and return\n  // without adding any linecontext.\n  if (contents[lineno] === undefined) {\n    clearLineContext(frame);\n    DEBUG_BUILD && logger.error(`Could not find line ${lineno} in file ${frame.filename}`);\n    return;\n  }\n\n  frame.context_line = contents[lineno];\n\n  const end = makeRangeEnd(lineno, contextLines);\n  frame.post_context = [];\n  for (let i = lineno + 1; i <= end; i++) {\n    // Since we dont track when the file ends, we cant clear the context if we dont find a line as it could\n    // just be that we reached the end of the file.\n    const line = contents[i];\n    if (line === undefined) {\n      break;\n    }\n    frame.post_context.push(line);\n  }\n}\n\n// Helper functions for generating line context ranges. They take a line number and the number of lines of context to\n// include before and after the line and generate an inclusive range of indices.\ntype ReadlineRange = [start: number, end: number];\n// Compute inclusive end context range\nfunction makeRangeStart(line: number, linecontext: number): number {\n  return Math.max(1, line - linecontext);\n}\n// Compute inclusive start context range\nfunction makeRangeEnd(line: number, linecontext: number): number {\n  return line + linecontext;\n}\n// Determine start and end indices for context range (inclusive);\nfunction makeContextRange(line: number, linecontext: number): [start: number, end: number] {\n  return [makeRangeStart(line, linecontext), makeRangeEnd(line, linecontext)];\n}\n\n/** Exported only for tests, as a type-safe variant. */\nexport const _contextLinesIntegration = ((options: ContextLinesOptions = {}) => {\n  const contextLines = options.frameContextLines !== undefined ? options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      return addSourceContext(event, contextLines);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Capture the lines before and after the frame's context.\n */\nexport const contextLinesIntegration = defineIntegration(_contextLinesIntegration);\n","import type { Debugger } from 'node:inspector';\nimport type { StackFrame, StackParser } from '@sentry/types';\n\nexport type Variables = Record<string, unknown>;\n\nexport type RateLimitIncrement = () => void;\n\n/**\n * Creates a rate limiter that will call the disable callback when the rate limit is reached and the enable callback\n * when a timeout has occurred.\n * @param maxPerSecond Maximum number of calls per second\n * @param enable Callback to enable capture\n * @param disable Callback to disable capture\n * @returns A function to call to increment the rate limiter count\n */\nexport function createRateLimiter(\n  maxPerSecond: number,\n  enable: () => void,\n  disable: (seconds: number) => void,\n): RateLimitIncrement {\n  let count = 0;\n  let retrySeconds = 5;\n  let disabledTimeout = 0;\n\n  setInterval(() => {\n    if (disabledTimeout === 0) {\n      if (count > maxPerSecond) {\n        retrySeconds *= 2;\n        disable(retrySeconds);\n\n        // Cap at one day\n        if (retrySeconds > 86400) {\n          retrySeconds = 86400;\n        }\n        disabledTimeout = retrySeconds;\n      }\n    } else {\n      disabledTimeout -= 1;\n\n      if (disabledTimeout === 0) {\n        enable();\n      }\n    }\n\n    count = 0;\n  }, 1_000).unref();\n\n  return () => {\n    count += 1;\n  };\n}\n\n// Add types for the exception event data\nexport type PausedExceptionEvent = Debugger.PausedEventDataType & {\n  data: {\n    // This contains error.stack\n    description: string;\n  };\n};\n\n/** Could this be an anonymous function? */\nexport function isAnonymous(name: string | undefined): boolean {\n  return name !== undefined && (name.length === 0 || name === '?' || name === '<anonymous>');\n}\n\n/** Do the function names appear to match? */\nexport function functionNamesMatch(a: string | undefined, b: string | undefined): boolean {\n  return a === b || (isAnonymous(a) && isAnonymous(b));\n}\n\n/** Creates a unique hash from stack frames */\nexport function hashFrames(frames: StackFrame[] | undefined): string | undefined {\n  if (frames === undefined) {\n    return;\n  }\n\n  // Only hash the 10 most recent frames (ie. the last 10)\n  return frames.slice(-10).reduce((acc, frame) => `${acc},${frame.function},${frame.lineno},${frame.colno}`, '');\n}\n\n/**\n * We use the stack parser to create a unique hash from the exception stack trace\n * This is used to lookup vars when the exception passes through the event processor\n */\nexport function hashFromStack(stackParser: StackParser, stack: string | undefined): string | undefined {\n  if (stack === undefined) {\n    return undefined;\n  }\n\n  return hashFrames(stackParser(stack, 1));\n}\n\nexport interface FrameVariables {\n  function: string;\n  vars?: Variables;\n}\n\nexport interface LocalVariablesIntegrationOptions {\n  /**\n   * Capture local variables for both caught and uncaught exceptions\n   *\n   * - When false, only uncaught exceptions will have local variables\n   * - When true, both caught and uncaught exceptions will have local variables.\n   *\n   * Defaults to `true`.\n   *\n   * Capturing local variables for all exceptions can be expensive since the debugger pauses for every throw to collect\n   * local variables.\n   *\n   * To reduce the likelihood of this feature impacting app performance or throughput, this feature is rate-limited.\n   * Once the rate limit is reached, local variables will only be captured for uncaught exceptions until a timeout has\n   * been reached.\n   */\n  captureAllExceptions?: boolean;\n  /**\n   * Maximum number of exceptions to capture local variables for per second before rate limiting is triggered.\n   */\n  maxExceptionsPerSecond?: number;\n}\n\nexport interface LocalVariablesWorkerArgs extends LocalVariablesIntegrationOptions {\n  /**\n   * Whether to enable debug logging.\n   */\n  debug: boolean;\n  /**\n   * Base path used to calculate module name.\n   *\n   * Defaults to `dirname(process.argv[1])` and falls back to `process.cwd()`\n   */\n  basePath?: string;\n}\n","import { Worker } from 'node:worker_threads';\nimport { defineIntegration } from '@sentry/core';\nimport type { Event, Exception, IntegrationFn } from '@sentry/types';\nimport { LRUMap, logger } from '@sentry/utils';\n\nimport type { NodeClient } from '../../sdk/client';\nimport type { FrameVariables, LocalVariablesIntegrationOptions, LocalVariablesWorkerArgs } from './common';\nimport { functionNamesMatch, hashFrames } from './common';\n\n// This string is a placeholder that gets overwritten with the worker code.\nexport const base64WorkerScript = '###LocalVariablesWorkerScript###';\n\nfunction log(...args: unknown[]): void {\n  logger.log('[LocalVariables]', ...args);\n}\n\n/**\n * Adds local variables to exception frames\n */\nexport const localVariablesAsyncIntegration = defineIntegration(((\n  integrationOptions: LocalVariablesIntegrationOptions = {},\n) => {\n  const cachedFrames: LRUMap<string, FrameVariables[]> = new LRUMap(20);\n\n  function addLocalVariablesToException(exception: Exception): void {\n    const hash = hashFrames(exception?.stacktrace?.frames);\n\n    if (hash === undefined) {\n      return;\n    }\n\n    // Check if we have local variables for an exception that matches the hash\n    // remove is identical to get but also removes the entry from the cache\n    const cachedFrame = cachedFrames.remove(hash);\n\n    if (cachedFrame === undefined) {\n      return;\n    }\n\n    // Filter out frames where the function name is `new Promise` since these are in the error.stack frames\n    // but do not appear in the debugger call frames\n    const frames = (exception.stacktrace?.frames || []).filter(frame => frame.function !== 'new Promise');\n\n    for (let i = 0; i < frames.length; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frames.length - i - 1;\n\n      const cachedFrameVariable = cachedFrame[i];\n      const frameVariable = frames[frameIndex];\n\n      if (!frameVariable || !cachedFrameVariable) {\n        // Drop out if we run out of frames to match up\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        cachedFrameVariable.vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        frameVariable.in_app === false ||\n        // The function names need to match\n        !functionNamesMatch(frameVariable.function, cachedFrameVariable.function)\n      ) {\n        continue;\n      }\n\n      frameVariable.vars = cachedFrameVariable.vars;\n    }\n  }\n\n  function addLocalVariablesToEvent(event: Event): Event {\n    for (const exception of event.exception?.values || []) {\n      addLocalVariablesToException(exception);\n    }\n\n    return event;\n  }\n\n  async function startInspector(): Promise<void> {\n    // We load inspector dynamically because on some platforms Node is built without inspector support\n    const inspector = await import('node:inspector');\n    if (!inspector.url()) {\n      inspector.open(0);\n    }\n  }\n\n  function startWorker(options: LocalVariablesWorkerArgs): void {\n    const worker = new Worker(new URL(`data:application/javascript;base64,${base64WorkerScript}`), {\n      workerData: options,\n      // We don't want any Node args to be passed to the worker\n      execArgv: [],\n    });\n\n    process.on('exit', () => {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      worker.terminate();\n    });\n\n    worker.on('message', ({ exceptionHash, frames }) => {\n      cachedFrames.set(exceptionHash, frames);\n    });\n\n    worker.once('error', (err: Error) => {\n      log('Worker error', err);\n    });\n\n    worker.once('exit', (code: number) => {\n      log('Worker exit', code);\n    });\n\n    // Ensure this thread can't block app exit\n    worker.unref();\n  }\n\n  return {\n    name: 'LocalVariablesAsync',\n    setup(client: NodeClient) {\n      const clientOptions = client.getOptions();\n\n      if (!clientOptions.includeLocalVariables) {\n        return;\n      }\n\n      const options: LocalVariablesWorkerArgs = {\n        ...integrationOptions,\n        debug: logger.isEnabled(),\n      };\n\n      startInspector().then(\n        () => {\n          try {\n            startWorker(options);\n          } catch (e) {\n            logger.error('Failed to start worker', e);\n          }\n        },\n        e => {\n          logger.error('Failed to start inspector', e);\n        },\n      );\n    },\n    processEvent(event: Event): Event {\n      return addLocalVariablesToEvent(event);\n    },\n  };\n}) satisfies IntegrationFn);\n","import type { Debugger, InspectorNotification, Runtime, Session } from 'node:inspector';\nimport { defineIntegration, getClient } from '@sentry/core';\nimport type { Event, Exception, IntegrationFn, StackParser } from '@sentry/types';\nimport { LRUMap, logger } from '@sentry/utils';\n\nimport { NODE_MAJOR } from '../../nodeVersion';\nimport type { NodeClient } from '../../sdk/client';\nimport type {\n  FrameVariables,\n  LocalVariablesIntegrationOptions,\n  PausedExceptionEvent,\n  RateLimitIncrement,\n  Variables,\n} from './common';\nimport { createRateLimiter, functionNamesMatch, hashFrames, hashFromStack } from './common';\n\ntype OnPauseEvent = InspectorNotification<Debugger.PausedEventDataType>;\nexport interface DebugSession {\n  /** Configures and connects to the debug session */\n  configureAndConnect(onPause: (message: OnPauseEvent, complete: () => void) => void, captureAll: boolean): void;\n  /** Updates which kind of exceptions to capture */\n  setPauseOnExceptions(captureAll: boolean): void;\n  /** Gets local variables for an objectId */\n  getLocalVariables(objectId: string, callback: (vars: Variables) => void): void;\n}\n\ntype Next<T> = (result: T) => void;\ntype Add<T> = (fn: Next<T>) => void;\ntype CallbackWrapper<T> = { add: Add<T>; next: Next<T> };\n\n/** Creates a container for callbacks to be called sequentially */\nexport function createCallbackList<T>(complete: Next<T>): CallbackWrapper<T> {\n  // A collection of callbacks to be executed last to first\n  let callbacks: Next<T>[] = [];\n\n  let completedCalled = false;\n  function checkedComplete(result: T): void {\n    callbacks = [];\n    if (completedCalled) {\n      return;\n    }\n    completedCalled = true;\n    complete(result);\n  }\n\n  // complete should be called last\n  callbacks.push(checkedComplete);\n\n  function add(fn: Next<T>): void {\n    callbacks.push(fn);\n  }\n\n  function next(result: T): void {\n    const popped = callbacks.pop() || checkedComplete;\n\n    try {\n      popped(result);\n    } catch (_) {\n      // If there is an error, we still want to call the complete callback\n      checkedComplete(result);\n    }\n  }\n\n  return { add, next };\n}\n\n/**\n * Promise API is available as `Experimental` and in Node 19 only.\n *\n * Callback-based API is `Stable` since v14 and `Experimental` since v8.\n * Because of that, we are creating our own `AsyncSession` class.\n *\n * https://nodejs.org/docs/latest-v19.x/api/inspector.html#promises-api\n * https://nodejs.org/docs/latest-v14.x/api/inspector.html\n */\nclass AsyncSession implements DebugSession {\n  /** Throws if inspector API is not available */\n  private constructor(private readonly _session: Session) {\n    //\n  }\n\n  public static async create(orDefault?: DebugSession | undefined): Promise<DebugSession> {\n    if (orDefault) {\n      return orDefault;\n    }\n\n    const inspector = await import('node:inspector');\n    return new AsyncSession(new inspector.Session());\n  }\n\n  /** @inheritdoc */\n  public configureAndConnect(onPause: (event: OnPauseEvent, complete: () => void) => void, captureAll: boolean): void {\n    this._session.connect();\n\n    this._session.on('Debugger.paused', event => {\n      onPause(event, () => {\n        // After the pause work is complete, resume execution or the exception context memory is leaked\n        this._session.post('Debugger.resume');\n      });\n    });\n\n    this._session.post('Debugger.enable');\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n  public setPauseOnExceptions(captureAll: boolean): void {\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n  /** @inheritdoc */\n  public getLocalVariables(objectId: string, complete: (vars: Variables) => void): void {\n    this._getProperties(objectId, props => {\n      const { add, next } = createCallbackList<Variables>(complete);\n\n      for (const prop of props) {\n        if (prop?.value?.objectId && prop?.value.className === 'Array') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollArray(id, prop.name, vars, next));\n        } else if (prop?.value?.objectId && prop?.value?.className === 'Object') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollObject(id, prop.name, vars, next));\n        } else if (prop?.value) {\n          add(vars => this._unrollOther(prop, vars, next));\n        }\n      }\n\n      next({});\n    });\n  }\n\n  /**\n   * Gets all the PropertyDescriptors of an object\n   */\n  private _getProperties(objectId: string, next: (result: Runtime.PropertyDescriptor[]) => void): void {\n    this._session.post(\n      'Runtime.getProperties',\n      {\n        objectId,\n        ownProperties: true,\n      },\n      (err, params) => {\n        if (err) {\n          next([]);\n        } else {\n          next(params.result);\n        }\n      },\n    );\n  }\n\n  /**\n   * Unrolls an array property\n   */\n  private _unrollArray(objectId: string, name: string, vars: Variables, next: (vars: Variables) => void): void {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .filter(v => v.name !== 'length' && !isNaN(parseInt(v.name, 10)))\n        .sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10))\n        .map(v => v?.value?.value);\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls an object property\n   */\n  private _unrollObject(objectId: string, name: string, vars: Variables, next: (obj: Variables) => void): void {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .map<[string, unknown]>(v => [v.name, v?.value?.value])\n        .reduce((obj, [key, val]) => {\n          obj[key] = val;\n          return obj;\n        }, {} as Variables);\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls other properties\n   */\n  private _unrollOther(prop: Runtime.PropertyDescriptor, vars: Variables, next: (vars: Variables) => void): void {\n    if (prop.value) {\n      if ('value' in prop.value) {\n        if (prop.value.value === undefined || prop.value.value === null) {\n          vars[prop.name] = `<${prop.value.value}>`;\n        } else {\n          vars[prop.name] = prop.value.value;\n        }\n      } else if ('description' in prop.value && prop.value.type !== 'function') {\n        vars[prop.name] = `<${prop.value.description}>`;\n      } else if (prop.value.type === 'undefined') {\n        vars[prop.name] = '<undefined>';\n      }\n    }\n\n    next(vars);\n  }\n}\n\nconst INTEGRATION_NAME = 'LocalVariables';\n\n/**\n * Adds local variables to exception frames\n */\nconst _localVariablesSyncIntegration = ((\n  options: LocalVariablesIntegrationOptions = {},\n  sessionOverride?: DebugSession,\n) => {\n  const cachedFrames: LRUMap<string, FrameVariables[]> = new LRUMap(20);\n  let rateLimiter: RateLimitIncrement | undefined;\n  let shouldProcessEvent = false;\n\n  function addLocalVariablesToException(exception: Exception): void {\n    const hash = hashFrames(exception?.stacktrace?.frames);\n\n    if (hash === undefined) {\n      return;\n    }\n\n    // Check if we have local variables for an exception that matches the hash\n    // remove is identical to get but also removes the entry from the cache\n    const cachedFrame = cachedFrames.remove(hash);\n\n    if (cachedFrame === undefined) {\n      return;\n    }\n\n    // Filter out frames where the function name is `new Promise` since these are in the error.stack frames\n    // but do not appear in the debugger call frames\n    const frames = (exception.stacktrace?.frames || []).filter(frame => frame.function !== 'new Promise');\n\n    for (let i = 0; i < frames.length; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frames.length - i - 1;\n\n      const cachedFrameVariable = cachedFrame[i];\n      const frameVariable = frames[frameIndex];\n\n      // Drop out if we run out of frames to match up\n      if (!frameVariable || !cachedFrameVariable) {\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        cachedFrameVariable.vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        frameVariable.in_app === false ||\n        // The function names need to match\n        !functionNamesMatch(frameVariable.function, cachedFrameVariable.function)\n      ) {\n        continue;\n      }\n\n      frameVariable.vars = cachedFrameVariable.vars;\n    }\n  }\n\n  function addLocalVariablesToEvent(event: Event): Event {\n    for (const exception of event?.exception?.values || []) {\n      addLocalVariablesToException(exception);\n    }\n\n    return event;\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      const client = getClient<NodeClient>();\n      const clientOptions = client?.getOptions();\n\n      if (!clientOptions?.includeLocalVariables) {\n        return;\n      }\n\n      // Only setup this integration if the Node version is >= v18\n      // https://github.com/getsentry/sentry-javascript/issues/7697\n      const unsupportedNodeVersion = NODE_MAJOR < 18;\n\n      if (unsupportedNodeVersion) {\n        logger.log('The `LocalVariables` integration is only supported on Node >= v18.');\n        return;\n      }\n\n      AsyncSession.create(sessionOverride).then(\n        session => {\n          function handlePaused(\n            stackParser: StackParser,\n            { params: { reason, data, callFrames } }: InspectorNotification<PausedExceptionEvent>,\n            complete: () => void,\n          ): void {\n            if (reason !== 'exception' && reason !== 'promiseRejection') {\n              complete();\n              return;\n            }\n\n            rateLimiter?.();\n\n            // data.description contains the original error.stack\n            const exceptionHash = hashFromStack(stackParser, data?.description);\n\n            if (exceptionHash == undefined) {\n              complete();\n              return;\n            }\n\n            const { add, next } = createCallbackList<FrameVariables[]>(frames => {\n              cachedFrames.set(exceptionHash, frames);\n              complete();\n            });\n\n            // Because we're queuing up and making all these calls synchronously, we can potentially overflow the stack\n            // For this reason we only attempt to get local variables for the first 5 frames\n            for (let i = 0; i < Math.min(callFrames.length, 5); i++) {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              const { scopeChain, functionName, this: obj } = callFrames[i]!;\n\n              const localScope = scopeChain.find(scope => scope.type === 'local');\n\n              // obj.className is undefined in ESM modules\n              const fn =\n                obj.className === 'global' || !obj.className ? functionName : `${obj.className}.${functionName}`;\n\n              if (localScope?.object.objectId === undefined) {\n                add(frames => {\n                  frames[i] = { function: fn };\n                  next(frames);\n                });\n              } else {\n                const id = localScope.object.objectId;\n                add(frames =>\n                  session?.getLocalVariables(id, vars => {\n                    frames[i] = { function: fn, vars };\n                    next(frames);\n                  }),\n                );\n              }\n            }\n\n            next([]);\n          }\n\n          const captureAll = options.captureAllExceptions !== false;\n\n          session.configureAndConnect(\n            (ev, complete) =>\n              handlePaused(clientOptions.stackParser, ev as InspectorNotification<PausedExceptionEvent>, complete),\n            captureAll,\n          );\n\n          if (captureAll) {\n            const max = options.maxExceptionsPerSecond || 50;\n\n            rateLimiter = createRateLimiter(\n              max,\n              () => {\n                logger.log('Local variables rate-limit lifted.');\n                session?.setPauseOnExceptions(true);\n              },\n              seconds => {\n                logger.log(\n                  `Local variables rate-limit exceeded. Disabling capturing of caught exceptions for ${seconds} seconds.`,\n                );\n                session?.setPauseOnExceptions(false);\n              },\n            );\n          }\n\n          shouldProcessEvent = true;\n        },\n        error => {\n          logger.log('The `LocalVariables` integration failed to start.', error);\n        },\n      );\n    },\n    processEvent(event: Event): Event {\n      if (shouldProcessEvent) {\n        return addLocalVariablesToEvent(event);\n      }\n\n      return event;\n    },\n    // These are entirely for testing\n    _getCachedFramesCount(): number {\n      return cachedFrames.size;\n    },\n    _getFirstCachedFrame(): FrameVariables[] | undefined {\n      return cachedFrames.values()[0];\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Adds local variables to exception frames.\n */\nexport const localVariablesSyncIntegration = defineIntegration(_localVariablesSyncIntegration);\n","import type { Integration } from '@sentry/types';\nimport { NODE_VERSION } from '../../nodeVersion';\nimport type { LocalVariablesIntegrationOptions } from './common';\nimport { localVariablesAsyncIntegration } from './local-variables-async';\nimport { localVariablesSyncIntegration } from './local-variables-sync';\n\nexport const localVariablesIntegration = (options: LocalVariablesIntegrationOptions = {}): Integration => {\n  return NODE_VERSION.major < 19 ? localVariablesSyncIntegration(options) : localVariablesAsyncIntegration(options);\n};\n","import { existsSync, readFileSync } from 'node:fs';\nimport { dirname, join } from 'node:path';\nimport { defineIntegration } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\n\nlet moduleCache: { [key: string]: string };\n\nconst INTEGRATION_NAME = 'Modules';\n\nconst _modulesIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      event.modules = {\n        ...event.modules,\n        ..._getModules(),\n      };\n\n      return event;\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Add node modules / packages to the event.\n */\nexport const modulesIntegration = defineIntegration(_modulesIntegration);\n\n/** Extract information about paths */\nfunction getPaths(): string[] {\n  try {\n    return require.cache ? Object.keys(require.cache as Record<string, unknown>) : [];\n  } catch (e) {\n    return [];\n  }\n}\n\n/** Extract information about package.json modules */\nfunction collectModules(): {\n  [name: string]: string;\n} {\n  const mainPaths = (require.main && require.main.paths) || [];\n  const paths = getPaths();\n  const infos: {\n    [name: string]: string;\n  } = {};\n  const seen: {\n    [path: string]: boolean;\n  } = {};\n\n  paths.forEach(path => {\n    let dir = path;\n\n    /** Traverse directories upward in the search of package.json file */\n    const updir = (): void | (() => void) => {\n      const orig = dir;\n      dir = dirname(orig);\n\n      if (!dir || orig === dir || seen[orig]) {\n        return undefined;\n      }\n      if (mainPaths.indexOf(dir) < 0) {\n        return updir();\n      }\n\n      const pkgfile = join(orig, 'package.json');\n      seen[orig] = true;\n\n      if (!existsSync(pkgfile)) {\n        return updir();\n      }\n\n      try {\n        const info = JSON.parse(readFileSync(pkgfile, 'utf8')) as {\n          name: string;\n          version: string;\n        };\n        infos[info.name] = info.version;\n      } catch (_oO) {\n        // no-empty\n      }\n    };\n\n    updir();\n  });\n\n  return infos;\n}\n\n/** Fetches the list of modules and the versions loaded by the entry file for your node.js app. */\nfunction _getModules(): { [key: string]: string } {\n  if (!moduleCache) {\n    moduleCache = collectModules();\n  }\n  return moduleCache;\n}\n","import { getClient } from '@sentry/core';\nimport { consoleSandbox, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { NodeClient } from '../sdk/client';\n\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\n/**\n * @hidden\n */\nexport function logAndExitProcess(error: Error): void {\n  consoleSandbox(() => {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  });\n\n  const client = getClient<NodeClient>();\n\n  if (client === undefined) {\n    DEBUG_BUILD && logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n    return;\n  }\n\n  const options = client.getOptions();\n  const timeout =\n    (options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout) ||\n    DEFAULT_SHUTDOWN_TIMEOUT;\n  client.close(timeout).then(\n    (result: boolean) => {\n      if (!result) {\n        DEBUG_BUILD && logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n      }\n      global.process.exit(1);\n    },\n    error => {\n      DEBUG_BUILD && logger.error(error);\n    },\n  );\n}\n","import { captureException, defineIntegration } from '@sentry/core';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { NodeClient } from '../sdk/client';\nimport { logAndExitProcess } from '../utils/errorhandling';\n\ntype OnFatalErrorHandler = (firstError: Error, secondError?: Error) => void;\n\ntype TaggedListener = NodeJS.UncaughtExceptionListener & {\n  tag?: string;\n};\n\ninterface OnUncaughtExceptionOptions {\n  /**\n   * Controls if the SDK should register a handler to exit the process on uncaught errors:\n   * - `true`: The SDK will exit the process on all uncaught errors.\n   * - `false`: The SDK will only exit the process when there are no other `uncaughtException` handlers attached.\n   *\n   * Default: `false`\n   */\n  exitEvenIfOtherHandlersAreRegistered: boolean;\n\n  /**\n   * This is called when an uncaught error would cause the process to exit.\n   *\n   * @param firstError Uncaught error causing the process to exit\n   * @param secondError Will be set if the handler was called multiple times. This can happen either because\n   * `onFatalError` itself threw, or because an independent error happened somewhere else while `onFatalError`\n   * was running.\n   */\n  onFatalError?(this: void, firstError: Error, secondError?: Error): void;\n}\n\nconst INTEGRATION_NAME = 'OnUncaughtException';\n\n/**\n * Add a global exception handler.\n */\nexport const onUncaughtExceptionIntegration = defineIntegration((options: Partial<OnUncaughtExceptionOptions> = {}) => {\n  const optionsWithDefaults = {\n    exitEvenIfOtherHandlersAreRegistered: false,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client: NodeClient) {\n      global.process.on('uncaughtException', makeErrorHandler(client, optionsWithDefaults));\n    },\n  };\n});\n\ntype ErrorHandler = { _errorHandler: boolean } & ((error: Error) => void);\n\n/** Exported only for tests */\nexport function makeErrorHandler(client: NodeClient, options: OnUncaughtExceptionOptions): ErrorHandler {\n  const timeout = 2000;\n  let caughtFirstError: boolean = false;\n  let caughtSecondError: boolean = false;\n  let calledFatalError: boolean = false;\n  let firstError: Error;\n\n  const clientOptions = client.getOptions();\n\n  return Object.assign(\n    (error: Error): void => {\n      let onFatalError: OnFatalErrorHandler = logAndExitProcess;\n\n      if (options.onFatalError) {\n        onFatalError = options.onFatalError;\n      } else if (clientOptions.onFatalError) {\n        onFatalError = clientOptions.onFatalError as OnFatalErrorHandler;\n      }\n\n      // Attaching a listener to `uncaughtException` will prevent the node process from exiting. We generally do not\n      // want to alter this behaviour so we check for other listeners that users may have attached themselves and adjust\n      // exit behaviour of the SDK accordingly:\n      // - If other listeners are attached, do not exit.\n      // - If the only listener attached is ours, exit.\n      const userProvidedListenersCount = (global.process.listeners('uncaughtException') as TaggedListener[]).filter(\n        listener => {\n          // There are 3 listeners we ignore:\n          return (\n            // as soon as we're using domains this listener is attached by node itself\n            listener.name !== 'domainUncaughtExceptionClear' &&\n            // the handler we register for tracing\n            listener.tag !== 'sentry_tracingErrorCallback' &&\n            // the handler we register in this integration\n            (listener as ErrorHandler)._errorHandler !== true\n          );\n        },\n      ).length;\n\n      const processWouldExit = userProvidedListenersCount === 0;\n      const shouldApplyFatalHandlingLogic = options.exitEvenIfOtherHandlersAreRegistered || processWouldExit;\n\n      if (!caughtFirstError) {\n        // this is the first uncaught error and the ultimate reason for shutting down\n        // we want to do absolutely everything possible to ensure it gets captured\n        // also we want to make sure we don't go recursion crazy if more errors happen after this one\n        firstError = error;\n        caughtFirstError = true;\n\n        if (getClient() === client) {\n          captureException(error, {\n            originalException: error,\n            captureContext: {\n              level: 'fatal',\n            },\n            mechanism: {\n              handled: false,\n              type: 'onuncaughtexception',\n            },\n          });\n        }\n\n        if (!calledFatalError && shouldApplyFatalHandlingLogic) {\n          calledFatalError = true;\n          onFatalError(error);\n        }\n      } else {\n        if (shouldApplyFatalHandlingLogic) {\n          if (calledFatalError) {\n            // we hit an error *after* calling onFatalError - pretty boned at this point, just shut it down\n            DEBUG_BUILD &&\n              logger.warn(\n                'uncaught exception after calling fatal error shutdown callback - this is bad! forcing shutdown',\n              );\n            logAndExitProcess(error);\n          } else if (!caughtSecondError) {\n            // two cases for how we can hit this branch:\n            //   - capturing of first error blew up and we just caught the exception from that\n            //     - quit trying to capture, proceed with shutdown\n            //   - a second independent error happened while waiting for first error to capture\n            //     - want to avoid causing premature shutdown before first error capture finishes\n            // it's hard to immediately tell case 1 from case 2 without doing some fancy/questionable domain stuff\n            // so let's instead just delay a bit before we proceed with our action here\n            // in case 1, we just wait a bit unnecessarily but ultimately do the same thing\n            // in case 2, the delay hopefully made us wait long enough for the capture to finish\n            // two potential nonideal outcomes:\n            //   nonideal case 1: capturing fails fast, we sit around for a few seconds unnecessarily before proceeding correctly by calling onFatalError\n            //   nonideal case 2: case 2 happens, 1st error is captured but slowly, timeout completes before capture and we treat second error as the sendErr of (nonexistent) failure from trying to capture first error\n            // note that after hitting this branch, we might catch more errors where (caughtSecondError && !calledFatalError)\n            //   we ignore them - they don't matter to us, we're just waiting for the second error timeout to finish\n            caughtSecondError = true;\n            setTimeout(() => {\n              if (!calledFatalError) {\n                // it was probably case 1, let's treat err as the sendErr and call onFatalError\n                calledFatalError = true;\n                onFatalError(firstError, error);\n              } else {\n                // it was probably case 2, our first error finished capturing while we waited, cool, do nothing\n              }\n            }, timeout); // capturing could take at least sendTimeout to fail, plus an arbitrary second for how long it takes to collect surrounding source etc\n          }\n        }\n      }\n    },\n    { _errorHandler: true },\n  );\n}\n","import { captureException, defineIntegration, getClient } from '@sentry/core';\nimport type { Client, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox } from '@sentry/utils';\nimport { logAndExitProcess } from '../utils/errorhandling';\n\ntype UnhandledRejectionMode = 'none' | 'warn' | 'strict';\n\ninterface OnUnhandledRejectionOptions {\n  /**\n   * Option deciding what to do after capturing unhandledRejection,\n   * that mimicks behavior of node's --unhandled-rejection flag.\n   */\n  mode: UnhandledRejectionMode;\n}\n\nconst INTEGRATION_NAME = 'OnUnhandledRejection';\n\nconst _onUnhandledRejectionIntegration = ((options: Partial<OnUnhandledRejectionOptions> = {}) => {\n  const mode = options.mode || 'warn';\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      global.process.on('unhandledRejection', makeUnhandledPromiseHandler(client, { mode }));\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Add a global promise rejection handler.\n */\nexport const onUnhandledRejectionIntegration = defineIntegration(_onUnhandledRejectionIntegration);\n\n/**\n * Send an exception with reason\n * @param reason string\n * @param promise promise\n *\n * Exported only for tests.\n */\nexport function makeUnhandledPromiseHandler(\n  client: Client,\n  options: OnUnhandledRejectionOptions,\n): (reason: unknown, promise: unknown) => void {\n  return function sendUnhandledPromise(reason: unknown, promise: unknown): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    captureException(reason, {\n      originalException: promise,\n      captureContext: {\n        extra: { unhandledPromiseRejection: true },\n      },\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n\n    handleRejection(reason, options);\n  };\n}\n\n/**\n * Handler for `mode` option\n\n */\nfunction handleRejection(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason: any,\n  options: OnUnhandledRejectionOptions,\n): void {\n  // https://github.com/nodejs/node/blob/7cf6f9e964aa00772965391c23acda6d71972a9a/lib/internal/process/promises.js#L234-L240\n  const rejectionWarning =\n    'This error originated either by ' +\n    'throwing inside of an async function without a catch block, ' +\n    'or by rejecting a promise which was not handled with .catch().' +\n    ' The promise rejected with the reason:';\n\n  /* eslint-disable no-console */\n  if (options.mode === 'warn') {\n    consoleSandbox(() => {\n      console.warn(rejectionWarning);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      console.error(reason && reason.stack ? reason.stack : reason);\n    });\n  } else if (options.mode === 'strict') {\n    consoleSandbox(() => {\n      console.warn(rejectionWarning);\n    });\n    logAndExitProcess(reason);\n  }\n  /* eslint-enable no-console */\n}\n","import type { Instrumentation } from '@opentelemetry/instrumentation';\nimport { addOpenTelemetryInstrumentation } from '@sentry/opentelemetry';\n\nconst INSTRUMENTED: Record<string, Instrumentation> = {};\n\n/**\n * Instrument an OpenTelemetry instrumentation once.\n * This will skip running instrumentation again if it was already instrumented.\n */\nexport function generateInstrumentOnce<Options = unknown>(\n  name: string,\n  creator: (options?: Options) => Instrumentation,\n): ((options?: Options) => void) & { id: string } {\n  return Object.assign(\n    (options?: Options) => {\n      const instrumented = INSTRUMENTED[name];\n      if (instrumented) {\n        // If options are provided, ensure we update them\n        if (options) {\n          instrumented.setConfig(options);\n        }\n        return;\n      }\n\n      const instrumentation = creator(options);\n      INSTRUMENTED[name] = instrumentation;\n\n      addOpenTelemetryInstrumentation(instrumentation);\n    },\n    { id: name },\n  );\n}\n","/** Detect CommonJS. */\nexport function isCjs(): boolean {\n  return typeof require !== 'undefined';\n}\n","import type * as http from 'node:http';\nimport { ExpressInstrumentation } from '@opentelemetry/instrumentation-express';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP, defineIntegration, getDefaultIsolationScope, spanToJSON } from '@sentry/core';\nimport { captureException, getClient, getIsolationScope } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport { generateInstrumentOnce } from '../../otel/instrument';\nimport type { NodeClient } from '../../sdk/client';\nimport { addOriginToSpan } from '../../utils/addOriginToSpan';\nimport { ensureIsWrapped } from '../../utils/ensureIsWrapped';\n\nconst INTEGRATION_NAME = 'Express';\n\nexport const instrumentExpress = generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new ExpressInstrumentation({\n      requestHook(span) {\n        addOriginToSpan(span, 'auto.http.otel.express');\n\n        const attributes = spanToJSON(span).data || {};\n        // this is one of: middleware, request_handler, router\n        const type = attributes['express.type'];\n\n        if (type) {\n          span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, `${type}.express`);\n        }\n\n        // Also update the name, we don't need to \"middleware - \" prefix\n        const name = attributes['express.name'];\n        if (typeof name === 'string') {\n          span.updateName(name);\n        }\n      },\n      spanNameHook(info, defaultName) {\n        if (getIsolationScope() === getDefaultIsolationScope()) {\n          DEBUG_BUILD &&\n            logger.warn('Isolation scope is still default isolation scope - skipping setting transactionName');\n          return defaultName;\n        }\n        if (info.layerType === 'request_handler') {\n          // type cast b/c Otel unfortunately types info.request as any :(\n          const req = info.request as { method?: string };\n          const method = req.method ? req.method.toUpperCase() : 'GET';\n          getIsolationScope().setTransactionName(`${method} ${info.route}`);\n        }\n        return defaultName;\n      },\n    }),\n);\n\nconst _expressIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentExpress();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Express integration\n *\n * Capture tracing data for express.\n * In order to capture exceptions, you have to call `setupExpressErrorHandler(app)` before any other middleware and after all controllers.\n */\nexport const expressIntegration = defineIntegration(_expressIntegration);\n\ninterface MiddlewareError extends Error {\n  status?: number | string;\n  statusCode?: number | string;\n  status_code?: number | string;\n  output?: {\n    statusCode?: number | string;\n  };\n}\n\ntype ExpressMiddleware = (\n  error: MiddlewareError,\n  req: http.IncomingMessage,\n  res: http.ServerResponse,\n  next: (error: MiddlewareError) => void,\n) => void;\n\ninterface ExpressHandlerOptions {\n  /**\n   * Callback method deciding whether error should be captured and sent to Sentry\n   * @param error Captured middleware error\n   */\n  shouldHandleError?(this: void, error: MiddlewareError): boolean;\n}\n\n/**\n * An Express-compatible error handler.\n */\nexport function expressErrorHandler(options?: ExpressHandlerOptions): ExpressMiddleware {\n  return function sentryErrorMiddleware(\n    error: MiddlewareError,\n    _req: http.IncomingMessage,\n    res: http.ServerResponse,\n    next: (error: MiddlewareError) => void,\n  ): void {\n    const shouldHandleError = options?.shouldHandleError || defaultShouldHandleError;\n\n    if (shouldHandleError(error)) {\n      const client = getClient<NodeClient>();\n      if (client && client.getOptions().autoSessionTracking) {\n        // Check if the `SessionFlusher` is instantiated on the client to go into this branch that marks the\n        // `requestSession.status` as `Crashed`, and this check is necessary because the `SessionFlusher` is only\n        // instantiated when the the`requestHandler` middleware is initialised, which indicates that we should be\n        // running in SessionAggregates mode\n        const isSessionAggregatesMode = client['_sessionFlusher'] !== undefined;\n        if (isSessionAggregatesMode) {\n          const requestSession = getIsolationScope().getRequestSession();\n          // If an error bubbles to the `errorHandler`, then this is an unhandled error, and should be reported as a\n          // Crashed session. The `_requestSession.status` is checked to ensure that this error is happening within\n          // the bounds of a request, and if so the status is updated\n          if (requestSession && requestSession.status !== undefined) {\n            requestSession.status = 'crashed';\n          }\n        }\n      }\n\n      const eventId = captureException(error, { mechanism: { type: 'middleware', handled: false } });\n      (res as { sentry?: string }).sentry = eventId;\n      next(error);\n\n      return;\n    }\n\n    next(error);\n  };\n}\n\n/**\n * Setup an error handler for Express.\n * The error handler must be before any other middleware and after all controllers.\n */\nexport function setupExpressErrorHandler(\n  app: { use: (middleware: ExpressMiddleware) => unknown },\n  options?: ExpressHandlerOptions,\n): void {\n  app.use(expressErrorHandler(options));\n  ensureIsWrapped(app.use, 'express');\n}\n\nfunction getStatusCodeFromResponse(error: MiddlewareError): number {\n  const statusCode = error.status || error.statusCode || error.status_code || (error.output && error.output.statusCode);\n  return statusCode ? parseInt(statusCode as string, 10) : 500;\n}\n\n/** Returns true if response code is internal server error */\nfunction defaultShouldHandleError(error: MiddlewareError): boolean {\n  const status = getStatusCodeFromResponse(error);\n  return status >= 500;\n}\n","import { FastifyInstrumentation } from '@opentelemetry/instrumentation-fastify';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  captureException,\n  defineIntegration,\n  getClient,\n  getIsolationScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { IntegrationFn, Span } from '@sentry/types';\nimport { generateInstrumentOnce } from '../../otel/instrument';\nimport { ensureIsWrapped } from '../../utils/ensureIsWrapped';\n\n// We inline the types we care about here\ninterface Fastify {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  register: (plugin: any) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  addHook: (hook: string, handler: (request: any, reply: any, error: Error) => void) => void;\n}\n\n/**\n * Minimal request type containing properties around route information.\n * Works for Fastify 3, 4 and presumably 5.\n */\ninterface FastifyRequestRouteInfo {\n  // since fastify@4.10.0\n  routeOptions?: {\n    url?: string;\n    method?: string;\n  };\n  routerPath?: string;\n}\n\nconst INTEGRATION_NAME = 'Fastify';\n\nexport const instrumentFastify = generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new FastifyInstrumentation({\n      requestHook(span) {\n        addFastifySpanAttributes(span);\n      },\n    }),\n);\n\nconst _fastifyIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentFastify();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Express integration\n *\n * Capture tracing data for fastify.\n */\nexport const fastifyIntegration = defineIntegration(_fastifyIntegration);\n\n/**\n * Setup an error handler for Fastify.\n */\nexport function setupFastifyErrorHandler(fastify: Fastify): void {\n  const plugin = Object.assign(\n    function (fastify: Fastify, _options: unknown, done: () => void): void {\n      fastify.addHook('onError', async (_request, _reply, error) => {\n        captureException(error);\n      });\n\n      // registering `onRequest` hook here instead of using Otel `onRequest` callback b/c `onRequest` hook\n      // is ironically called in the fastify `preHandler` hook which is called later in the lifecycle:\n      // https://fastify.dev/docs/latest/Reference/Lifecycle/\n      fastify.addHook('onRequest', async (request, _reply) => {\n        const reqWithRouteInfo = request as FastifyRequestRouteInfo;\n\n        // Taken from Otel Fastify instrumentation:\n        // https://github.com/open-telemetry/opentelemetry-js-contrib/blob/main/plugins/node/opentelemetry-instrumentation-fastify/src/instrumentation.ts#L94-L96\n        const routeName = reqWithRouteInfo.routeOptions?.url || reqWithRouteInfo.routerPath;\n        const method = reqWithRouteInfo.routeOptions?.method || 'GET';\n\n        getIsolationScope().setTransactionName(`${method} ${routeName}`);\n      });\n\n      done();\n    },\n    {\n      [Symbol.for('skip-override')]: true,\n      [Symbol.for('fastify.display-name')]: 'sentry-fastify-error-handler',\n    },\n  );\n\n  fastify.register(plugin);\n\n  // Sadly, middleware spans do not go through `requestHook`, so we handle those here\n  // We register this hook in this method, because if we register it in the integration `setup`,\n  // it would always run even for users that are not even using fastify\n  const client = getClient();\n  if (client) {\n    client.on('spanStart', span => {\n      addFastifySpanAttributes(span);\n    });\n  }\n\n  ensureIsWrapped(fastify.addHook, 'fastify');\n}\n\nfunction addFastifySpanAttributes(span: Span): void {\n  const attributes = spanToJSON(span).data || {};\n\n  // this is one of: middleware, request_handler\n  const type = attributes['fastify.type'];\n\n  // If this is already set, or we have no fastify span, no need to process again...\n  if (attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] || !type) {\n    return;\n  }\n\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.fastify',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: `${type}.fastify`,\n  });\n\n  // Also update the name, we don't need to \"middleware - \" prefix\n  const name = attributes['fastify.name'] || attributes['plugin.name'] || attributes['hook.name'];\n  if (typeof name === 'string') {\n    // Also remove `fastify -> ` prefix\n    span.updateName(name.replace(/^fastify -> /, ''));\n  }\n}\n","import { GraphQLInstrumentation } from '@opentelemetry/instrumentation-graphql';\nimport { defineIntegration } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport { generateInstrumentOnce } from '../../otel/instrument';\n\nimport { addOriginToSpan } from '../../utils/addOriginToSpan';\n\ninterface GraphqlOptions {\n  /** Do not create spans for resolvers. */\n  ignoreResolveSpans?: boolean;\n\n  /**\n   * Don't create spans for the execution of the default resolver on object properties.\n   *\n   * When a resolver function is not defined on the schema for a field, graphql will\n   * use the default resolver which just looks for a property with that name on the object.\n   * If the property is not a function, it's not very interesting to trace.\n   * This option can reduce noise and number of spans created.\n   */\n  ignoreTrivalResolveSpans?: boolean;\n}\n\nconst INTEGRATION_NAME = 'Graphql';\n\nexport const instrumentGraphql = generateInstrumentOnce<GraphqlOptions>(\n  INTEGRATION_NAME,\n  (_options: GraphqlOptions = {}) => {\n    const options = {\n      ignoreResolveSpans: true,\n      ignoreTrivialResolveSpans: true,\n      ..._options,\n    };\n\n    return new GraphQLInstrumentation({\n      ...options,\n      responseHook(span) {\n        addOriginToSpan(span, 'auto.graphql.otel.graphql');\n      },\n    });\n  },\n);\n\nconst _graphqlIntegration = ((options: GraphqlOptions = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentGraphql(options);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * GraphQL integration\n *\n * Capture tracing data for GraphQL.\n */\nexport const graphqlIntegration = defineIntegration(_graphqlIntegration);\n","import { MongoDBInstrumentation } from '@opentelemetry/instrumentation-mongodb';\nimport { defineIntegration } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport { generateInstrumentOnce } from '../../otel/instrument';\n\nimport { addOriginToSpan } from '../../utils/addOriginToSpan';\n\nconst INTEGRATION_NAME = 'Mongo';\n\nexport const instrumentMongo = generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new MongoDBInstrumentation({\n      responseHook(span) {\n        addOriginToSpan(span, 'auto.db.otel.mongo');\n      },\n    }),\n);\n\nconst _mongoIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentMongo();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * MongoDB integration\n *\n * Capture tracing data for MongoDB.\n */\nexport const mongoIntegration = defineIntegration(_mongoIntegration);\n","import { MongooseInstrumentation } from '@opentelemetry/instrumentation-mongoose';\nimport { defineIntegration } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport { generateInstrumentOnce } from '../../otel/instrument';\n\nimport { addOriginToSpan } from '../../utils/addOriginToSpan';\n\nconst INTEGRATION_NAME = 'Mongoose';\n\nexport const instrumentMongoose = generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new MongooseInstrumentation({\n      responseHook(span) {\n        addOriginToSpan(span, 'auto.db.otel.mongoose');\n      },\n    }),\n);\n\nconst _mongooseIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentMongoose();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Mongoose integration\n *\n * Capture tracing data for Mongoose.\n */\nexport const mongooseIntegration = defineIntegration(_mongooseIntegration);\n","import { MySQLInstrumentation } from '@opentelemetry/instrumentation-mysql';\nimport { defineIntegration } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport { generateInstrumentOnce } from '../../otel/instrument';\n\nconst INTEGRATION_NAME = 'Mysql';\n\nexport const instrumentMysql = generateInstrumentOnce(INTEGRATION_NAME, () => new MySQLInstrumentation({}));\n\nconst _mysqlIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentMysql();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * MySQL integration\n *\n * Capture tracing data for mysql.\n */\nexport const mysqlIntegration = defineIntegration(_mysqlIntegration);\n","import { MySQL2Instrumentation } from '@opentelemetry/instrumentation-mysql2';\nimport { defineIntegration } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport { generateInstrumentOnce } from '../../otel/instrument';\n\nimport { addOriginToSpan } from '../../utils/addOriginToSpan';\n\nconst INTEGRATION_NAME = 'Mysql2';\n\nexport const instrumentMysql2 = generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new MySQL2Instrumentation({\n      responseHook(span) {\n        addOriginToSpan(span, 'auto.db.otel.mysql2');\n      },\n    }),\n);\n\nconst _mysql2Integration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentMysql2();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * MySQL2 integration\n *\n * Capture tracing data for mysql2\n */\nexport const mysql2Integration = defineIntegration(_mysql2Integration);\n","import type { CommandArgs as IORedisCommandArgs } from '@opentelemetry/instrumentation-ioredis';\nimport { flatten } from '@sentry/utils';\n\nconst SINGLE_ARG_COMMANDS = ['get', 'set', 'setex'];\n\nexport const GET_COMMANDS = ['get', 'mget'];\nexport const SET_COMMANDS = ['set', 'setex'];\n// todo: del, expire\n\n/** Checks if a given command is in the list of redis commands.\n *  Useful because commands can come in lowercase or uppercase (depending on the library). */\nexport function isInCommands(redisCommands: string[], command: string): boolean {\n  return redisCommands.includes(command.toLowerCase());\n}\n\n/** Determine cache operation based on redis statement */\nexport function getCacheOperation(\n  command: string,\n): 'cache.get' | 'cache.put' | 'cache.remove' | 'cache.flush' | undefined {\n  if (isInCommands(GET_COMMANDS, command)) {\n    return 'cache.get';\n  } else if (isInCommands(SET_COMMANDS, command)) {\n    return 'cache.put';\n  } else {\n    return undefined;\n  }\n}\n\nfunction keyHasPrefix(key: string, prefixes: string[]): boolean {\n  return prefixes.some(prefix => key.startsWith(prefix));\n}\n\n/** Safely converts a redis key to a string (comma-separated if there are multiple keys) */\nexport function getCacheKeySafely(redisCommand: string, cmdArgs: IORedisCommandArgs): string[] | undefined {\n  try {\n    if (cmdArgs.length === 0) {\n      return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const processArg = (arg: string | Buffer | number | any[]): string[] => {\n      if (typeof arg === 'string' || typeof arg === 'number' || Buffer.isBuffer(arg)) {\n        return [arg.toString()];\n      } else if (Array.isArray(arg)) {\n        return flatten(arg.map(arg => processArg(arg)));\n      } else {\n        return ['<unknown>'];\n      }\n    };\n\n    const firstArg = cmdArgs[0];\n    if (isInCommands(SINGLE_ARG_COMMANDS, redisCommand) && firstArg != null) {\n      return processArg(firstArg);\n    }\n\n    return flatten(cmdArgs.map(arg => processArg(arg)));\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/** Determines whether a redis operation should be considered as \"cache operation\" by checking if a key is prefixed.\n *  We only support certain commands (such as 'set', 'get', 'mget'). */\nexport function shouldConsiderForCache(redisCommand: string, keys: string[], prefixes: string[]): boolean {\n  if (!getCacheOperation(redisCommand)) {\n    return false;\n  }\n\n  for (const key of keys) {\n    if (keyHasPrefix(key, prefixes)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/** Calculates size based on the cache response value */\nexport function calculateCacheItemSize(response: unknown): number | undefined {\n  const getSize = (value: unknown): number | undefined => {\n    try {\n      if (Buffer.isBuffer(value)) return value.byteLength;\n      else if (typeof value === 'string') return value.length;\n      else if (typeof value === 'number') return value.toString().length;\n      else if (value === null || value === undefined) return 0;\n      return JSON.stringify(value).length;\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  return Array.isArray(response)\n    ? response.reduce((acc: number | undefined, curr) => {\n        const size = getSize(curr);\n        return typeof size === 'number' ? (acc !== undefined ? acc + size : size) : acc;\n      }, 0)\n    : getSize(response);\n}\n","import type { Span } from '@opentelemetry/api';\nimport type { RedisResponseCustomAttributeFunction } from '@opentelemetry/instrumentation-ioredis';\nimport { IORedisInstrumentation } from '@opentelemetry/instrumentation-ioredis';\nimport { RedisInstrumentation } from '@opentelemetry/instrumentation-redis-4';\nimport {\n  SEMANTIC_ATTRIBUTE_CACHE_HIT,\n  SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE,\n  SEMANTIC_ATTRIBUTE_CACHE_KEY,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  defineIntegration,\n  spanToJSON,\n} from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport { truncate } from '@sentry/utils';\nimport { generateInstrumentOnce } from '../../otel/instrument';\nimport {\n  GET_COMMANDS,\n  calculateCacheItemSize,\n  getCacheKeySafely,\n  getCacheOperation,\n  isInCommands,\n  shouldConsiderForCache,\n} from '../../utils/redisCache';\n\ninterface RedisOptions {\n  cachePrefixes?: string[];\n}\n\nconst INTEGRATION_NAME = 'Redis';\n\nlet _redisOptions: RedisOptions = {};\n\nconst cacheResponseHook: RedisResponseCustomAttributeFunction = (span: Span, redisCommand, cmdArgs, response) => {\n  span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, 'auto.db.otel.redis');\n\n  const safeKey = getCacheKeySafely(redisCommand, cmdArgs);\n  const cacheOperation = getCacheOperation(redisCommand);\n\n  if (\n    !safeKey ||\n    !cacheOperation ||\n    !_redisOptions?.cachePrefixes ||\n    !shouldConsiderForCache(redisCommand, safeKey, _redisOptions.cachePrefixes)\n  ) {\n    // not relevant for cache\n    return;\n  }\n\n  // otel/ioredis seems to be using the old standard, as there was a change to those params: https://github.com/open-telemetry/opentelemetry-specification/issues/3199\n  // We are using params based on the docs: https://opentelemetry.io/docs/specs/semconv/attributes-registry/network/\n  const networkPeerAddress = spanToJSON(span).data?.['net.peer.name'];\n  const networkPeerPort = spanToJSON(span).data?.['net.peer.port'];\n  if (networkPeerPort && networkPeerAddress) {\n    span.setAttributes({ 'network.peer.address': networkPeerAddress, 'network.peer.port': networkPeerPort });\n  }\n\n  const cacheItemSize = calculateCacheItemSize(response);\n\n  if (cacheItemSize) {\n    span.setAttribute(SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE, cacheItemSize);\n  }\n\n  if (isInCommands(GET_COMMANDS, redisCommand) && cacheItemSize !== undefined) {\n    span.setAttribute(SEMANTIC_ATTRIBUTE_CACHE_HIT, cacheItemSize > 0);\n  }\n\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: cacheOperation,\n    [SEMANTIC_ATTRIBUTE_CACHE_KEY]: safeKey,\n  });\n\n  const spanDescription = safeKey.join(', ');\n\n  span.updateName(truncate(spanDescription, 1024));\n};\n\nconst instrumentIORedis = generateInstrumentOnce('IORedis', () => {\n  return new IORedisInstrumentation({\n    responseHook: cacheResponseHook,\n  });\n});\n\nconst instrumentRedis4 = generateInstrumentOnce('Redis-4', () => {\n  return new RedisInstrumentation({\n    responseHook: cacheResponseHook,\n  });\n});\n\n/** To be able to preload all Redis OTel instrumentations with just one ID (\"Redis\"), all the instrumentations are generated in this one function  */\nexport const instrumentRedis = Object.assign(\n  (): void => {\n    instrumentIORedis();\n    instrumentRedis4();\n\n    // todo: implement them gradually\n    // new LegacyRedisInstrumentation({}),\n  },\n  { id: INTEGRATION_NAME },\n);\n\nconst _redisIntegration = ((options: RedisOptions = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      _redisOptions = options;\n      instrumentRedis();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Redis integration for \"ioredis\"\n *\n * Capture tracing data for redis and ioredis.\n */\nexport const redisIntegration = defineIntegration(_redisIntegration);\n","import { NestInstrumentation } from '@opentelemetry/instrumentation-nestjs-core';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  captureException,\n  defineIntegration,\n  getClient,\n  getDefaultIsolationScope,\n  getIsolationScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { IntegrationFn, Span } from '@sentry/types';\nimport { logger } from '@sentry/utils';\nimport { generateInstrumentOnce } from '../../otel/instrument';\n\ninterface MinimalNestJsExecutionContext {\n  getType: () => string;\n\n  switchToHttp: () => {\n    // minimal request object\n    // according to official types, all properties are required but\n    // let's play it safe and assume they're optional\n    getRequest: () => {\n      route?: {\n        path?: string;\n      };\n      method?: string;\n    };\n  };\n}\n\ninterface NestJsErrorFilter {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  catch(exception: any, host: any): void;\n}\n\ninterface MinimalNestJsApp {\n  useGlobalFilters: (arg0: NestJsErrorFilter) => void;\n  useGlobalInterceptors: (interceptor: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    intercept: (context: MinimalNestJsExecutionContext, next: { handle: () => any }) => any;\n  }) => void;\n}\n\nconst INTEGRATION_NAME = 'Nest';\n\nexport const instrumentNest = generateInstrumentOnce(INTEGRATION_NAME, () => new NestInstrumentation());\n\nconst _nestIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentNest();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Nest framework integration\n *\n * Capture tracing data for nest.\n */\nexport const nestIntegration = defineIntegration(_nestIntegration);\n\n/**\n * Setup an error handler for Nest.\n */\nexport function setupNestErrorHandler(app: MinimalNestJsApp, baseFilter: NestJsErrorFilter): void {\n  // Sadly, NestInstrumentation has no requestHook, so we need to add the attributes here\n  // We register this hook in this method, because if we register it in the integration `setup`,\n  // it would always run even for users that are not even using Nest.js\n  const client = getClient();\n  if (client) {\n    client.on('spanStart', span => {\n      addNestSpanAttributes(span);\n    });\n  }\n\n  app.useGlobalInterceptors({\n    intercept(context, next) {\n      if (getIsolationScope() === getDefaultIsolationScope()) {\n        logger.warn('Isolation scope is still the default isolation scope, skipping setting transactionName.');\n        return next.handle();\n      }\n\n      if (context.getType() === 'http') {\n        const req = context.switchToHttp().getRequest();\n        if (req.route) {\n          getIsolationScope().setTransactionName(`${req.method?.toUpperCase() || 'GET'} ${req.route.path}`);\n        }\n      }\n\n      return next.handle();\n    },\n  });\n\n  const wrappedFilter = new Proxy(baseFilter, {\n    get(target, prop, receiver) {\n      if (prop === 'catch') {\n        const originalCatch = Reflect.get(target, prop, receiver);\n\n        return (exception: unknown, host: unknown) => {\n          const status_code = (exception as { status?: number }).status;\n\n          // don't report expected errors\n          if (status_code !== undefined && status_code >= 400 && status_code < 500) {\n            return originalCatch.apply(target, [exception, host]);\n          }\n\n          captureException(exception);\n          return originalCatch.apply(target, [exception, host]);\n        };\n      }\n      return Reflect.get(target, prop, receiver);\n    },\n  });\n\n  app.useGlobalFilters(wrappedFilter);\n}\n\nfunction addNestSpanAttributes(span: Span): void {\n  const attributes = spanToJSON(span).data || {};\n\n  // this is one of: app_creation, request_context, handler\n  const type = attributes['nestjs.type'];\n\n  // If this is already set, or we have no nest.js span, no need to process again...\n  if (attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] || !type) {\n    return;\n  }\n\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.nestjs',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: `${type}.nestjs`,\n  });\n}\n","import { PgInstrumentation } from '@opentelemetry/instrumentation-pg';\nimport { defineIntegration } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport { generateInstrumentOnce } from '../../otel/instrument';\n\nimport { addOriginToSpan } from '../../utils/addOriginToSpan';\n\nconst INTEGRATION_NAME = 'Postgres';\n\nexport const instrumentPostgres = generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new PgInstrumentation({\n      requireParentSpan: true,\n      requestHook(span) {\n        addOriginToSpan(span, 'auto.db.otel.postgres');\n      },\n    }),\n);\n\nconst _postgresIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentPostgres();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Postgres integration\n *\n * Capture tracing data for pg.\n */\nexport const postgresIntegration = defineIntegration(_postgresIntegration);\n","import { HapiInstrumentation } from '@opentelemetry/instrumentation-hapi';\nimport {\n  SDK_VERSION,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  captureException,\n  defineIntegration,\n  getClient,\n  getDefaultIsolationScope,\n  getIsolationScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { IntegrationFn, Span } from '@sentry/types';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../../debug-build';\nimport { generateInstrumentOnce } from '../../../otel/instrument';\nimport { ensureIsWrapped } from '../../../utils/ensureIsWrapped';\nimport type { Request, RequestEvent, Server } from './types';\n\nconst INTEGRATION_NAME = 'Hapi';\n\nexport const instrumentHapi = generateInstrumentOnce(INTEGRATION_NAME, () => new HapiInstrumentation());\n\nconst _hapiIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentHapi();\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Hapi integration\n *\n * Capture tracing data for Hapi.\n * If you also want to capture errors, you need to call `setupHapiErrorHandler(server)` after you set up your server.\n */\nexport const hapiIntegration = defineIntegration(_hapiIntegration);\n\nfunction isErrorEvent(event: RequestEvent): event is RequestEvent {\n  return event && (event as RequestEvent).error !== undefined;\n}\n\nfunction sendErrorToSentry(errorData: object): void {\n  captureException(errorData, {\n    mechanism: {\n      type: 'hapi',\n      handled: false,\n      data: {\n        function: 'hapiErrorPlugin',\n      },\n    },\n  });\n}\n\nexport const hapiErrorPlugin = {\n  name: 'SentryHapiErrorPlugin',\n  version: SDK_VERSION,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  register: async function (serverArg: Record<any, any>) {\n    const server = serverArg as unknown as Server;\n\n    server.events.on({ name: 'request', channels: ['error'] }, (request: Request, event: RequestEvent) => {\n      if (getIsolationScope() !== getDefaultIsolationScope()) {\n        const route = request.route;\n        if (route && route.path) {\n          getIsolationScope().setTransactionName(`${route.method?.toUpperCase() || 'GET'} ${route.path}`);\n        }\n      } else {\n        DEBUG_BUILD &&\n          logger.warn('Isolation scope is still the default isolation scope - skipping setting transactionName');\n      }\n\n      if (isErrorEvent(event)) {\n        sendErrorToSentry(event.error);\n      }\n    });\n  },\n};\n\n/**\n * Add a Hapi plugin to capture errors to Sentry.\n */\nexport async function setupHapiErrorHandler(server: Server): Promise<void> {\n  await server.register(hapiErrorPlugin);\n\n  // Sadly, middleware spans do not go through `requestHook`, so we handle those here\n  // We register this hook in this method, because if we register it in the integration `setup`,\n  // it would always run even for users that are not even using hapi\n  const client = getClient();\n  if (client) {\n    client.on('spanStart', span => {\n      addHapiSpanAttributes(span);\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  ensureIsWrapped(server.register, 'hapi');\n}\n\nfunction addHapiSpanAttributes(span: Span): void {\n  const attributes = spanToJSON(span).data || {};\n\n  // this is one of: router, plugin, server.ext\n  const type = attributes['hapi.type'];\n\n  // If this is already set, or we have no Hapi span, no need to process again...\n  if (attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] || !type) {\n    return;\n  }\n\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.hapi',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: `${type}.hapi`,\n  });\n}\n","import { KoaInstrumentation } from '@opentelemetry/instrumentation-koa';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  captureException,\n  defineIntegration,\n  getDefaultIsolationScope,\n  getIsolationScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { IntegrationFn, Span } from '@sentry/types';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport { generateInstrumentOnce } from '../../otel/instrument';\nimport { ensureIsWrapped } from '../../utils/ensureIsWrapped';\n\nconst INTEGRATION_NAME = 'Koa';\n\nexport const instrumentKoa = generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new KoaInstrumentation({\n      requestHook(span, info) {\n        addKoaSpanAttributes(span);\n\n        if (getIsolationScope() === getDefaultIsolationScope()) {\n          DEBUG_BUILD && logger.warn('Isolation scope is default isolation scope - skipping setting transactionName');\n          return;\n        }\n        const attributes = spanToJSON(span).data;\n        const route = attributes && attributes[SEMATTRS_HTTP_ROUTE];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const method: string = info?.context?.request?.method?.toUpperCase() || 'GET';\n        if (route) {\n          getIsolationScope().setTransactionName(`${method} ${route}`);\n        }\n      },\n    }),\n);\n\nconst _koaIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentKoa();\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const koaIntegration = defineIntegration(_koaIntegration);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const setupKoaErrorHandler = (app: { use: (arg0: (ctx: any, next: any) => Promise<void>) => void }): void => {\n  app.use(async (ctx, next) => {\n    try {\n      await next();\n    } catch (error) {\n      captureException(error);\n      throw error;\n    }\n  });\n\n  ensureIsWrapped(app.use, 'koa');\n};\n\nfunction addKoaSpanAttributes(span: Span): void {\n  span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, 'auto.http.otel.koa');\n\n  const attributes = spanToJSON(span).data || {};\n\n  // this is one of: middleware, router\n  const type = attributes['koa.type'];\n\n  if (type) {\n    span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, `${type}.koa`);\n  }\n\n  // Also update the name\n  const name = attributes['koa.name'];\n  if (typeof name === 'string') {\n    // Somehow, name is sometimes `''` for middleware spans\n    // See: https://github.com/open-telemetry/opentelemetry-js-contrib/issues/2220\n    span.updateName(name || '< unknown >');\n  }\n}\n","import { ConnectInstrumentation } from '@opentelemetry/instrumentation-connect';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  captureException,\n  defineIntegration,\n  getClient,\n  spanToJSON,\n} from '@sentry/core';\nimport type { IntegrationFn, Span } from '@sentry/types';\nimport { generateInstrumentOnce } from '../../otel/instrument';\nimport { ensureIsWrapped } from '../../utils/ensureIsWrapped';\n\ntype ConnectApp = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  use: (middleware: any) => void;\n};\n\nconst INTEGRATION_NAME = 'Connect';\n\nexport const instrumentConnect = generateInstrumentOnce(INTEGRATION_NAME, () => new ConnectInstrumentation());\n\nconst _connectIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentConnect();\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const connectIntegration = defineIntegration(_connectIntegration);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction connectErrorMiddleware(err: any, req: any, res: any, next: any): void {\n  captureException(err);\n  next(err);\n}\n\nexport const setupConnectErrorHandler = (app: ConnectApp): void => {\n  app.use(connectErrorMiddleware);\n\n  // Sadly, ConnectInstrumentation has no requestHook, so we need to add the attributes here\n  // We register this hook in this method, because if we register it in the integration `setup`,\n  // it would always run even for users that are not even using connect\n  const client = getClient();\n  if (client) {\n    client.on('spanStart', span => {\n      addConnectSpanAttributes(span);\n    });\n  }\n\n  ensureIsWrapped(app.use, 'connect');\n};\n\nfunction addConnectSpanAttributes(span: Span): void {\n  const attributes = spanToJSON(span).data || {};\n\n  // this is one of: middleware, request_handler\n  const type = attributes['connect.type'];\n\n  // If this is already set, or we have no connect span, no need to process again...\n  if (attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] || !type) {\n    return;\n  }\n\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.connect',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: `${type}.connect`,\n  });\n\n  // Also update the name, we don't need to \"middleware - \" prefix\n  const name = attributes['connect.name'];\n  if (typeof name === 'string') {\n    span.updateName(name);\n  }\n}\n","import type { Integration } from '@sentry/types';\nimport { instrumentHttp } from '../http';\n\nimport { connectIntegration, instrumentConnect } from './connect';\nimport { expressIntegration, instrumentExpress } from './express';\nimport { fastifyIntegration, instrumentFastify } from './fastify';\nimport { graphqlIntegration, instrumentGraphql } from './graphql';\nimport { hapiIntegration, instrumentHapi } from './hapi';\nimport { instrumentKoa, koaIntegration } from './koa';\nimport { instrumentMongo, mongoIntegration } from './mongo';\nimport { instrumentMongoose, mongooseIntegration } from './mongoose';\nimport { instrumentMysql, mysqlIntegration } from './mysql';\nimport { instrumentMysql2, mysql2Integration } from './mysql2';\nimport { instrumentNest, nestIntegration } from './nest';\nimport { instrumentPostgres, postgresIntegration } from './postgres';\nimport { instrumentRedis, redisIntegration } from './redis';\n\n/**\n * With OTEL, all performance integrations will be added, as OTEL only initializes them when the patched package is actually required.\n */\nexport function getAutoPerformanceIntegrations(): Integration[] {\n  return [\n    expressIntegration(),\n    fastifyIntegration(),\n    graphqlIntegration(),\n    mongoIntegration(),\n    mongooseIntegration(),\n    mysqlIntegration(),\n    mysql2Integration(),\n    redisIntegration(),\n    postgresIntegration(),\n    // For now, we do not include prisma by default because it has ESM issues\n    // See https://github.com/prisma/prisma/issues/23410\n    // TODO v8: Figure out a better solution for this, maybe only disable in ESM mode?\n    // prismaIntegration(),\n    nestIntegration(),\n    hapiIntegration(),\n    koaIntegration(),\n    connectIntegration(),\n  ];\n}\n\n/**\n * Get a list of methods to instrument OTEL, when preload instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getOpenTelemetryInstrumentationToPreload(): (((options?: any) => void) & { id: string })[] {\n  return [\n    instrumentHttp,\n    instrumentExpress,\n    instrumentConnect,\n    instrumentFastify,\n    instrumentHapi,\n    instrumentKoa,\n    instrumentNest,\n    instrumentMongo,\n    instrumentMongoose,\n    instrumentMysql,\n    instrumentMysql2,\n    instrumentPostgres,\n    instrumentHapi,\n    instrumentGraphql,\n    instrumentRedis,\n  ];\n}\n","/**\n * This code was originally forked from https://github.com/TooTallNate/proxy-agents/tree/b133295fd16f6475578b6b15bd9b4e33ecb0d0b7\n * With the following LICENSE:\n *\n * (The MIT License)\n *\n * Copyright (c) 2013 Nathan Rajlich <nathan@tootallnate.net>*\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:*\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.*\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/* eslint-disable @typescript-eslint/member-ordering */\n/* eslint-disable jsdoc/require-jsdoc */\nimport * as http from 'node:http';\nimport type * as net from 'node:net';\nimport type { Duplex } from 'node:stream';\nimport type * as tls from 'node:tls';\n\nexport * from './helpers';\n\ninterface HttpConnectOpts extends net.TcpNetConnectOpts {\n  secureEndpoint: false;\n  protocol?: string;\n}\n\ninterface HttpsConnectOpts extends tls.ConnectionOptions {\n  secureEndpoint: true;\n  protocol?: string;\n  port: number;\n}\n\nexport type AgentConnectOpts = HttpConnectOpts | HttpsConnectOpts;\n\nconst INTERNAL = Symbol('AgentBaseInternalState');\n\ninterface InternalState {\n  defaultPort?: number;\n  protocol?: string;\n  currentSocket?: Duplex;\n}\n\nexport abstract class Agent extends http.Agent {\n  private [INTERNAL]: InternalState;\n\n  // Set by `http.Agent` - missing from `@types/node`\n  options!: Partial<net.TcpNetConnectOpts & tls.ConnectionOptions>;\n  keepAlive!: boolean;\n\n  constructor(opts?: http.AgentOptions) {\n    super(opts);\n    this[INTERNAL] = {};\n  }\n\n  abstract connect(\n    req: http.ClientRequest,\n    options: AgentConnectOpts,\n  ): Promise<Duplex | http.Agent> | Duplex | http.Agent;\n\n  /**\n   * Determine whether this is an `http` or `https` request.\n   */\n  isSecureEndpoint(options?: AgentConnectOpts): boolean {\n    if (options) {\n      // First check the `secureEndpoint` property explicitly, since this\n      // means that a parent `Agent` is \"passing through\" to this instance.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      if (typeof (options as any).secureEndpoint === 'boolean') {\n        return options.secureEndpoint;\n      }\n\n      // If no explicit `secure` endpoint, check if `protocol` property is\n      // set. This will usually be the case since using a full string URL\n      // or `URL` instance should be the most common usage.\n      if (typeof options.protocol === 'string') {\n        return options.protocol === 'https:';\n      }\n    }\n\n    // Finally, if no `protocol` property was set, then fall back to\n    // checking the stack trace of the current call stack, and try to\n    // detect the \"https\" module.\n    const { stack } = new Error();\n    if (typeof stack !== 'string') return false;\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n  }\n\n  createSocket(req: http.ClientRequest, options: AgentConnectOpts, cb: (err: Error | null, s?: Duplex) => void): void {\n    const connectOpts = {\n      ...options,\n      secureEndpoint: this.isSecureEndpoint(options),\n    };\n    Promise.resolve()\n      .then(() => this.connect(req, connectOpts))\n      .then(socket => {\n        if (socket instanceof http.Agent) {\n          // @ts-expect-error `addRequest()` isn't defined in `@types/node`\n          return socket.addRequest(req, connectOpts);\n        }\n        this[INTERNAL].currentSocket = socket;\n        // @ts-expect-error `createSocket()` isn't defined in `@types/node`\n        super.createSocket(req, options, cb);\n      }, cb);\n  }\n\n  createConnection(): Duplex {\n    const socket = this[INTERNAL].currentSocket;\n    this[INTERNAL].currentSocket = undefined;\n    if (!socket) {\n      throw new Error('No socket was returned in the `connect()` function');\n    }\n    return socket;\n  }\n\n  get defaultPort(): number {\n    return this[INTERNAL].defaultPort ?? (this.protocol === 'https:' ? 443 : 80);\n  }\n\n  set defaultPort(v: number) {\n    if (this[INTERNAL]) {\n      this[INTERNAL].defaultPort = v;\n    }\n  }\n\n  get protocol(): string {\n    return this[INTERNAL].protocol ?? (this.isSecureEndpoint() ? 'https:' : 'http:');\n  }\n\n  set protocol(v: string) {\n    if (this[INTERNAL]) {\n      this[INTERNAL].protocol = v;\n    }\n  }\n}\n","/**\n * This code was originally forked from https://github.com/TooTallNate/proxy-agents/tree/b133295fd16f6475578b6b15bd9b4e33ecb0d0b7\n * With the following LICENSE:\n *\n * (The MIT License)\n *\n * Copyright (c) 2013 Nathan Rajlich <nathan@tootallnate.net>*\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:*\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.*\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable jsdoc/require-jsdoc */\nimport type { IncomingHttpHeaders } from 'node:http';\nimport type { Readable } from 'node:stream';\nimport { logger } from '@sentry/utils';\n\nfunction debug(...args: unknown[]): void {\n  logger.log('[https-proxy-agent:parse-proxy-response]', ...args);\n}\n\nexport interface ConnectResponse {\n  statusCode: number;\n  statusText: string;\n  headers: IncomingHttpHeaders;\n}\n\nexport function parseProxyResponse(socket: Readable): Promise<{ connect: ConnectResponse; buffered: Buffer }> {\n  return new Promise((resolve, reject) => {\n    // we need to buffer any HTTP traffic that happens with the proxy before we get\n    // the CONNECT response, so that if the response is anything other than an \"200\"\n    // response code, then we can re-play the \"data\" events on the socket once the\n    // HTTP parser is hooked up...\n    let buffersLength = 0;\n    const buffers: Buffer[] = [];\n\n    function read() {\n      const b = socket.read();\n      if (b) ondata(b);\n      else socket.once('readable', read);\n    }\n\n    function cleanup() {\n      socket.removeListener('end', onend);\n      socket.removeListener('error', onerror);\n      socket.removeListener('readable', read);\n    }\n\n    function onend() {\n      cleanup();\n      debug('onend');\n      reject(new Error('Proxy connection ended before receiving CONNECT response'));\n    }\n\n    function onerror(err: Error) {\n      cleanup();\n      debug('onerror %o', err);\n      reject(err);\n    }\n\n    function ondata(b: Buffer) {\n      buffers.push(b);\n      buffersLength += b.length;\n\n      const buffered = Buffer.concat(buffers, buffersLength);\n      const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n\n      if (endOfHeaders === -1) {\n        // keep buffering\n        debug('have not received end of HTTP headers yet...');\n        read();\n        return;\n      }\n\n      const headerParts = buffered.slice(0, endOfHeaders).toString('ascii').split('\\r\\n');\n      const firstLine = headerParts.shift();\n      if (!firstLine) {\n        socket.destroy();\n        return reject(new Error('No header received from proxy CONNECT response'));\n      }\n      const firstLineParts = firstLine.split(' ');\n      const statusCode = +(firstLineParts[1] || 0);\n      const statusText = firstLineParts.slice(2).join(' ');\n      const headers: IncomingHttpHeaders = {};\n      for (const header of headerParts) {\n        if (!header) continue;\n        const firstColon = header.indexOf(':');\n        if (firstColon === -1) {\n          socket.destroy();\n          return reject(new Error(`Invalid header from proxy CONNECT response: \"${header}\"`));\n        }\n        const key = header.slice(0, firstColon).toLowerCase();\n        const value = header.slice(firstColon + 1).trimStart();\n        const current = headers[key];\n        if (typeof current === 'string') {\n          headers[key] = [current, value];\n        } else if (Array.isArray(current)) {\n          current.push(value);\n        } else {\n          headers[key] = value;\n        }\n      }\n      debug('got proxy server response: %o %o', firstLine, headers);\n      cleanup();\n      resolve({\n        connect: {\n          statusCode,\n          statusText,\n          headers,\n        },\n        buffered,\n      });\n    }\n\n    socket.on('error', onerror);\n    socket.on('end', onend);\n\n    read();\n  });\n}\n","/**\n * This code was originally forked from https://github.com/TooTallNate/proxy-agents/tree/b133295fd16f6475578b6b15bd9b4e33ecb0d0b7\n * With the following LICENSE:\n *\n * (The MIT License)\n *\n * Copyright (c) 2013 Nathan Rajlich <nathan@tootallnate.net>*\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:*\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.*\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type * as http from 'node:http';\nimport type { OutgoingHttpHeaders } from 'node:http';\nimport * as net from 'node:net';\nimport * as tls from 'node:tls';\nimport { logger } from '@sentry/utils';\nimport { Agent } from './base';\nimport type { AgentConnectOpts } from './base';\nimport { parseProxyResponse } from './parse-proxy-response';\n\nfunction debug(...args: unknown[]): void {\n  logger.log('[https-proxy-agent]', ...args);\n}\n\ntype Protocol<T> = T extends `${infer Protocol}:${infer _}` ? Protocol : never;\n\ntype ConnectOptsMap = {\n  http: Omit<net.TcpNetConnectOpts, 'host' | 'port'>;\n  https: Omit<tls.ConnectionOptions, 'host' | 'port'>;\n};\n\ntype ConnectOpts<T> = {\n  [P in keyof ConnectOptsMap]: Protocol<T> extends P ? ConnectOptsMap[P] : never;\n}[keyof ConnectOptsMap];\n\nexport type HttpsProxyAgentOptions<T> = ConnectOpts<T> &\n  http.AgentOptions & {\n    headers?: OutgoingHttpHeaders | (() => OutgoingHttpHeaders);\n  };\n\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */\nexport class HttpsProxyAgent<Uri extends string> extends Agent {\n  static protocols = ['http', 'https'] as const;\n\n  readonly proxy: URL;\n  proxyHeaders: OutgoingHttpHeaders | (() => OutgoingHttpHeaders);\n  connectOpts: net.TcpNetConnectOpts & tls.ConnectionOptions;\n\n  constructor(proxy: Uri | URL, opts?: HttpsProxyAgentOptions<Uri>) {\n    super(opts);\n    this.options = {};\n    this.proxy = typeof proxy === 'string' ? new URL(proxy) : proxy;\n    this.proxyHeaders = opts?.headers ?? {};\n    debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href);\n\n    // Trim off the brackets from IPv6 addresses\n    const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n    const port = this.proxy.port ? parseInt(this.proxy.port, 10) : this.proxy.protocol === 'https:' ? 443 : 80;\n    this.connectOpts = {\n      // Attempt to negotiate http/1.1 for proxy servers that support http/2\n      ALPNProtocols: ['http/1.1'],\n      ...(opts ? omit(opts, 'headers') : null),\n      host,\n      port,\n    };\n  }\n\n  /**\n   * Called when the node-core HTTP client library is creating a\n   * new HTTP request.\n   */\n  async connect(req: http.ClientRequest, opts: AgentConnectOpts): Promise<net.Socket> {\n    const { proxy } = this;\n\n    if (!opts.host) {\n      throw new TypeError('No \"host\" provided');\n    }\n\n    // Create a socket connection to the proxy server.\n    let socket: net.Socket;\n    if (proxy.protocol === 'https:') {\n      debug('Creating `tls.Socket`: %o', this.connectOpts);\n      const servername = this.connectOpts.servername || this.connectOpts.host;\n      socket = tls.connect({\n        ...this.connectOpts,\n        servername: servername && net.isIP(servername) ? undefined : servername,\n      });\n    } else {\n      debug('Creating `net.Socket`: %o', this.connectOpts);\n      socket = net.connect(this.connectOpts);\n    }\n\n    const headers: OutgoingHttpHeaders =\n      typeof this.proxyHeaders === 'function' ? this.proxyHeaders() : { ...this.proxyHeaders };\n    const host = net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n    let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`;\n\n    // Inject the `Proxy-Authorization` header if necessary.\n    if (proxy.username || proxy.password) {\n      const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n      headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n    }\n\n    headers.Host = `${host}:${opts.port}`;\n\n    if (!headers['Proxy-Connection']) {\n      headers['Proxy-Connection'] = this.keepAlive ? 'Keep-Alive' : 'close';\n    }\n    for (const name of Object.keys(headers)) {\n      payload += `${name}: ${headers[name]}\\r\\n`;\n    }\n\n    const proxyResponsePromise = parseProxyResponse(socket);\n\n    socket.write(`${payload}\\r\\n`);\n\n    const { connect, buffered } = await proxyResponsePromise;\n    req.emit('proxyConnect', connect);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not EventEmitter in Node types\n    this.emit('proxyConnect', connect, req);\n\n    if (connect.statusCode === 200) {\n      req.once('socket', resume);\n\n      if (opts.secureEndpoint) {\n        // The proxy is connecting to a TLS server, so upgrade\n        // this socket connection to a TLS connection.\n        debug('Upgrading socket connection to TLS');\n        const servername = opts.servername || opts.host;\n        return tls.connect({\n          ...omit(opts, 'host', 'path', 'port'),\n          socket,\n          servername: net.isIP(servername) ? undefined : servername,\n        });\n      }\n\n      return socket;\n    }\n\n    // Some other status code that's not 200... need to re-play the HTTP\n    // header \"data\" events onto the socket once the HTTP machinery is\n    // attached so that the node core `http` can parse and handle the\n    // error status code.\n\n    // Close the original socket, and a new \"fake\" socket is returned\n    // instead, so that the proxy doesn't get the HTTP request\n    // written to it (which may contain `Authorization` headers or other\n    // sensitive data).\n    //\n    // See: https://hackerone.com/reports/541502\n    socket.destroy();\n\n    const fakeSocket = new net.Socket({ writable: false });\n    fakeSocket.readable = true;\n\n    // Need to wait for the \"socket\" event to re-play the \"data\" events.\n    req.once('socket', (s: net.Socket) => {\n      debug('Replaying proxy buffer for failed request');\n      // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n      // this point the HTTP module machinery has been hooked up for\n      // the user.\n      s.push(buffered);\n      s.push(null);\n    });\n\n    return fakeSocket;\n  }\n}\n\nfunction resume(socket: net.Socket | tls.TLSSocket): void {\n  socket.resume();\n}\n\nfunction omit<T extends object, K extends [...(keyof T)[]]>(\n  obj: T,\n  ...keys: K\n): {\n  [K2 in Exclude<keyof T, K[number]>]: T[K2];\n} {\n  const ret = {} as {\n    [K in keyof typeof obj]: (typeof obj)[K];\n  };\n  let key: keyof typeof obj;\n  for (key in obj) {\n    if (!keys.includes(key)) {\n      ret[key] = obj[key];\n    }\n  }\n  return ret;\n}\n","import * as http from 'node:http';\nimport * as https from 'node:https';\nimport { Readable } from 'node:stream';\nimport { createGzip } from 'node:zlib';\nimport { createTransport, suppressTracing } from '@sentry/core';\nimport type {\n  BaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequest,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport { consoleSandbox } from '@sentry/utils';\nimport { HttpsProxyAgent } from '../proxy';\nimport type { HTTPModule } from './http-module';\n\nexport interface NodeTransportOptions extends BaseTransportOptions {\n  /** Define custom headers */\n  headers?: Record<string, string>;\n  /** Set a proxy that should be used for outbound requests. */\n  proxy?: string;\n  /** HTTPS proxy CA certificates */\n  caCerts?: string | Buffer | Array<string | Buffer>;\n  /** Custom HTTP module. Defaults to the native 'http' and 'https' modules. */\n  httpModule?: HTTPModule;\n  /** Allow overriding connection keepAlive, defaults to false */\n  keepAlive?: boolean;\n}\n\n// Estimated maximum size for reasonable standalone event\nconst GZIP_THRESHOLD = 1024 * 32;\n\n/**\n * Gets a stream from a Uint8Array or string\n * Readable.from is ideal but was added in node.js v12.3.0 and v10.17.0\n */\nfunction streamFromBody(body: Uint8Array | string): Readable {\n  return new Readable({\n    read() {\n      this.push(body);\n      this.push(null);\n    },\n  });\n}\n\n/**\n * Creates a Transport that uses native the native 'http' and 'https' modules to send events to Sentry.\n */\nexport function makeNodeTransport(options: NodeTransportOptions): Transport {\n  let urlSegments: URL;\n\n  try {\n    urlSegments = new URL(options.url);\n  } catch (e) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sentry/node]: Invalid dsn or tunnel option, will not send any events. The tunnel option must be a full URL when used.',\n      );\n    });\n    return createTransport(options, () => Promise.resolve({}));\n  }\n\n  const isHttps = urlSegments.protocol === 'https:';\n\n  // Proxy prioritization: http => `options.proxy` | `process.env.http_proxy`\n  // Proxy prioritization: https => `options.proxy` | `process.env.https_proxy` | `process.env.http_proxy`\n  const proxy = applyNoProxyOption(\n    urlSegments,\n    options.proxy || (isHttps ? process.env.https_proxy : undefined) || process.env.http_proxy,\n  );\n\n  const nativeHttpModule = isHttps ? https : http;\n  const keepAlive = options.keepAlive === undefined ? false : options.keepAlive;\n\n  // TODO(v9): Evaluate if we can set keepAlive to true. This would involve testing for memory leaks in older node\n  // versions(>= 8) as they had memory leaks when using it: #2555\n  const agent = proxy\n    ? (new HttpsProxyAgent(proxy) as http.Agent)\n    : new nativeHttpModule.Agent({ keepAlive, maxSockets: 30, timeout: 2000 });\n\n  // This ensures we do not generate any spans in OpenTelemetry for the transport\n  return suppressTracing(() => {\n    const requestExecutor = createRequestExecutor(options, options.httpModule ?? nativeHttpModule, agent);\n    return createTransport(options, requestExecutor);\n  });\n}\n\n/**\n * Honors the `no_proxy` env variable with the highest priority to allow for hosts exclusion.\n *\n * @param transportUrl The URL the transport intends to send events to.\n * @param proxy The client configured proxy.\n * @returns A proxy the transport should use.\n */\nfunction applyNoProxyOption(transportUrlSegments: URL, proxy: string | undefined): string | undefined {\n  const { no_proxy } = process.env;\n\n  const urlIsExemptFromProxy =\n    no_proxy &&\n    no_proxy\n      .split(',')\n      .some(\n        exemption => transportUrlSegments.host.endsWith(exemption) || transportUrlSegments.hostname.endsWith(exemption),\n      );\n\n  if (urlIsExemptFromProxy) {\n    return undefined;\n  } else {\n    return proxy;\n  }\n}\n\n/**\n * Creates a RequestExecutor to be used with `createTransport`.\n */\nfunction createRequestExecutor(\n  options: NodeTransportOptions,\n  httpModule: HTTPModule,\n  agent: http.Agent,\n): TransportRequestExecutor {\n  const { hostname, pathname, port, protocol, search } = new URL(options.url);\n  return function makeRequest(request: TransportRequest): Promise<TransportMakeRequestResponse> {\n    return new Promise((resolve, reject) => {\n      let body = streamFromBody(request.body);\n\n      const headers: Record<string, string> = { ...options.headers };\n\n      if (request.body.length > GZIP_THRESHOLD) {\n        headers['content-encoding'] = 'gzip';\n        body = body.pipe(createGzip());\n      }\n\n      const req = httpModule.request(\n        {\n          method: 'POST',\n          agent,\n          headers,\n          hostname,\n          path: `${pathname}${search}`,\n          port,\n          protocol,\n          ca: options.caCerts,\n        },\n        res => {\n          res.on('data', () => {\n            // Drain socket\n          });\n\n          res.on('end', () => {\n            // Drain socket\n          });\n\n          res.setEncoding('utf8');\n\n          // \"Key-value pairs of header names and values. Header names are lower-cased.\"\n          // https://nodejs.org/api/http.html#http_message_headers\n          const retryAfterHeader = res.headers['retry-after'] ?? null;\n          const rateLimitsHeader = res.headers['x-sentry-rate-limits'] ?? null;\n\n          resolve({\n            statusCode: res.statusCode,\n            headers: {\n              'retry-after': retryAfterHeader,\n              'x-sentry-rate-limits': Array.isArray(rateLimitsHeader) ? rateLimitsHeader[0] || null : rateLimitsHeader,\n            },\n          });\n        },\n      );\n\n      req.on('error', reject);\n      body.pipe(req);\n    });\n  };\n}\n","import { posix, sep } from 'node:path';\nimport { dirname } from '@sentry/utils';\n\n/** normalizes Windows paths */\nfunction normalizeWindowsPath(path: string): string {\n  return path\n    .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n    .replace(/\\\\/g, '/'); // replace all `\\` instances with `/`\n}\n\n/** Creates a function that gets the module name from a filename */\nexport function createGetModuleFromFilename(\n  basePath: string = process.argv[1] ? dirname(process.argv[1]) : process.cwd(),\n  isWindows: boolean = sep === '\\\\',\n): (filename: string | undefined) => string | undefined {\n  const normalizedBase = isWindows ? normalizeWindowsPath(basePath) : basePath;\n\n  return (filename: string | undefined) => {\n    if (!filename) {\n      return;\n    }\n\n    const normalizedFilename = isWindows ? normalizeWindowsPath(filename) : filename;\n\n    // eslint-disable-next-line prefer-const\n    let { dir, base: file, ext } = posix.parse(normalizedFilename);\n\n    if (ext === '.js' || ext === '.mjs' || ext === '.cjs') {\n      file = file.slice(0, ext.length * -1);\n    }\n\n    if (!dir) {\n      // No dirname whatsoever\n      dir = '.';\n    }\n\n    const n = dir.lastIndexOf('/node_modules');\n    if (n > -1) {\n      return `${dir.slice(n + 14).replace(/\\//g, '.')}:${file}`;\n    }\n\n    // Let's see if it's a part of the main module\n    // To be a part of main module, it has to share the same base\n    if (dir.startsWith(normalizedBase)) {\n      let moduleName = dir.slice(normalizedBase.length + 1).replace(/\\//g, '.');\n\n      if (moduleName) {\n        moduleName += ':';\n      }\n      moduleName += file;\n\n      return moduleName;\n    }\n\n    return file;\n  };\n}\n","// PUBLIC APIS\n\nimport type { StackParser } from '@sentry/types';\nimport { GLOBAL_OBJ, createStackParser, nodeStackLineParser } from '@sentry/utils';\nimport { createGetModuleFromFilename } from '../utils/module';\n\n/**\n * Returns a release dynamically from environment variables.\n */\n// eslint-disable-next-line complexity\nexport function getSentryRelease(fallback?: string): string | undefined {\n  // Always read first as Sentry takes this as precedence\n  if (process.env.SENTRY_RELEASE) {\n    return process.env.SENTRY_RELEASE;\n  }\n\n  // This supports the variable that sentry-webpack-plugin injects\n  if (GLOBAL_OBJ.SENTRY_RELEASE && GLOBAL_OBJ.SENTRY_RELEASE.id) {\n    return GLOBAL_OBJ.SENTRY_RELEASE.id;\n  }\n\n  // This list is in approximate alpha order, separated into 3 categories:\n  // 1. Git providers\n  // 2. CI providers with specific environment variables (has the provider name in the variable name)\n  // 3. CI providers with generic environment variables (checked for last to prevent possible false positives)\n\n  const possibleReleaseNameOfGitProvider =\n    // GitHub Actions - https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables\n    process.env['GITHUB_SHA'] ||\n    // GitLab CI - https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n    process.env['CI_MERGE_REQUEST_SOURCE_BRANCH_SHA'] ||\n    process.env['CI_BUILD_REF'] ||\n    process.env['CI_COMMIT_SHA'] ||\n    // Bitbucket - https://support.atlassian.com/bitbucket-cloud/docs/variables-and-secrets/\n    process.env['BITBUCKET_COMMIT'];\n\n  const possibleReleaseNameOfCiProvidersWithSpecificEnvVar =\n    // AppVeyor - https://www.appveyor.com/docs/environment-variables/\n    process.env['APPVEYOR_PULL_REQUEST_HEAD_COMMIT'] ||\n    process.env['APPVEYOR_REPO_COMMIT'] ||\n    // AWS CodeBuild - https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html\n    process.env['CODEBUILD_RESOLVED_SOURCE_VERSION'] ||\n    // AWS Amplify - https://docs.aws.amazon.com/amplify/latest/userguide/environment-variables.html\n    process.env['AWS_COMMIT_ID'] ||\n    // Azure Pipelines - https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml\n    process.env['BUILD_SOURCEVERSION'] ||\n    // Bitrise - https://devcenter.bitrise.io/builds/available-environment-variables/\n    process.env['GIT_CLONE_COMMIT_HASH'] ||\n    // Buddy CI - https://buddy.works/docs/pipelines/environment-variables#default-environment-variables\n    process.env['BUDDY_EXECUTION_REVISION'] ||\n    // Builtkite - https://buildkite.com/docs/pipelines/environment-variables\n    process.env['BUILDKITE_COMMIT'] ||\n    // CircleCI - https://circleci.com/docs/variables/\n    process.env['CIRCLE_SHA1'] ||\n    // Cirrus CI - https://cirrus-ci.org/guide/writing-tasks/#environment-variables\n    process.env['CIRRUS_CHANGE_IN_REPO'] ||\n    // Codefresh - https://codefresh.io/docs/docs/codefresh-yaml/variables/\n    process.env['CF_REVISION'] ||\n    // Codemagic - https://docs.codemagic.io/yaml-basic-configuration/environment-variables/\n    process.env['CM_COMMIT'] ||\n    // Cloudflare Pages - https://developers.cloudflare.com/pages/platform/build-configuration/#environment-variables\n    process.env['CF_PAGES_COMMIT_SHA'] ||\n    // Drone - https://docs.drone.io/pipeline/environment/reference/\n    process.env['DRONE_COMMIT_SHA'] ||\n    // Flightcontrol - https://www.flightcontrol.dev/docs/guides/flightcontrol/environment-variables#built-in-environment-variables\n    process.env['FC_GIT_COMMIT_SHA'] ||\n    // Heroku #1 https://devcenter.heroku.com/articles/heroku-ci\n    process.env['HEROKU_TEST_RUN_COMMIT_VERSION'] ||\n    // Heroku #2 https://docs.sentry.io/product/integrations/deployment/heroku/#configure-releases\n    process.env['HEROKU_SLUG_COMMIT'] ||\n    // Render - https://render.com/docs/environment-variables\n    process.env['RENDER_GIT_COMMIT'] ||\n    // Semaphore CI - https://docs.semaphoreci.com/ci-cd-environment/environment-variables\n    process.env['SEMAPHORE_GIT_SHA'] ||\n    // TravisCI - https://docs.travis-ci.com/user/environment-variables/#default-environment-variables\n    process.env['TRAVIS_PULL_REQUEST_SHA'] ||\n    // Vercel - https://vercel.com/docs/v2/build-step#system-environment-variables\n    process.env['VERCEL_GIT_COMMIT_SHA'] ||\n    process.env['VERCEL_GITHUB_COMMIT_SHA'] ||\n    process.env['VERCEL_GITLAB_COMMIT_SHA'] ||\n    process.env['VERCEL_BITBUCKET_COMMIT_SHA'] ||\n    // Zeit (now known as Vercel)\n    process.env['ZEIT_GITHUB_COMMIT_SHA'] ||\n    process.env['ZEIT_GITLAB_COMMIT_SHA'] ||\n    process.env['ZEIT_BITBUCKET_COMMIT_SHA'];\n\n  const possibleReleaseNameOfCiProvidersWithGenericEnvVar =\n    // CloudBees CodeShip - https://docs.cloudbees.com/docs/cloudbees-codeship/latest/pro-builds-and-configuration/environment-variables\n    process.env['CI_COMMIT_ID'] ||\n    // Coolify - https://coolify.io/docs/knowledge-base/environment-variables\n    process.env['SOURCE_COMMIT'] ||\n    // Heroku #3 https://devcenter.heroku.com/changelog-items/630\n    process.env['SOURCE_VERSION'] ||\n    // Jenkins - https://plugins.jenkins.io/git/#environment-variables\n    process.env['GIT_COMMIT'] ||\n    // Netlify - https://docs.netlify.com/configure-builds/environment-variables/#build-metadata\n    process.env['COMMIT_REF'] ||\n    // TeamCity - https://www.jetbrains.com/help/teamcity/predefined-build-parameters.html\n    process.env['BUILD_VCS_NUMBER'] ||\n    // Woodpecker CI - https://woodpecker-ci.org/docs/usage/environment\n    process.env['CI_COMMIT_SHA'];\n\n  return (\n    possibleReleaseNameOfGitProvider ||\n    possibleReleaseNameOfCiProvidersWithSpecificEnvVar ||\n    possibleReleaseNameOfCiProvidersWithGenericEnvVar ||\n    fallback\n  );\n}\n\n/** Node.js stack parser */\nexport const defaultStackParser: StackParser = createStackParser(nodeStackLineParser(createGetModuleFromFilename()));\n","import * as os from 'node:os';\nimport type { Tracer } from '@opentelemetry/api';\nimport { trace } from '@opentelemetry/api';\nimport type { BasicTracerProvider } from '@opentelemetry/sdk-trace-base';\nimport type { ServerRuntimeClientOptions } from '@sentry/core';\nimport { SDK_VERSION, ServerRuntimeClient, applySdkMetadata } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { isMainThread, threadId } from 'worker_threads';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { NodeClientOptions } from '../types';\n\nconst DEFAULT_CLIENT_REPORT_FLUSH_INTERVAL_MS = 60_000; // 60s was chosen arbitrarily\n\n/** A client for using Sentry with Node & OpenTelemetry. */\nexport class NodeClient extends ServerRuntimeClient<NodeClientOptions> {\n  public traceProvider: BasicTracerProvider | undefined;\n  private _tracer: Tracer | undefined;\n  private _clientReportInterval: NodeJS.Timeout | undefined;\n  private _clientReportOnExitFlushListener: (() => void) | undefined;\n\n  public constructor(options: NodeClientOptions) {\n    const clientOptions: ServerRuntimeClientOptions = {\n      ...options,\n      platform: 'node',\n      runtime: { name: 'node', version: global.process.version },\n      serverName: options.serverName || global.process.env.SENTRY_NAME || os.hostname(),\n    };\n\n    applySdkMetadata(clientOptions, 'node');\n\n    logger.log(\n      `Initializing Sentry: process: ${process.pid}, thread: ${isMainThread ? 'main' : `worker-${threadId}`}.`,\n    );\n\n    super(clientOptions);\n  }\n\n  /** Get the OTEL tracer. */\n  public get tracer(): Tracer {\n    if (this._tracer) {\n      return this._tracer;\n    }\n\n    const name = '@sentry/node';\n    const version = SDK_VERSION;\n    const tracer = trace.getTracer(name, version);\n    this._tracer = tracer;\n\n    return tracer;\n  }\n\n  // Eslint ignore explanation: This is already documented in super.\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  public async flush(timeout?: number): Promise<boolean> {\n    const provider = this.traceProvider;\n    const spanProcessor = provider?.activeSpanProcessor;\n\n    if (spanProcessor) {\n      await spanProcessor.forceFlush();\n    }\n\n    if (this.getOptions().sendClientReports) {\n      this._flushOutcomes();\n    }\n\n    return super.flush(timeout);\n  }\n\n  // Eslint ignore explanation: This is already documented in super.\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  public close(timeout?: number | undefined): PromiseLike<boolean> {\n    if (this._clientReportInterval) {\n      clearInterval(this._clientReportInterval);\n    }\n\n    if (this._clientReportOnExitFlushListener) {\n      process.off('beforeExit', this._clientReportOnExitFlushListener);\n    }\n\n    return super.close(timeout);\n  }\n\n  /**\n   * Will start tracking client reports for this client.\n   *\n   * NOTICE: This method will create an interval that is periodically called and attach a `process.on('beforeExit')`\n   * hook. To clean up these resources, call `.close()` when you no longer intend to use the client. Not doing so will\n   * result in a memory leak.\n   */\n  // The reason client reports need to be manually activated with this method instead of just enabling them in a\n  // constructor, is that if users periodically and unboundedly create new clients, we will create more and more\n  // intervals and beforeExit listeners, thus leaking memory. In these situations, users are required to call\n  // `client.close()` in order to dispose of the acquired resources.\n  // We assume that calling this method in Sentry.init() is a sensible default, because calling Sentry.init() over and\n  // over again would also result in memory leaks.\n  // Note: We have experimented with using `FinalizationRegisty` to clear the interval when the client is garbage\n  // collected, but it did not work, because the cleanup function never got called.\n  public startClientReportTracking(): void {\n    const clientOptions = this.getOptions();\n    if (clientOptions.sendClientReports) {\n      this._clientReportOnExitFlushListener = () => {\n        this._flushOutcomes();\n      };\n\n      this._clientReportInterval = setInterval(\n        () => {\n          DEBUG_BUILD && logger.log('Flushing client reports based on interval.');\n          this._flushOutcomes();\n        },\n        clientOptions.clientReportFlushInterval ?? DEFAULT_CLIENT_REPORT_FLUSH_INTERVAL_MS,\n      )\n        // Unref is critical for not preventing the process from exiting because the interval is active.\n        .unref();\n\n      process.on('beforeExit', this._clientReportOnExitFlushListener);\n    }\n  }\n}\n","import {\n  endSession,\n  functionToStringIntegration,\n  getClient,\n  getCurrentScope,\n  getIntegrationsToSetup,\n  getIsolationScope,\n  hasTracingEnabled,\n  inboundFiltersIntegration,\n  linkedErrorsIntegration,\n  requestDataIntegration,\n  startSession,\n} from '@sentry/core';\nimport {\n  enhanceDscWithOpenTelemetryRootSpanName,\n  openTelemetrySetupCheck,\n  setOpenTelemetryContextAsyncContextStrategy,\n  setupEventContextTrace,\n} from '@sentry/opentelemetry';\nimport type { Client, Integration, Options } from '@sentry/types';\nimport {\n  consoleSandbox,\n  dropUndefinedKeys,\n  logger,\n  propagationContextFromHeaders,\n  stackParserFromStackParserOptions,\n} from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { consoleIntegration } from '../integrations/console';\nimport { nodeContextIntegration } from '../integrations/context';\nimport { contextLinesIntegration } from '../integrations/contextlines';\n\nimport { httpIntegration } from '../integrations/http';\nimport { localVariablesIntegration } from '../integrations/local-variables';\nimport { modulesIntegration } from '../integrations/modules';\nimport { nativeNodeFetchIntegration } from '../integrations/node-fetch';\nimport { onUncaughtExceptionIntegration } from '../integrations/onuncaughtexception';\nimport { onUnhandledRejectionIntegration } from '../integrations/onunhandledrejection';\nimport { spotlightIntegration } from '../integrations/spotlight';\nimport { getAutoPerformanceIntegrations } from '../integrations/tracing';\nimport { makeNodeTransport } from '../transports';\nimport type { NodeClientOptions, NodeOptions } from '../types';\nimport { isCjs } from '../utils/commonjs';\nimport { defaultStackParser, getSentryRelease } from './api';\nimport { NodeClient } from './client';\nimport { initOpenTelemetry, maybeInitializeEsmLoader } from './initOtel';\n\nfunction getCjsOnlyIntegrations(): Integration[] {\n  return isCjs() ? [modulesIntegration()] : [];\n}\n\n/**\n * Get default integrations, excluding performance.\n */\nexport function getDefaultIntegrationsWithoutPerformance(): Integration[] {\n  return [\n    // Common\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    linkedErrorsIntegration(),\n    requestDataIntegration(),\n    // Native Wrappers\n    consoleIntegration(),\n    httpIntegration(),\n    nativeNodeFetchIntegration(),\n    // Global Handlers\n    onUncaughtExceptionIntegration(),\n    onUnhandledRejectionIntegration(),\n    // Event Info\n    contextLinesIntegration(),\n    localVariablesIntegration(),\n    nodeContextIntegration(),\n    ...getCjsOnlyIntegrations(),\n  ];\n}\n\n/** Get the default integrations for the Node SDK. */\nexport function getDefaultIntegrations(options: Options): Integration[] {\n  return [\n    ...getDefaultIntegrationsWithoutPerformance(),\n    // We only add performance integrations if tracing is enabled\n    // Note that this means that without tracing enabled, e.g. `expressIntegration()` will not be added\n    // This means that generally request isolation will work (because that is done by httpIntegration)\n    // But `transactionName` will not be set automatically\n    ...(shouldAddPerformanceIntegrations(options) ? getAutoPerformanceIntegrations() : []),\n  ];\n}\n\nfunction shouldAddPerformanceIntegrations(options: Options): boolean {\n  if (!hasTracingEnabled(options)) {\n    return false;\n  }\n\n  // We want to ensure `tracesSampleRate` is not just undefined/null here\n  // eslint-disable-next-line deprecation/deprecation\n  return options.enableTracing || options.tracesSampleRate != null || 'tracesSampler' in options;\n}\n\n/**\n * Initialize Sentry for Node.\n */\nexport function init(options: NodeOptions | undefined = {}): NodeClient | undefined {\n  return _init(options, getDefaultIntegrations);\n}\n\n/**\n * Initialize Sentry for Node, without any integrations added by default.\n */\nexport function initWithoutDefaultIntegrations(options: NodeOptions | undefined = {}): NodeClient {\n  return _init(options, () => []);\n}\n\n/**\n * Initialize Sentry for Node, without performance instrumentation.\n */\nfunction _init(\n  _options: NodeOptions | undefined = {},\n  getDefaultIntegrationsImpl: (options: Options) => Integration[],\n): NodeClient {\n  const options = getClientOptions(_options, getDefaultIntegrationsImpl);\n\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n\n  if (!isCjs() && options.registerEsmLoaderHooks !== false) {\n    maybeInitializeEsmLoader(options.registerEsmLoaderHooks === true ? undefined : options.registerEsmLoaderHooks);\n  }\n\n  setOpenTelemetryContextAsyncContextStrategy();\n\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new NodeClient(options);\n  // The client is on the current scope, from where it generally is inherited\n  getCurrentScope().setClient(client);\n\n  if (isEnabled(client)) {\n    client.init();\n  }\n\n  logger.log(`Running in ${isCjs() ? 'CommonJS' : 'ESM'} mode.`);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n\n  client.startClientReportTracking();\n\n  updateScopeFromEnvVariables();\n\n  if (options.spotlight) {\n    // force integrations to be setup even if no DSN was set\n    // If they have already been added before, they will be ignored anyhow\n    const integrations = client.getOptions().integrations;\n    for (const integration of integrations) {\n      client.addIntegration(integration);\n    }\n    client.addIntegration(\n      spotlightIntegration({\n        sidecarUrl: typeof options.spotlight === 'string' ? options.spotlight : undefined,\n      }),\n    );\n  }\n\n  // If users opt-out of this, they _have_ to set up OpenTelemetry themselves\n  // There is no way to use this SDK without OpenTelemetry!\n  if (!options.skipOpenTelemetrySetup) {\n    initOpenTelemetry(client);\n    validateOpenTelemetrySetup();\n  }\n\n  enhanceDscWithOpenTelemetryRootSpanName(client);\n  setupEventContextTrace(client);\n\n  return client;\n}\n\n/**\n * Validate that your OpenTelemetry setup is correct.\n */\nexport function validateOpenTelemetrySetup(): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  const setup = openTelemetrySetupCheck();\n\n  const required = ['SentrySpanProcessor', 'SentryContextManager', 'SentryPropagator'] as const;\n  for (const k of required) {\n    if (!setup.includes(k)) {\n      logger.error(\n        `You have to set up the ${k}. Without this, the OpenTelemetry & Sentry integration will not work properly.`,\n      );\n    }\n  }\n\n  if (!setup.includes('SentrySampler')) {\n    logger.warn(\n      'You have to set up the SentrySampler. Without this, the OpenTelemetry & Sentry integration may still work, but sample rates set for the Sentry SDK will not be respected.',\n    );\n  }\n}\n\nfunction getClientOptions(\n  options: NodeOptions,\n  getDefaultIntegrationsImpl: (options: Options) => Integration[],\n): NodeClientOptions {\n  const release = getRelease(options.release);\n\n  const autoSessionTracking =\n    typeof release !== 'string'\n      ? false\n      : options.autoSessionTracking === undefined\n        ? true\n        : options.autoSessionTracking;\n\n  const tracesSampleRate = getTracesSampleRate(options.tracesSampleRate);\n\n  const baseOptions = dropUndefinedKeys({\n    transport: makeNodeTransport,\n    dsn: process.env.SENTRY_DSN,\n    environment: process.env.SENTRY_ENVIRONMENT,\n    sendClientReports: true,\n  });\n\n  const overwriteOptions = dropUndefinedKeys({\n    release,\n    autoSessionTracking,\n    tracesSampleRate,\n  });\n\n  const mergedOptions = {\n    ...baseOptions,\n    ...options,\n    ...overwriteOptions,\n  };\n\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrationsImpl(mergedOptions);\n  }\n\n  const clientOptions: NodeClientOptions = {\n    ...mergedOptions,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup({\n      defaultIntegrations: options.defaultIntegrations,\n      integrations: options.integrations,\n    }),\n  };\n\n  return clientOptions;\n}\n\nfunction getRelease(release: NodeOptions['release']): string | undefined {\n  if (release !== undefined) {\n    return release;\n  }\n\n  const detectedRelease = getSentryRelease();\n  if (detectedRelease !== undefined) {\n    return detectedRelease;\n  }\n\n  return undefined;\n}\n\nfunction getTracesSampleRate(tracesSampleRate: NodeOptions['tracesSampleRate']): number | undefined {\n  if (tracesSampleRate !== undefined) {\n    return tracesSampleRate;\n  }\n\n  const sampleRateFromEnv = process.env.SENTRY_TRACES_SAMPLE_RATE;\n  if (!sampleRateFromEnv) {\n    return undefined;\n  }\n\n  const parsed = parseFloat(sampleRateFromEnv);\n  return isFinite(parsed) ? parsed : undefined;\n}\n\n/**\n * Update scope and propagation context based on environmental variables.\n *\n * See https://github.com/getsentry/rfcs/blob/main/text/0071-continue-trace-over-process-boundaries.md\n * for more details.\n */\nfunction updateScopeFromEnvVariables(): void {\n  const sentryUseEnvironment = (process.env.SENTRY_USE_ENVIRONMENT || '').toLowerCase();\n  if (!['false', 'n', 'no', 'off', '0'].includes(sentryUseEnvironment)) {\n    const sentryTraceEnv = process.env.SENTRY_TRACE;\n    const baggageEnv = process.env.SENTRY_BAGGAGE;\n    const propagationContext = propagationContextFromHeaders(sentryTraceEnv, baggageEnv);\n    getCurrentScope().setPropagationContext(propagationContext);\n  }\n}\n\n/**\n * Enable automatic Session Tracking for the node process.\n */\nfunction startSessionTracking(): void {\n  const client = getClient<NodeClient>();\n  if (client && client.getOptions().autoSessionTracking) {\n    client.initSessionFlusher();\n  }\n\n  startSession();\n\n  // Emitted in the case of healthy sessions, error of `mechanism.handled: true` and unhandledrejections because\n  // The 'beforeExit' event is not emitted for conditions causing explicit termination,\n  // such as calling process.exit() or uncaught exceptions.\n  // Ref: https://nodejs.org/api/process.html#process_event_beforeexit\n  process.on('beforeExit', () => {\n    const session = getIsolationScope().getSession();\n\n    // Only call endSession, if the Session exists on Scope and SessionStatus is not a\n    // Terminal Status i.e. Exited or Crashed because\n    // \"When a session is moved away from ok it must not be updated anymore.\"\n    // Ref: https://develop.sentry.dev/sdk/sessions/\n    if (session && session.status !== 'ok') {\n      endSession();\n    }\n  });\n}\n\nfunction isEnabled(client: Client): boolean {\n  return client.getOptions().enabled !== false && client.getTransport() !== undefined;\n}\n","import { stdin } from 'node:process';\nimport React from 'react';\nimport { isType } from 'variant';\nimport { createFsCache, CacheState } from '@wix/cli-fs-cache';\nimport { render, renderSync } from '@wix/cli-ui-kit';\nimport { I18nProvider } from '@wix/cli-i18n';\nimport { UserFeedbackForm } from './components/UserFeedback/Form.js';\nimport { UserFeedbackFallback } from './components/UserFeedback/Fallback.js';\nimport { ReportErrorResult } from './error-reporter.js';\nimport type { ErrorReporter } from './error-reporter.js';\nimport messages from './messages.json' with { type: 'json' };\n\ninterface Options {\n  cachePath: string | undefined;\n  errorReporter: ErrorReporter;\n  reportResult: ReportErrorResult;\n}\n\nexport async function collectUserFeedback({\n  cachePath,\n  reportResult,\n  errorReporter,\n}: Options) {\n  if (\n    !stdin.isTTY ||\n    !cachePath ||\n    !isType(reportResult, ReportErrorResult.Reported)\n  ) {\n    return;\n  }\n\n  const fsCache = createFsCache({\n    filePath: cachePath,\n    ttlInHours: 1,\n  });\n  const cacheState = await fsCache.get();\n\n  if (isType(cacheState, CacheState.Exists)) {\n    return;\n  }\n\n  const user = errorReporter.getUser();\n\n  if (user) {\n    await render(\n      <I18nProvider messages={messages}>\n        <UserFeedbackForm\n          onSubmit={({ feedback }) => {\n            void errorReporter.reportUserFeedback({\n              userId: user.id,\n              eventId: reportResult.eventId,\n              feedback,\n            });\n          }}\n        />\n      </I18nProvider>\n    );\n  } else {\n    renderSync(\n      <I18nProvider messages={messages}>\n        <UserFeedbackFallback />\n      </I18nProvider>\n    );\n  }\n\n  await fsCache.set({ reported: true });\n}\n","import { writeJson, readJson, pathExists } from '@wix/cli-fs';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\nimport { getTestOverrides } from '@wix/cli-test-overrides';\nimport { join } from 'node:path';\nimport type { VariantOf } from 'variant';\nimport { fields, variant } from 'variant';\nimport { z } from 'zod';\n\nexport const CacheState = variant({\n  Exists: fields<{ data: unknown }>(),\n  NotExists: {},\n});\n\nexport type CacheState = VariantOf<typeof CacheState>;\n\nconst CacheData = z.object({\n  data: z.unknown(),\n  createdAt: z.number(),\n});\n\ntype CacheData = z.infer<typeof CacheData>;\n\ninterface CliCacheOptions {\n  filePath: string;\n  ttlInHours?: number;\n}\n\nconst isFileExpired = (createdAt: number, ttlInHours: number) => {\n  return Date.now() - createdAt.valueOf() > ttlInHours * 60 * 60 * 1000;\n};\n\nexport function getFsCacheFilePath(dirPath: string, fileName: string) {\n  const testOverrides = getTestOverrides();\n\n  if (testOverrides.fsCacheDir) {\n    return join(testOverrides.fsCacheDir, fileName);\n  }\n\n  return join(dirPath, fileName);\n}\n\nexport function createFsCache({\n  filePath,\n  ttlInHours = 24 * 7,\n}: CliCacheOptions) {\n  const get = async (): Promise<CacheState> => {\n    try {\n      const isCacheExists = await pathExists(filePath);\n\n      if (isCacheExists) {\n        const cacheData = CacheData.parse(await readJson(filePath));\n\n        if (!isFileExpired(cacheData.createdAt, ttlInHours)) {\n          return CacheState.Exists({ data: cacheData.data });\n        }\n      }\n\n      return CacheState.NotExists();\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToReadCache({ path: filePath }),\n        cause: e,\n      });\n    }\n  };\n\n  const set = async (data: unknown): Promise<CacheState> => {\n    try {\n      await writeJson(filePath, {\n        data,\n        createdAt: Date.now(),\n      });\n      return CacheState.Exists({ data });\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToWriteCache({ path: filePath }),\n        cause: e,\n      });\n    }\n  };\n\n  return {\n    get,\n    set,\n  };\n}\n","import React, { useState, useCallback } from 'react';\nimport type { FC } from 'react';\nimport { useTranslation } from '@wix/cli-i18n';\nimport { Text, ConfirmInput, TextInput, Box } from '@wix/cli-ui-kit';\nimport { ContactUs } from './ContactUs.js';\n\ninterface Props {\n  onSubmit: ({ feedback }: { feedback: string }) => void;\n}\n\nexport const UserFeedbackForm: FC<Props> = ({ onSubmit }) => {\n  const { t } = useTranslation();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [consent, setConsent] = useState<boolean>();\n\n  const handleConsentSubmit = useCallback((value: boolean) => {\n    setConsent(value);\n    if (!value) {\n      setIsSubmitted(true);\n    }\n  }, []);\n\n  const handleSubmit = useCallback(\n    (feedback: string) => {\n      setIsSubmitted(true);\n      onSubmit({ feedback });\n    },\n    [onSubmit]\n  );\n\n  return (\n    <>\n      <Box flexDirection=\"column\" marginTop={1} marginBottom={1}>\n        <Text>{t('user_feedback.title')}</Text>\n        <Text skin=\"secondary\">{t('user_feedback.subtitle')}</Text>\n      </Box>\n      <ConfirmInput\n        initialValue={false}\n        label={t('user_feedback.consent.label')}\n        onSubmit={handleConsentSubmit}\n      />\n      {consent === true && (\n        <TextInput\n          label={t('user_feedback.comments.label')}\n          onSubmit={handleSubmit}\n        />\n      )}\n      {isSubmitted && (\n        <Box flexDirection=\"column\" marginTop={1}>\n          <Text>\n            {consent\n              ? t('user_feedback.submitted')\n              : t('user_feedback.declined')}\n          </Text>\n          <ContactUs />\n        </Box>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Trans } from '@wix/cli-i18n';\nimport { Link } from '@wix/cli-ui-kit';\n\nexport const ContactUs: FC = () => (\n  <Trans\n    i18nKey=\"user_feedback.contact_us\"\n    components={[<Link url=\"https://discord.gg/wixstudio\" />]}\n  />\n);\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Box } from '@wix/cli-ui-kit';\nimport { ContactUs } from './ContactUs.js';\n\nexport const UserFeedbackFallback: FC = () => {\n  return (\n    <Box flexDirection=\"column\" marginTop={1}>\n      <ContactUs />\n    </Box>\n  );\n};\n","import React, { createContext, useContext } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport type { ErrorReporter } from './error-reporter.js';\n\nconst ErrorReporterContext = createContext<ErrorReporter | null>(null);\n\ninterface Props {\n  value: ErrorReporter;\n  children: ReactNode;\n}\n\nexport const ErrorReporterProvider: FC<Props> = (props) => (\n  <ErrorReporterContext.Provider {...props} />\n);\n\nexport const useErrorReporter = (): ErrorReporter => {\n  const context = useContext(ErrorReporterContext);\n  if (context == null) {\n    throw new Error(\n      'useErrorReporter() cannot be used without an <ErrorReporterProvider>'\n    );\n  }\n  return context;\n};\n","export {\n  createErrorHandler,\n  type ErrorHandlerFn,\n} from './create-error-handler.js';\nexport { ErrorViewer } from './components/ErrorViewer.js';\nexport { OutdatedVersionMessage } from './components/OutdatedVersionMessage.js';\nexport { createErrorReporter, type ErrorReporter } from './error-reporter.js';\nexport {\n  ErrorReporterProvider,\n  useErrorReporter,\n} from './error-reporter-context.js';\n"],"mappings":"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","names":["suppressTracing","context","_a","W3CBaggagePropagator","context","AnchoredClock","__read","_a","TracesSamplerValues","init_environment","RandomIdGenerator","init_esm","init_environment","ExportResultCode","CompositePropagator","_a","context","__values","TraceState","match","VERSION","W3CTraceContextPropagator","context","context","RPCType","AlwaysOffSampler","AlwaysOnSampler","ParentBasedSampler","_a","context","TraceIdRatioBasedSampler","context","TimeoutError","__values","Deferred","BindOnceFuture","_a","__read","suppressTracing","esm_exports","suppressTracing","init_esm","module","module","debug","module","debug","module","module","module","debug","release","match","module","module","module","module","release","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","match","module","module","debug","z","module","debug","module","satisfies","module","module","module","module","require_valid","module","module","satisfies","module","module","module","module","satisfies","module","satisfies","require_semver","module","satisfies","AttributeNames","getAbsoluteUrl","path","hostname","_a","SeverityNumber","NoopLogger","NoopLoggerProvider","_globalThis","init_globalThis","init_node","init_globalThis","init_platform","init_node","init_platform","_globalThis","LogsAPI","_a","init_esm","_a","init_esm","module","isFunction","logger","shimmer","wrap","massWrap","unwrap","massUnwrap","init_esm","InstrumentationAbstract","_a","module","os","module","stack","module","posix","module","path","getNodeModulesDirs","module","path","paths","opts","module","concatty","slicy","Empty","module","module","module","module","module","path","maybeRealpath","defaultReadPackage","readFile","getPackageCandidates","err","init","basedir","pkg","x","callback","cb","exts","isdir","onfile","require_core","module","require_core","module","module","module","path","maybeRealpathSync","defaultReadPackageSync","readFileSync","getPackageCandidates","x","m","n","module","module","path","module","module","path","debug","Hook","normalize","exports","ModuleNameTrieNode","ModuleNameTrie","__values","_a","__spreadArray","__read","RequireInTheMiddleSingleton","__values","_a","module","path","Hook","_a","isWrapped","init_utils","path","import_require_in_the_middle","init_instrumentation","init_utils","__extends","InstrumentationBase","isWrapped","module","_a","__values","module_2","HookRequire","HookImport","normalize","init_node","init_instrumentation","init_platform","init_node","InstrumentationNodeModuleDefinition","init_platform","InstrumentationNodeModuleFile","normalize","init_types","esm_exports","isWrapped","init_esm","init_platform","init_types","init_utils","HttpInstrumentation","_a","hostname","ExpressLayerType","AttributeNames","_a","ExpressInstrumentation","path","_a","AttributeNames","FastifyTypes","FastifyNames","startSpan","_a","FastifyInstrumentation","_a","AllowedOperationTypes","TokenKind","SpanNames","AttributeNames","isObjectLike","path","fieldNode","_a","fields","GraphQLInstrumentation","module","_a","MongodbCommandType","MongoDBInstrumentation","_a","MongodbCommandType","MongooseInstrumentation","module","_a","require_types","AttributeNames","MySQLInstrumentation","fields","format","_a","MySQL2Instrumentation","format","err","fields","_a","IORedisInstrumentation","module","result","_a","diag","_a","RedisInstrumentation","_a","AttributeNames","NestType","NestInstrumentation","module","_a","AttributeNames","SpanNames","_a","PgInstrumentation","module","connect","result","AttributeNames","_a","HapiInstrumentation","module","_a","KoaLayerType","AttributeNames","context","_a","KoaInstrumentation","module","_a","path","context","AttributeNames","ConnectTypes","ConnectNames","ConnectInstrumentation","React","context","import_react","import_verror","dirname","VError","VError","dirname","React","context","import_react","React","import_react","import_react","match","import_react","React","import_react","React","React","path","import_react","process","import_variant","context","_optionalChain","hostname","path","_addRequestBreadcrumb","getBreadcrumbData","path","INTEGRATION_NAME","INTEGRATION_NAME","uptime","match","join","INTEGRATION_NAME","path","range","INTEGRATION_NAME","INTEGRATION_NAME","path","dirname","join","readFileSync","error","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","arg","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","INTEGRATION_NAME","Agent","debug","Agent","connect","http","hostname","path","sep","import_verror","VError","ci","release","context","import_react","import_variant","import_variant","join","join","import_react","import_react","React","React","import_react","React","React","React","process","import_react","React","context"]}
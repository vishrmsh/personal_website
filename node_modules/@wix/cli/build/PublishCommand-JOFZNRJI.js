import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  useCreatePreview
} from "./chunk-TO26ON5U.js";
import {
  DeploymentStatus,
  useDocumentManagementClient
} from "./chunk-YCMVJTQP.js";
import "./chunk-ZMOO2TWX.js";
import "./chunk-CSMKGG4V.js";
import "./chunk-5LRGJ3DG.js";
import "./chunk-RUPEFN2Q.js";
import "./chunk-Z2OLEKZU.js";
import "./chunk-UGNUBZYN.js";
import "./chunk-A6POD5GK.js";
import "./chunk-6RDHKDZ4.js";
import "./chunk-ZS5GINIZ.js";
import "./chunk-FLKYXGBD.js";
import "./chunk-4R5RNIW3.js";
import "./chunk-67NUBEMP.js";
import {
  ErrorViewer
} from "./chunk-WWUS5636.js";
import "./chunk-SJKVYZPL.js";
import {
  Trans,
  useTranslation
} from "./chunk-UQLHXG4X.js";
import "./chunk-KJ37XZQA.js";
import {
  Alert,
  Badge,
  Box_default,
  ConfirmInput,
  Link,
  Spinner,
  useAsync,
  useAsyncCallback
} from "./chunk-RXATQXHV.js";
import {
  require_react
} from "./chunk-NRAQAV6T.js";
import "./chunk-SQ3KPTIH.js";
import "./chunk-Z4MHKCET.js";
import "./chunk-C4SUTB4O.js";
import "./chunk-TKDDSH55.js";
import "./chunk-62BYZXT7.js";
import "./chunk-WYHHEOWO.js";
import "./chunk-Z3Y5NFYG.js";
import "./chunk-ZXYGJZOO.js";
import {
  require_lib
} from "./chunk-IVMK6TVY.js";
import {
  __toESM,
  init_esm_shims
} from "./chunk-4EFJZ3GQ.js";

// ../cli-site/src/components/PublishCommand/PublishCommand.tsx
init_esm_shims();
var import_react = __toESM(require_react(), 1);
var import_variant = __toESM(require_lib(), 1);
var PublishCommand = ({ approvePreview, force }) => {
  const { t } = useTranslation();
  const createPreview = useCreatePreview();
  const { publishDeployment } = useDocumentManagementClient();
  const publishDeploymentAction = useAsyncCallback(
    async (_, deploymentId) => publishDeployment(deploymentId)
  );
  const { status } = useAsync(async () => {
    const preview = await createPreview();
    const preApprovePreview = force || ((0, import_variant.isType)(preview.deploymentStatus, DeploymentStatus.Success) ? approvePreview : false);
    if (preApprovePreview) {
      void publishDeploymentAction.execute(preview.deploymentId);
    }
    return {
      ...preview,
      preApprovePreview
    };
  }, []);
  return (0, import_variant.match)(status, {
    Error: () => null,
    Loading: () => /* @__PURE__ */ import_react.default.createElement(Spinner, { text: /* @__PURE__ */ import_react.default.createElement(Trans, { i18nKey: "publish_command.preview.loading" }) }),
    Success: ({ result }) => {
      return /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null, (0, import_variant.match)(result.deploymentStatus, {
        Success: () => /* @__PURE__ */ import_react.default.createElement(Alert, { type: "success" }, /* @__PURE__ */ import_react.default.createElement(
          Trans,
          {
            i18nKey: "publish_command.preview.success",
            components: [/* @__PURE__ */ import_react.default.createElement(Link, { url: result.previewUrl })]
          }
        )),
        Error: ({ deploymentError }) => /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null, /* @__PURE__ */ import_react.default.createElement(ErrorViewer, { error: deploymentError }), /* @__PURE__ */ import_react.default.createElement(Box_default, { marginTop: 1 }, /* @__PURE__ */ import_react.default.createElement(Alert, { type: "warning" }, /* @__PURE__ */ import_react.default.createElement(Trans, { i18nKey: "publish_command.preview.warning" }))))
      }), !result.preApprovePreview && /* @__PURE__ */ import_react.default.createElement(Box_default, { marginTop: 1 }, /* @__PURE__ */ import_react.default.createElement(
        ConfirmInput,
        {
          label: t("publish_command.confirm_publish"),
          onSubmit: (value) => {
            if (value) {
              void publishDeploymentAction.execute(result.deploymentId);
            }
          }
        }
      )), (0, import_variant.match)(publishDeploymentAction.status, {
        NotRequested: () => null,
        Error: () => null,
        Loading: () => /* @__PURE__ */ import_react.default.createElement(Box_default, { marginTop: 1 }, /* @__PURE__ */ import_react.default.createElement(
          Spinner,
          {
            text: /* @__PURE__ */ import_react.default.createElement(Trans, { i18nKey: "publish_command.publish.loading" })
          }
        )),
        Success: () => /* @__PURE__ */ import_react.default.createElement(Box_default, { marginTop: 1 }, /* @__PURE__ */ import_react.default.createElement(Alert, { type: "success" }, /* @__PURE__ */ import_react.default.createElement(Badge, { skin: "success" }, /* @__PURE__ */ import_react.default.createElement(Trans, { i18nKey: "general.success" })), " ", /* @__PURE__ */ import_react.default.createElement(
          Trans,
          {
            i18nKey: "publish_command.publish.success",
            components: [/* @__PURE__ */ import_react.default.createElement(Link, { url: result.siteUrl })]
          }
        )))
      }));
    }
  });
};
export {
  PublishCommand
};
//# sourceMappingURL=PublishCommand-JOFZNRJI.js.map
{"version":3,"sources":["../../cli-site/src/components/PublishCommand/PublishCommand.tsx"],"sourcesContent":["import React from 'react';\nimport type { FC } from 'react';\nimport { match, isType } from 'variant';\nimport { Trans, useTranslation } from '@wix/cli-i18n';\nimport {\n  Alert,\n  ConfirmInput,\n  Box,\n  Badge,\n  Spinner,\n  Link,\n  useAsync,\n  useAsyncCallback,\n} from '@wix/cli-ui-kit';\nimport { ErrorViewer } from '@wix/cli-error-reporting';\nimport {\n  DeploymentStatus,\n  useDocumentManagementClient,\n} from '@wix/document-management-client';\nimport { useCreatePreview } from '../PreviewCommand/useCreatePreview.js';\n\ninterface Props {\n  approvePreview: boolean;\n  force: boolean;\n}\n\nexport const PublishCommand: FC<Props> = ({ approvePreview, force }) => {\n  const { t } = useTranslation();\n  const createPreview = useCreatePreview();\n  const { publishDeployment } = useDocumentManagementClient();\n\n  const publishDeploymentAction = useAsyncCallback(\n    async (_, deploymentId: string) => publishDeployment(deploymentId)\n  );\n\n  const { status } = useAsync(async () => {\n    const preview = await createPreview();\n\n    const preApprovePreview =\n      force ||\n      (isType(preview.deploymentStatus, DeploymentStatus.Success)\n        ? approvePreview\n        : false);\n\n    if (preApprovePreview) {\n      void publishDeploymentAction.execute(preview.deploymentId);\n    }\n\n    return {\n      ...preview,\n      preApprovePreview,\n    };\n  }, []);\n\n  return match(status, {\n    Error: () => null,\n    Loading: () => (\n      <Spinner text={<Trans i18nKey=\"publish_command.preview.loading\" />} />\n    ),\n    Success: ({ result }) => {\n      return (\n        <>\n          {match(result.deploymentStatus, {\n            Success: () => (\n              <Alert type=\"success\">\n                <Trans\n                  i18nKey=\"publish_command.preview.success\"\n                  components={[<Link url={result.previewUrl} />]}\n                />\n              </Alert>\n            ),\n            Error: ({ deploymentError }) => (\n              <>\n                <ErrorViewer error={deploymentError} />\n                <Box marginTop={1}>\n                  <Alert type=\"warning\">\n                    <Trans i18nKey=\"publish_command.preview.warning\" />\n                  </Alert>\n                </Box>\n              </>\n            ),\n          })}\n          {!result.preApprovePreview && (\n            <Box marginTop={1}>\n              <ConfirmInput\n                label={t('publish_command.confirm_publish')}\n                onSubmit={(value) => {\n                  if (value) {\n                    void publishDeploymentAction.execute(result.deploymentId);\n                  }\n                }}\n              />\n            </Box>\n          )}\n          {match(publishDeploymentAction.status, {\n            NotRequested: () => null,\n            Error: () => null,\n            Loading: () => (\n              <Box marginTop={1}>\n                <Spinner\n                  text={<Trans i18nKey=\"publish_command.publish.loading\" />}\n                />\n              </Box>\n            ),\n            Success: () => (\n              <Box marginTop={1}>\n                <Alert type=\"success\">\n                  <Badge skin=\"success\">\n                    <Trans i18nKey=\"general.success\" />\n                  </Badge>{' '}\n                  <Trans\n                    i18nKey=\"publish_command.publish.success\"\n                    components={[<Link url={result.siteUrl} />]}\n                  />\n                </Alert>\n              </Box>\n            ),\n          })}\n        </>\n      );\n    },\n  });\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,mBAAkB;AAElB,qBAA8B;AAwBvB,IAAM,iBAA4B,CAAC,EAAE,gBAAgB,MAAM,MAAM;AACtE,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,gBAAgB,iBAAiB;AACvC,QAAM,EAAE,kBAAkB,IAAI,4BAA4B;AAE1D,QAAM,0BAA0B;AAAA,IAC9B,OAAO,GAAG,iBAAyB,kBAAkB,YAAY;AAAA,EACnE;AAEA,QAAM,EAAE,OAAO,IAAI,SAAS,YAAY;AACtC,UAAM,UAAU,MAAM,cAAc;AAEpC,UAAM,oBACJ,cACC,uBAAO,QAAQ,kBAAkB,iBAAiB,OAAO,IACtD,iBACA;AAEN,QAAI,mBAAmB;AACrB,WAAK,wBAAwB,QAAQ,QAAQ,YAAY;AAAA,IAC3D;AAEA,WAAO;AAAA,MACL,GAAG;AAAA,MACH;AAAA,IACF;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,aAAO,sBAAM,QAAQ;AAAA,IACnB,OAAO,MAAM;AAAA,IACb,SAAS,MACP,6BAAAA,QAAA,cAAC,WAAQ,MAAM,6BAAAA,QAAA,cAAC,SAAM,SAAQ,mCAAkC,GAAI;AAAA,IAEtE,SAAS,CAAC,EAAE,OAAO,MAAM;AACvB,aACE,6BAAAA,QAAA,2BAAAA,QAAA,oBACG,sBAAM,OAAO,kBAAkB;AAAA,QAC9B,SAAS,MACP,6BAAAA,QAAA,cAAC,SAAM,MAAK,aACV,6BAAAA,QAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,YAAY,CAAC,6BAAAA,QAAA,cAAC,QAAK,KAAK,OAAO,YAAY,CAAE;AAAA;AAAA,QAC/C,CACF;AAAA,QAEF,OAAO,CAAC,EAAE,gBAAgB,MACxB,6BAAAA,QAAA,2BAAAA,QAAA,gBACE,6BAAAA,QAAA,cAAC,eAAY,OAAO,iBAAiB,GACrC,6BAAAA,QAAA,cAAC,eAAI,WAAW,KACd,6BAAAA,QAAA,cAAC,SAAM,MAAK,aACV,6BAAAA,QAAA,cAAC,SAAM,SAAQ,mCAAkC,CACnD,CACF,CACF;AAAA,MAEJ,CAAC,GACA,CAAC,OAAO,qBACP,6BAAAA,QAAA,cAAC,eAAI,WAAW,KACd,6BAAAA,QAAA;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,EAAE,iCAAiC;AAAA,UAC1C,UAAU,CAAC,UAAU;AACnB,gBAAI,OAAO;AACT,mBAAK,wBAAwB,QAAQ,OAAO,YAAY;AAAA,YAC1D;AAAA,UACF;AAAA;AAAA,MACF,CACF,OAED,sBAAM,wBAAwB,QAAQ;AAAA,QACrC,cAAc,MAAM;AAAA,QACpB,OAAO,MAAM;AAAA,QACb,SAAS,MACP,6BAAAA,QAAA,cAAC,eAAI,WAAW,KACd,6BAAAA,QAAA;AAAA,UAAC;AAAA;AAAA,YACC,MAAM,6BAAAA,QAAA,cAAC,SAAM,SAAQ,mCAAkC;AAAA;AAAA,QACzD,CACF;AAAA,QAEF,SAAS,MACP,6BAAAA,QAAA,cAAC,eAAI,WAAW,KACd,6BAAAA,QAAA,cAAC,SAAM,MAAK,aACV,6BAAAA,QAAA,cAAC,SAAM,MAAK,aACV,6BAAAA,QAAA,cAAC,SAAM,SAAQ,mBAAkB,CACnC,GAAS,KACT,6BAAAA,QAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,YAAY,CAAC,6BAAAA,QAAA,cAAC,QAAK,KAAK,OAAO,SAAS,CAAE;AAAA;AAAA,QAC5C,CACF,CACF;AAAA,MAEJ,CAAC,CACH;AAAA,IAEJ;AAAA,EACF,CAAC;AACH;","names":["React"]}
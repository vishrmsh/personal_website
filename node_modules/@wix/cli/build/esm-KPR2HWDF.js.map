{"version":3,"sources":["../../../node_modules/@sentry/browser/build/npm/esm/index.js","../../../node_modules/@sentry/browser/src/helpers.ts","../../../node_modules/@sentry/browser/src/debug-build.ts","../../../node_modules/@sentry/browser/src/eventbuilder.ts","../../../node_modules/@sentry/browser/src/userfeedback.ts","../../../node_modules/@sentry/browser/src/client.ts","../../../node_modules/@sentry-internal/browser-utils/build/esm/index.js","../../../node_modules/@sentry-internal/browser-utils/src/debug-build.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/bindReporter.ts","../../../node_modules/@sentry-internal/browser-utils/src/types.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/generateUniqueID.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/getNavigationEntry.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/getActivationStart.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/initMetric.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/observe.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/onHidden.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/runOnce.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/getVisibilityWatcher.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/whenActivated.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/onFCP.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/getCLS.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/getFID.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/getINP.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/getLCP.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/onTTFB.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/instrument.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/utils.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/browserMetrics.ts","../../../node_modules/@sentry-internal/browser-utils/src/instrument/dom.ts","../../../node_modules/@sentry-internal/browser-utils/src/instrument/history.ts","../../../node_modules/@sentry-internal/browser-utils/src/getNativeImplementation.ts","../../../node_modules/@sentry-internal/browser-utils/src/instrument/xhr.ts","../../../node_modules/@sentry-internal/browser-utils/src/metrics/inp.ts","../../../node_modules/@sentry/browser/src/transports/fetch.ts","../../../node_modules/@sentry/browser/src/stack-parsers.ts","../../../node_modules/@sentry/browser/src/integrations/breadcrumbs.ts","../../../node_modules/@sentry/browser/src/integrations/browserapierrors.ts","../../../node_modules/@sentry/browser/src/integrations/globalhandlers.ts","../../../node_modules/@sentry/browser/src/integrations/httpcontext.ts","../../../node_modules/@sentry/browser/src/integrations/linkederrors.ts","../../../node_modules/@sentry/browser/src/sdk.ts","../../../node_modules/@sentry/browser/src/utils/lazyLoadIntegration.ts","../../../node_modules/@sentry/browser/src/integrations/reportingobserver.ts","../../../node_modules/@sentry/browser/src/integrations/httpclient.ts","../../../node_modules/@sentry/browser/src/integrations/contextlines.ts","../../../node_modules/@sentry-internal/replay/src/constants.ts","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","../../../node_modules/@sentry-internal/replay/src/types/rrweb.ts","../../../node_modules/@sentry-internal/replay/src/util/timestamp.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/util/addBreadcrumbEvent.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/util/domUtils.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/util/onWindowOpen.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/handleClick.ts","../../../node_modules/@sentry-internal/replay/src/util/createBreadcrumb.ts","../../../node_modules/node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js","../../../node_modules/@sentry-internal/replay/src/coreHandlers/util/getAttributesToRecord.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/handleDom.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/handleKeyboardEvent.ts","../../../node_modules/@sentry-internal/replay/src/util/createPerformanceEntries.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/performanceObserver.ts","../../../node_modules/@sentry-internal/replay/src/debug-build.ts","../../../node_modules/@sentry-internal/replay-worker/build/esm/worker.ts","../../../node_modules/@sentry-internal/replay-worker/build/esm/index.js","../../../node_modules/@sentry-internal/replay/src/util/log.ts","../../../node_modules/@sentry-internal/replay/src/eventBuffer/error.ts","../../../node_modules/@sentry-internal/replay/src/eventBuffer/EventBufferArray.ts","../../../node_modules/@sentry-internal/replay/src/eventBuffer/WorkerHandler.ts","../../../node_modules/@sentry-internal/replay/src/eventBuffer/EventBufferCompressionWorker.ts","../../../node_modules/@sentry-internal/replay/src/eventBuffer/EventBufferProxy.ts","../../../node_modules/@sentry-internal/replay/src/eventBuffer/index.ts","../../../node_modules/@sentry-internal/replay/src/util/hasSessionStorage.ts","../../../node_modules/@sentry-internal/replay/src/session/clearSession.ts","../../../node_modules/@sentry-internal/replay/src/util/isSampled.ts","../../../node_modules/@sentry-internal/replay/src/session/Session.ts","../../../node_modules/@sentry-internal/replay/src/session/saveSession.ts","../../../node_modules/@sentry-internal/replay/src/session/createSession.ts","../../../node_modules/@sentry-internal/replay/src/session/fetchSession.ts","../../../node_modules/@sentry-internal/replay/src/util/isExpired.ts","../../../node_modules/@sentry-internal/replay/src/util/isSessionExpired.ts","../../../node_modules/@sentry-internal/replay/src/session/shouldRefreshSession.ts","../../../node_modules/@sentry-internal/replay/src/session/loadOrCreateSession.ts","../../../node_modules/@sentry-internal/replay/src/util/addEvent.ts","../../../node_modules/@sentry-internal/replay/src/util/eventUtils.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/handleAfterSendEvent.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/handleBeforeSendEvent.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/handleBreadcrumbs.ts","../../../node_modules/@sentry-internal/replay/src/util/isRrwebError.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/util/addFeedbackBreadcrumb.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/util/shouldSampleForBufferEvent.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/handleGlobalEvent.ts","../../../node_modules/@sentry-internal/replay/src/util/createPerformanceSpans.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/handleHistory.ts","../../../node_modules/@sentry-internal/replay/src/util/shouldFilterRequest.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/util/addNetworkBreadcrumb.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/util/networkUtils.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/util/fetchUtils.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/util/xhrUtils.ts","../../../node_modules/@sentry-internal/replay/src/coreHandlers/handleNetworkBreadcrumbs.ts","../../../node_modules/@sentry-internal/replay/src/util/addGlobalListeners.ts","../../../node_modules/@sentry-internal/replay/src/util/addMemoryEntry.ts","../../../node_modules/@sentry-internal/replay/src/util/debounce.ts","../../../node_modules/@sentry-internal/replay/src/util/handleRecordingEmit.ts","../../../node_modules/@sentry-internal/replay/src/util/createReplayEnvelope.ts","../../../node_modules/@sentry-internal/replay/src/util/prepareRecordingData.ts","../../../node_modules/@sentry-internal/replay/src/util/prepareReplayEvent.ts","../../../node_modules/@sentry-internal/replay/src/util/sendReplayRequest.ts","../../../node_modules/@sentry-internal/replay/src/util/sendReplay.ts","../../../node_modules/@sentry-internal/replay/src/util/throttle.ts","../../../node_modules/@sentry-internal/replay/src/replay.ts","../../../node_modules/@sentry-internal/replay/src/util/getPrivacyOptions.ts","../../../node_modules/@sentry-internal/replay/src/util/maskAttribute.ts","../../../node_modules/@sentry-internal/replay/src/integration.ts","../../../node_modules/@sentry-internal/replay/src/util/getReplay.ts","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/serialize-args.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/2d.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/webgl.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-worker/es/rrweb-worker/image-bitmap-data-url-worker.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-worker/es/rrweb-worker/index.js","../../../node_modules/node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","../../../node_modules/@sentry-internal/replay-canvas/src/canvas.ts","../../../node_modules/@sentry-internal/feedback/src/constants/index.ts","../../../node_modules/@sentry-internal/feedback/src/core/sendFeedback.ts","../../../node_modules/@sentry-internal/feedback/src/util/debug-build.ts","../../../node_modules/@sentry-internal/feedback/src/util/isScreenshotSupported.ts","../../../node_modules/@sentry-internal/feedback/src/util/mergeOptions.ts","../../../node_modules/@sentry-internal/feedback/src/core/components/Actor.css.ts","../../../node_modules/@sentry-internal/feedback/src/util/setAttributesNS.ts","../../../node_modules/@sentry-internal/feedback/src/core/components/FeedbackIcon.ts","../../../node_modules/@sentry-internal/feedback/src/core/components/Actor.ts","../../../node_modules/@sentry-internal/feedback/src/core/createMainStyles.ts","../../../node_modules/@sentry-internal/feedback/src/core/integration.ts","../../../node_modules/@sentry-internal/feedback/src/core/getFeedback.ts","../../../node_modules/node_modules/preact/dist/preact.mjs","../../../node_modules/node_modules/preact/hooks/dist/hooks.mjs","../../../node_modules/@sentry-internal/feedback/src/modal/components/SentryLogo.ts","../../../node_modules/@sentry-internal/feedback/src/modal/components/DialogHeader.tsx","../../../node_modules/@sentry-internal/feedback/src/util/validate.ts","../../../node_modules/@sentry-internal/feedback/src/modal/components/Form.tsx","../../../node_modules/@sentry-internal/feedback/src/modal/components/SuccessIcon.ts","../../../node_modules/@sentry-internal/feedback/src/modal/components/Dialog.tsx","../../../node_modules/@sentry-internal/feedback/src/modal/components/Dialog.css.ts","../../../node_modules/@sentry-internal/feedback/src/modal/integration.tsx","../../../node_modules/@sentry-internal/feedback/src/screenshot/components/CropCorner.tsx","../../../node_modules/@sentry-internal/feedback/src/screenshot/components/ScreenshotInput.css.ts","../../../node_modules/@sentry-internal/feedback/src/screenshot/components/useTakeScreenshot.tsx","../../../node_modules/@sentry-internal/feedback/src/screenshot/components/ScreenshotEditor.tsx","../../../node_modules/@sentry-internal/feedback/src/screenshot/integration.ts","../../../node_modules/@sentry/browser/src/feedbackAsync.ts","../../../node_modules/@sentry/browser/src/feedbackSync.ts","../../../node_modules/@sentry/browser/src/metrics.ts","../../../node_modules/@sentry/browser/src/tracing/request.ts","../../../node_modules/@sentry/browser/src/tracing/backgroundtab.ts","../../../node_modules/@sentry/browser/src/tracing/browserTracingIntegration.ts","../../../node_modules/@sentry/browser/src/transports/offline.ts","../../../node_modules/@sentry/browser/src/profiling/utils.ts","../../../node_modules/@sentry/browser/src/profiling/startProfileForSpan.ts","../../../node_modules/@sentry/browser/src/profiling/integration.ts"],"sourcesContent":["export { SDK_VERSION, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, Scope, addBreadcrumb, addEventProcessor, addIntegration, addTracingExtensions, captureConsoleIntegration, captureEvent, captureException, captureFeedback, captureMessage, captureSession, close, continueTrace, createTransport, debugIntegration, dedupeIntegration, endSession, extraErrorDataIntegration, flush, functionToStringIntegration, getActiveSpan, getClient, getCurrentHub, getCurrentScope, getGlobalScope, getIsolationScope, getRootSpan, getSpanDescendants, getSpanStatusFromHttpCode, inboundFiltersIntegration, isInitialized, lastEventId, makeMultiplexedTransport, moduleMetadataIntegration, parameterize, registerSpanErrorInstrumentation, rewriteFramesIntegration, sessionTimingIntegration, setContext, setCurrentClient, setExtra, setExtras, setHttpStatus, setMeasurement, setTag, setTags, setUser, spanToBaggageHeader, spanToJSON, spanToTraceHeader, startInactiveSpan, startNewTrace, startSession, startSpan, startSpanManual, thirdPartyErrorFilterIntegration, withActiveSpan, withIsolationScope, withScope, zodErrorsIntegration } from '@sentry/core';\nexport { WINDOW } from './helpers.js';\nexport { BrowserClient } from './client.js';\nexport { makeFetchTransport } from './transports/fetch.js';\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser } from './stack-parsers.js';\nexport { eventFromException, eventFromMessage, exceptionFromError } from './eventbuilder.js';\nexport { createUserFeedbackEnvelope } from './userfeedback.js';\nexport { captureUserFeedback, forceLoad, getDefaultIntegrations, init, onLoad, showReportDialog } from './sdk.js';\nexport { breadcrumbsIntegration } from './integrations/breadcrumbs.js';\nexport { globalHandlersIntegration } from './integrations/globalhandlers.js';\nexport { httpContextIntegration } from './integrations/httpcontext.js';\nexport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nexport { browserApiErrorsIntegration } from './integrations/browserapierrors.js';\nexport { lazyLoadIntegration } from './utils/lazyLoadIntegration.js';\nexport { reportingObserverIntegration } from './integrations/reportingobserver.js';\nexport { httpClientIntegration } from './integrations/httpclient.js';\nexport { contextLinesIntegration } from './integrations/contextlines.js';\nexport { getReplay, replayIntegration } from '@sentry-internal/replay';\nexport { replayCanvasIntegration } from '@sentry-internal/replay-canvas';\nexport { feedbackAsyncIntegration } from './feedbackAsync.js';\nexport { feedbackSyncIntegration as feedbackIntegration, feedbackSyncIntegration } from './feedbackSync.js';\nexport { getFeedback, sendFeedback } from '@sentry-internal/feedback';\nexport { metrics } from './metrics.js';\nexport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './tracing/request.js';\nexport { browserTracingIntegration, startBrowserTracingNavigationSpan, startBrowserTracingPageLoadSpan } from './tracing/browserTracingIntegration.js';\nexport { makeBrowserOfflineTransport } from './transports/offline.js';\nexport { browserProfilingIntegration } from './profiling/integration.js';\n//# sourceMappingURL=index.js.map\n","import { captureException, withScope } from '@sentry/core';\nimport type { Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: normalizeToSize(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } as Exception,\n      ],\n    },\n    extra,\n  } satisfies Event;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0]!.stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex: Error): number {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex: Error & { framesToPop?: unknown }): number {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  level: SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj: Record<string, unknown>): Error | undefined {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n","import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n","import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /** If configured, this URL will be used as base URL for lazy loading integration. */\n    cdnBaseUrl?: string;\n  };\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const opts = {\n      // We default this to true, as it is the safer scenario\n      parentSpanIsAlwaysRootSpan: true,\n      ...options,\n    };\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    if (opts.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    level: SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   *\n   * @deprecated Use `captureFeedback` instead.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n}\n","export { addClsInstrumentationHandler, addFidInstrumentationHandler, addInpInstrumentationHandler, addLcpInstrumentationHandler, addPerformanceInstrumentationHandler, addTtfbInstrumentationHandler } from './metrics/instrument.js';\nexport { addPerformanceEntries, startTrackingInteractions, startTrackingLongAnimationFrames, startTrackingLongTasks, startTrackingWebVitals } from './metrics/browserMetrics.js';\nexport { addClickKeypressInstrumentationHandler } from './instrument/dom.js';\nexport { addHistoryInstrumentationHandler } from './instrument/history.js';\nexport { clearCachedImplementation, fetch, getNativeImplementation, setTimeout } from './getNativeImplementation.js';\nexport { SENTRY_XHR_DATA_KEY, addXhrInstrumentationHandler } from './instrument/xhr.js';\nexport { registerInpInteractionListener, startTrackingINP } from './metrics/inp.js';\n//# sourceMappingURL=index.js.map\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MetricRatingThresholds, MetricType } from '../types';\n\nconst getRating = (value: number, thresholds: MetricRatingThresholds): MetricType['rating'] => {\n  if (value > thresholds[1]) {\n    return 'poor';\n  }\n  if (value > thresholds[0]) {\n    return 'needs-improvement';\n  }\n  return 'good';\n};\n\nexport const bindReporter = <MetricName extends MetricType['name']>(\n  callback: (metric: Extract<MetricType, { name: MetricName }>) => void,\n  metric: Extract<MetricType, { name: MetricName }>,\n  thresholds: MetricRatingThresholds,\n  reportAllChanges?: boolean,\n) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          metric.rating = getRating(metric.value, thresholds);\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../../types';\nimport type { MetricType } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = <MetricName extends MetricType['name']>(name: MetricName, value?: number) => {\n  const navEntry = getNavigationEntry();\n  let navigationType: MetricType['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else if (WINDOW.document && WINDOW.document.wasDiscarded) {\n      navigationType = 'restore';\n    } else if (navEntry.type) {\n      navigationType = navEntry.type.replace(/_/g, '-') as MetricType['navigationType'];\n    }\n  }\n\n  // Use `entries` type specific for the metric.\n  const entries: Extract<MetricType, { name: MetricName }>['entries'] = [];\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good' as const, // If needed, will be updated when reported. `const` to keep the type from widening to `string`.\n    delta: 0,\n    entries,\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry } from '../types';\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        // Delay by a microtask to workaround a bug in Safari where the\n        // callback is invoked immediately, rather than in a separate task.\n        // See: https://github.com/GoogleChrome/web-vitals/issues/277\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        Promise.resolve().then(() => {\n          callback(list.getEntries() as PerformanceEntryMap[K]);\n        });\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback) => {\n  const onHiddenOrPageHide = (event: Event) => {\n    if (event.type === 'pagehide' || (WINDOW.document && WINDOW.document.visibilityState === 'hidden')) {\n      cb(event);\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface RunOnceCallback {\n  (arg: unknown): void;\n}\n\nexport const runOnce = (cb: RunOnceCallback) => {\n  let called = false;\n  return (arg: unknown) => {\n    if (!called) {\n      cb(arg);\n      called = true;\n    }\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../../types';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden when this code runs, assume it was always\n  // hidden and the page was loaded in the background, with the one exception\n  // that visibility state is always 'hidden' during prerendering, so we have\n  // to ignore that case until prerendering finishes (see: `prerenderingchange`\n  // event logic below).\n  firstHiddenTime = WINDOW.document!.visibilityState === 'hidden' && !WINDOW.document!.prerendering ? 0 : Infinity;\n};\n\nconst onVisibilityUpdate = (event: Event) => {\n  // If the document is 'hidden' and no previous hidden timestamp has been\n  // set, update it based on the current event data.\n  if (WINDOW.document!.visibilityState === 'hidden' && firstHiddenTime > -1) {\n    // If the event is a 'visibilitychange' event, it means the page was\n    // visible prior to this change, so the event timestamp is the first\n    // hidden time.\n    // However, if the event is not a 'visibilitychange' event, then it must\n    // be a 'prerenderingchange' event, and the fact that the document is\n    // still 'hidden' from the above check means the tab was activated\n    // in a background state and so has always been hidden.\n    firstHiddenTime = event.type === 'visibilitychange' ? event.timeStamp : 0;\n\n    // Remove all listeners now that a `firstHiddenTime` value has been set.\n    removeEventListener('visibilitychange', onVisibilityUpdate, true);\n    removeEventListener('prerenderingchange', onVisibilityUpdate, true);\n  }\n};\n\nconst addChangeListeners = () => {\n  addEventListener('visibilitychange', onVisibilityUpdate, true);\n  // IMPORTANT: when a page is prerendering, its `visibilityState` is\n  // 'hidden', so in order to account for cases where this module checks for\n  // visibility during prerendering, an additional check after prerendering\n  // completes is also required.\n  addEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\n\nexport const getVisibilityWatcher = () => {\n  if (WINDOW.document && firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    addChangeListeners();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../../types';\n\nexport const whenActivated = (callback: () => void) => {\n  if (WINDOW.document && WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => callback(), true);\n  } else {\n    callback();\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { whenActivated } from './lib/whenActivated';\nimport type { FCPMetric, FCPReportCallback, MetricRatingThresholds, ReportOpts } from './types';\n\n/** Thresholds for FCP. See https://web.dev/articles/fcp#what_is_a_good_fcp_score */\nexport const FCPThresholds: MetricRatingThresholds = [1800, 3000];\n\n/**\n * Calculates the [FCP](https://web.dev/articles/fcp) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `paint` performance entry used to determine the value. The reported\n * value is a `DOMHighResTimeStamp`.\n */\nexport const onFCP = (onReport: FCPReportCallback, opts: ReportOpts = {}): void => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FCP');\n    let report: ReturnType<typeof bindReporter>;\n\n    const handleEntries = (entries: FCPMetric['entries']) => {\n      (entries as PerformancePaintTiming[]).forEach(entry => {\n        if (entry.name === 'first-contentful-paint') {\n          po!.disconnect();\n\n          // Only report if the page wasn't hidden prior to the first paint.\n          if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n            // The activationStart reference is used because FCP should be\n            // relative to page activation rather than navigation start if the\n            // page was prerendered. But in cases where `activationStart` occurs\n            // after the FCP, this time should be clamped at 0.\n            metric.value = Math.max(entry.startTime - getActivationStart(), 0);\n            metric.entries.push(entry);\n            report(true);\n          }\n        }\n      });\n    };\n\n    const po = observe('paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, FCPThresholds, opts!.reportAllChanges);\n    }\n  });\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { runOnce } from './lib/runOnce';\nimport { onFCP } from './onFCP';\nimport type { CLSMetric, CLSReportCallback, MetricRatingThresholds, ReportOpts } from './types';\n\n/** Thresholds for CLS. See https://web.dev/articles/cls#what_is_a_good_cls_score */\nexport const CLSThresholds: MetricRatingThresholds = [0.1, 0.25];\n\n/**\n * Calculates the [CLS](https://web.dev/articles/cls) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/articles/cls#layout_shift_score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onCLS = (onReport: CLSReportCallback, opts: ReportOpts = {}): void => {\n  // Start monitoring FCP so we can only report CLS if FCP is also reported.\n  // Note: this is done to match the current behavior of CrUX.\n  onFCP(\n    runOnce(() => {\n      const metric = initMetric('CLS', 0);\n      let report: ReturnType<typeof bindReporter>;\n\n      let sessionValue = 0;\n      let sessionEntries: LayoutShift[] = [];\n\n      const handleEntries = (entries: LayoutShift[]): void => {\n        entries.forEach(entry => {\n          // Only count layout shifts without recent user input.\n          if (!entry.hadRecentInput) {\n            const firstSessionEntry = sessionEntries[0];\n            const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n            // If the entry occurred less than 1 second after the previous entry\n            // and less than 5 seconds after the first entry in the session,\n            // include the entry in the current session. Otherwise, start a new\n            // session.\n            if (\n              sessionValue &&\n              firstSessionEntry &&\n              lastSessionEntry &&\n              entry.startTime - lastSessionEntry.startTime < 1000 &&\n              entry.startTime - firstSessionEntry.startTime < 5000\n            ) {\n              sessionValue += entry.value;\n              sessionEntries.push(entry);\n            } else {\n              sessionValue = entry.value;\n              sessionEntries = [entry];\n            }\n          }\n        });\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          report();\n        }\n      };\n\n      const po = observe('layout-shift', handleEntries);\n      if (po) {\n        report = bindReporter(onReport, metric, CLSThresholds, opts.reportAllChanges);\n\n        onHidden(() => {\n          handleEntries(po.takeRecords() as CLSMetric['entries']);\n          report(true);\n        });\n\n        // Queue a task to report (if nothing else triggers a report first).\n        // This allows CLS to be reported as soon as FCP fires when\n        // `reportAllChanges` is true.\n        setTimeout(report, 0);\n      }\n    }),\n  );\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { runOnce } from './lib/runOnce';\nimport { whenActivated } from './lib/whenActivated';\nimport type { FIDMetric, FIDReportCallback, MetricRatingThresholds, ReportOpts } from './types';\n\n/** Thresholds for FID. See https://web.dev/articles/fid#what_is_a_good_fid_score */\nexport const FIDThresholds: MetricRatingThresholds = [100, 300];\n\n/**\n * Calculates the [FID](https://web.dev/articles/fid) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nexport const onFID = (onReport: FIDReportCallback, opts: ReportOpts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FID');\n    // eslint-disable-next-line prefer-const\n    let report: ReturnType<typeof bindReporter>;\n\n    const handleEntry = (entry: PerformanceEventTiming): void => {\n      // Only report if the page wasn't hidden prior to the first input.\n      if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n        metric.value = entry.processingStart - entry.startTime;\n        metric.entries.push(entry);\n        report(true);\n      }\n    };\n\n    const handleEntries = (entries: FIDMetric['entries']) => {\n      (entries as PerformanceEventTiming[]).forEach(handleEntry);\n    };\n\n    const po = observe('first-input', handleEntries);\n    report = bindReporter(onReport, metric, FIDThresholds, opts.reportAllChanges);\n\n    if (po) {\n      onHidden(\n        runOnce(() => {\n          handleEntries(po.takeRecords() as FIDMetric['entries']);\n          po.disconnect();\n        }),\n      );\n    }\n  });\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric } from '../../types';\nimport { observe } from '../observe';\n\ndeclare global {\n  interface Performance {\n    interactionCount: number;\n  }\n}\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries: Metric['entries']): void => {\n  (entries as PerformanceEventTiming[]).forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po: PerformanceObserver | undefined;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nexport const getInteractionCount = (): number => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nexport const initInteractionCountPolyfill = (): void => {\n  if ('interactionCount' in performance || po) return;\n\n  po = observe('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } as PerformanceObserverInit);\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { getInteractionCount, initInteractionCountPolyfill } from './lib/polyfills/interactionCountPolyfill';\nimport { whenActivated } from './lib/whenActivated';\nimport type { INPMetric, INPReportCallback, MetricRatingThresholds, ReportOpts } from './types';\n\ninterface Interaction {\n  id: number;\n  latency: number;\n  entries: PerformanceEventTiming[];\n}\n\n/** Thresholds for INP. See https://web.dev/articles/inp#what_is_a_good_inp_score */\nexport const INPThresholds: MetricRatingThresholds = [200, 500];\n\n// Used to store the interaction count after a bfcache restore, since p98\n// interaction latencies should only consider the current navigation.\nconst prevInteractionCount = 0;\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = () => {\n  return getInteractionCount() - prevInteractionCount;\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is as most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList: Interaction[] = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap: { [interactionId: string]: Interaction } = {};\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processEntry = (entry: PerformanceEventTiming) => {\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const existingInteraction = longestInteractionMap[entry.interactionId!];\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    (minLongestInteraction && entry.duration > minLongestInteraction.latency)\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      existingInteraction.entries.push(entry);\n      existingInteraction.latency = Math.max(existingInteraction.latency, entry.duration);\n    } else {\n      const interaction = {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        id: entry.interactionId!,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap[interaction.id] = interaction;\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete longestInteractionMap[i.id];\n    });\n  }\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = () => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n/**\n * Calculates the [INP](https://web.dev/articles/inp) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/articles/inp#what_is_a_good_inp_score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onINP = (onReport: INPReportCallback, opts: ReportOpts = {}) => {\n  whenActivated(() => {\n    // TODO(philipwalton): remove once the polyfill is no longer needed.\n    initInteractionCountPolyfill();\n\n    const metric = initMetric('INP');\n    // eslint-disable-next-line prefer-const\n    let report: ReturnType<typeof bindReporter>;\n\n    const handleEntries = (entries: INPMetric['entries']) => {\n      entries.forEach(entry => {\n        if (entry.interactionId) {\n          processEntry(entry);\n        }\n\n        // Entries of type `first-input` don't currently have an `interactionId`,\n        // so to consider them in INP we have to first check that an existing\n        // entry doesn't match the `duration` and `startTime`.\n        // Note that this logic assumes that `event` entries are dispatched\n        // before `first-input` entries. This is true in Chrome (the only browser\n        // that currently supports INP).\n        // TODO(philipwalton): remove once crbug.com/1325826 is fixed.\n        if (entry.entryType === 'first-input') {\n          const noMatchingEntry = !longestInteractionList.some(interaction => {\n            return interaction.entries.some(prevEntry => {\n              return entry.duration === prevEntry.duration && entry.startTime === prevEntry.startTime;\n            });\n          });\n          if (noMatchingEntry) {\n            processEntry(entry);\n          }\n        }\n      });\n\n      const inp = estimateP98LongestInteraction();\n\n      if (inp && inp.latency !== metric.value) {\n        metric.value = inp.latency;\n        metric.entries = inp.entries;\n        report();\n      }\n    };\n\n    const po = observe('event', handleEntries, {\n      // Event Timing entries have their durations rounded to the nearest 8ms,\n      // so a duration of 40ms would be any event that spans 2.5 or more frames\n      // at 60Hz. This threshold is chosen to strike a balance between usefulness\n      // and performance. Running this callback for any interaction that spans\n      // just one or two frames is likely not worth the insight that could be\n      // gained.\n      durationThreshold: opts.durationThreshold != null ? opts.durationThreshold : 40,\n    } as PerformanceObserverInit);\n\n    report = bindReporter(onReport, metric, INPThresholds, opts.reportAllChanges);\n\n    if (po) {\n      // If browser supports interactionId (and so supports INP), also\n      // observe entries of type `first-input`. This is useful in cases\n      // where the first interaction is less than the `durationThreshold`.\n      if ('PerformanceEventTiming' in WINDOW && 'interactionId' in PerformanceEventTiming.prototype) {\n        po.observe({ type: 'first-input', buffered: true });\n      }\n\n      onHidden(() => {\n        handleEntries(po.takeRecords() as INPMetric['entries']);\n\n        // If the interaction count shows that there were interactions but\n        // none were captured by the PerformanceObserver, report a latency of 0.\n        if (metric.value < 0 && getInteractionCountForNavigation() > 0) {\n          metric.value = 0;\n          metric.entries = [];\n        }\n\n        report(true);\n      });\n    }\n  });\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { runOnce } from './lib/runOnce';\nimport { whenActivated } from './lib/whenActivated';\nimport type { LCPMetric, LCPReportCallback, MetricRatingThresholds, ReportOpts } from './types';\n\n/** Thresholds for LCP. See https://web.dev/articles/lcp#what_is_a_good_lcp_score */\nexport const LCPThresholds: MetricRatingThresholds = [2500, 4000];\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/articles/lcp) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called any time a new `largest-contentful-paint`\n * performance entry is dispatched, or once the final value of the metric has\n * been determined.\n */\nexport const onLCP = (onReport: LCPReportCallback, opts: ReportOpts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('LCP');\n    let report: ReturnType<typeof bindReporter>;\n\n    const handleEntries = (entries: LCPMetric['entries']) => {\n      const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n      if (lastEntry) {\n        // Only report if the page wasn't hidden prior to LCP.\n        if (lastEntry.startTime < visibilityWatcher.firstHiddenTime) {\n          // The startTime attribute returns the value of the renderTime if it is\n          // not 0, and the value of the loadTime otherwise. The activationStart\n          // reference is used because LCP should be relative to page activation\n          // rather than navigation start if the page was prerendered. But in cases\n          // where `activationStart` occurs after the LCP, this time should be\n          // clamped at 0.\n          metric.value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n          metric.entries = [lastEntry];\n          report();\n        }\n      }\n    };\n\n    const po = observe('largest-contentful-paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, LCPThresholds, opts.reportAllChanges);\n\n      const stopListening = runOnce(() => {\n        if (!reportedMetricIDs[metric.id]) {\n          handleEntries(po.takeRecords() as LCPMetric['entries']);\n          po.disconnect();\n          reportedMetricIDs[metric.id] = true;\n          report(true);\n        }\n      });\n\n      // Stop listening after input. Note: while scrolling is an input that\n      // stops LCP observation, it's unreliable since it can be programmatically\n      // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n      ['keydown', 'click'].forEach(type => {\n        if (WINDOW.document) {\n          // Wrap in a setTimeout so the callback is run in a separate task\n          // to avoid extending the keyboard/click handler to reduce INP impact\n          // https://github.com/GoogleChrome/web-vitals/issues/383\n          addEventListener(type, () => setTimeout(stopListening, 0), true);\n        }\n      });\n\n      onHidden(stopListening);\n    }\n  });\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getNavigationEntry } from './lib/getNavigationEntry';\nimport { initMetric } from './lib/initMetric';\nimport { whenActivated } from './lib/whenActivated';\nimport type { MetricRatingThresholds, ReportOpts, TTFBReportCallback } from './types';\n\n/** Thresholds for TTFB. See https://web.dev/articles/ttfb#what_is_a_good_ttfb_score */\nexport const TTFBThresholds: MetricRatingThresholds = [800, 1800];\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback: () => void) => {\n  if (WINDOW.document && WINDOW.document.prerendering) {\n    whenActivated(() => whenReady(callback));\n  } else if (WINDOW.document && WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/articles/ttfb) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nexport const onTTFB = (onReport: TTFBReportCallback, opts: ReportOpts = {}) => {\n  const metric = initMetric('TTFB');\n  const report = bindReporter(onReport, metric, TTFBThresholds, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navEntry = getNavigationEntry();\n\n    if (navEntry) {\n      const responseStart = navEntry.responseStart;\n\n      // In some cases no value is reported by the browser (for\n      // privacy/security reasons), and in other cases (bugs) the value is\n      // negative or is larger than the current page time. Ignore these cases:\n      // https://github.com/GoogleChrome/web-vitals/issues/137\n      // https://github.com/GoogleChrome/web-vitals/issues/162\n      // https://github.com/GoogleChrome/web-vitals/issues/275\n      if (responseStart <= 0 || responseStart > performance.now()) return;\n\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(responseStart - getActivationStart(), 0);\n\n      metric.entries = [navEntry];\n      report(true);\n    }\n  });\n};\n","import { getFunctionName, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { onCLS } from './web-vitals/getCLS';\nimport { onFID } from './web-vitals/getFID';\nimport { onINP } from './web-vitals/getINP';\nimport { onLCP } from './web-vitals/getLCP';\nimport { observe } from './web-vitals/lib/observe';\nimport { onTTFB } from './web-vitals/onTTFB';\n\ntype InstrumentHandlerTypePerformanceObserver =\n  | 'longtask'\n  | 'event'\n  | 'navigation'\n  | 'paint'\n  | 'resource'\n  | 'first-input';\n\ntype InstrumentHandlerTypeMetric = 'cls' | 'lcp' | 'fid' | 'ttfb' | 'inp';\n\n// We provide this here manually instead of relying on a global, as this is not available in non-browser environements\n// And we do not want to expose such types\ninterface PerformanceEntry {\n  readonly duration: number;\n  readonly entryType: string;\n  readonly name: string;\n  readonly startTime: number;\n  toJSON(): Record<string, unknown>;\n}\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: number;\n  processingEnd: number;\n  duration: number;\n  cancelable?: boolean;\n  target?: unknown | null;\n  interactionId?: number;\n}\n\ninterface PerformanceScriptTiming extends PerformanceEntry {\n  sourceURL: string;\n  sourceFunctionName: string;\n  sourceCharPosition: number;\n  invoker: string;\n  invokerType: string;\n}\nexport interface PerformanceLongAnimationFrameTiming extends PerformanceEntry {\n  scripts: PerformanceScriptTiming[];\n}\n\ninterface Metric {\n  /**\n   * The name of the metric (in acronym form).\n   */\n  name: 'CLS' | 'FCP' | 'FID' | 'INP' | 'LCP' | 'TTFB';\n\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation\n   *\n   * Navigation Timing API (or `undefined` if the browser doesn't\n   * support that API). For pages that are restored from the bfcache, this\n   * value will be 'back-forward-cache'.\n   */\n  navigationType: 'navigate' | 'reload' | 'back-forward' | 'back-forward-cache' | 'prerender' | 'restore';\n}\n\ntype InstrumentHandlerType = InstrumentHandlerTypeMetric | InstrumentHandlerTypePerformanceObserver;\n\ntype StopListening = undefined | void | (() => void);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype InstrumentHandlerCallback = (data: any) => void;\n\ntype CleanupHandlerCallback = () => void;\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\nlet _previousCls: Metric | undefined;\nlet _previousFid: Metric | undefined;\nlet _previousLcp: Metric | undefined;\nlet _previousTtfb: Metric | undefined;\nlet _previousInp: Metric | undefined;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nexport function addClsInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nexport function addLcpInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addFidInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nexport function addTtfbInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addInpInstrumentationHandler(\n  callback: (data: { metric: Omit<Metric, 'entries'> & { entries: PerformanceEventTiming[] } }) => void,\n): CleanupHandlerCallback {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\nexport function addPerformanceInstrumentationHandler(\n  type: 'event',\n  callback: (data: { entries: ((PerformanceEntry & { target?: unknown | null }) | PerformanceEventTiming)[] }) => void,\n): CleanupHandlerCallback;\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback;\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls(): StopListening {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    // We want the callback to be called whenever the CLS value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid(): void {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp(): StopListening {\n  return onLCP(\n    metric => {\n      triggerHandlers('lcp', {\n        metric,\n      });\n      _previousLcp = metric;\n    },\n    // We want the callback to be called whenever the LCP value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentTtfb(): StopListening {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp(): void {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type: InstrumentHandlerTypeMetric,\n  callback: InstrumentHandlerCallback,\n  instrumentFn: () => StopListening,\n  previousValue: Metric | undefined,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  let stopListening: StopListening | undefined;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type: InstrumentHandlerTypePerformanceObserver): void {\n  const options: PerformanceObserverInit = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type: InstrumentHandlerType,\n  callback: InstrumentHandlerCallback,\n  stopListening: StopListening,\n): CleanupHandlerCallback {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\n/**\n * Check if a PerformanceEntry is a PerformanceEventTiming by checking for the `duration` property.\n */\nexport function isPerformanceEventTiming(entry: PerformanceEntry): entry is PerformanceEventTiming {\n  return 'duration' in entry;\n}\n","import type { SentrySpan } from '@sentry/core';\nimport { spanToJSON, startInactiveSpan, withActiveSpan } from '@sentry/core';\nimport type { Span, SpanTimeInput, StartSpanOptions } from '@sentry/types';\nimport { WINDOW } from '../types';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nexport function isMeasurementValue(value: unknown): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nexport function startAndEndSpan(\n  parentSpan: Span,\n  startTimeInSeconds: number,\n  endTime: SpanTimeInput,\n  { ...ctx }: StartSpanOptions,\n): Span | undefined {\n  const parentStartTime = spanToJSON(parentSpan).start_timestamp;\n  if (parentStartTime && parentStartTime > startTimeInSeconds) {\n    // We can only do this for SentrySpans...\n    if (typeof (parentSpan as Partial<SentrySpan>).updateStartTime === 'function') {\n      (parentSpan as SentrySpan).updateStartTime(startTimeInSeconds);\n    }\n  }\n\n  // The return value only exists for tests\n  return withActiveSpan(parentSpan, () => {\n    const span = startInactiveSpan({\n      startTime: startTimeInSeconds,\n      ...ctx,\n    });\n\n    if (span) {\n      span.end(endTime);\n    }\n\n    return span;\n  });\n}\n\n/** Get the browser performance API. */\nexport function getBrowserPerformanceAPI(): Performance | undefined {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nexport function msToSec(time: number): number {\n  return time / 1000;\n}\n","/* eslint-disable max-lines */\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getActiveSpan, startInactiveSpan } from '@sentry/core';\nimport { setMeasurement } from '@sentry/core';\nimport type { Measurements, Span, SpanAttributes, StartSpanOptions } from '@sentry/types';\nimport { browserPerformanceTimeOrigin, getComponentName, htmlTreeAsString, logger, parseUrl } from '@sentry/utils';\n\nimport { spanToJSON } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../types';\nimport {\n  type PerformanceLongAnimationFrameTiming,\n  addClsInstrumentationHandler,\n  addFidInstrumentationHandler,\n  addLcpInstrumentationHandler,\n  addPerformanceInstrumentationHandler,\n  addTtfbInstrumentationHandler,\n} from './instrument';\nimport { getBrowserPerformanceAPI, isMeasurementValue, msToSec, startAndEndSpan } from './utils';\nimport { getNavigationEntry } from './web-vitals/lib/getNavigationEntry';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher';\n\ninterface NavigatorNetworkInformation {\n  readonly connection?: NetworkInformation;\n}\n\n// http://wicg.github.io/netinfo/#connection-types\ntype ConnectionType = 'bluetooth' | 'cellular' | 'ethernet' | 'mixed' | 'none' | 'other' | 'unknown' | 'wifi' | 'wimax';\n\n// http://wicg.github.io/netinfo/#effectiveconnectiontype-enum\ntype EffectiveConnectionType = '2g' | '3g' | '4g' | 'slow-2g';\n\n// http://wicg.github.io/netinfo/#dom-megabit\ntype Megabit = number;\n// http://wicg.github.io/netinfo/#dom-millisecond\ntype Millisecond = number;\n\n// http://wicg.github.io/netinfo/#networkinformation-interface\ninterface NetworkInformation extends EventTarget {\n  // http://wicg.github.io/netinfo/#type-attribute\n  readonly type?: ConnectionType;\n  // http://wicg.github.io/netinfo/#effectivetype-attribute\n  readonly effectiveType?: EffectiveConnectionType;\n  // http://wicg.github.io/netinfo/#downlinkmax-attribute\n  readonly downlinkMax?: Megabit;\n  // http://wicg.github.io/netinfo/#downlink-attribute\n  readonly downlink?: Megabit;\n  // http://wicg.github.io/netinfo/#rtt-attribute\n  readonly rtt?: Millisecond;\n  // http://wicg.github.io/netinfo/#savedata-attribute\n  readonly saveData?: boolean;\n  // http://wicg.github.io/netinfo/#handling-changes-to-the-underlying-connection\n  onchange?: EventListener;\n}\n\n// https://w3c.github.io/device-memory/#sec-device-memory-js-api\ninterface NavigatorDeviceMemory {\n  readonly deviceMemory?: number;\n}\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\nlet _performanceCursor: number = 0;\n\nlet _measurements: Measurements = {};\nlet _lcpEntry: LargestContentfulPaint | undefined;\nlet _clsEntry: LayoutShift | undefined;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nexport function startTrackingWebVitals(): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n    const ttfbCallback = _trackTtfb();\n\n    return (): void => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n      ttfbCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nexport function startTrackingLongTasks(): void {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      if (!getActiveSpan()) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      const span = startInactiveSpan({\n        name: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        startTime,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n      if (span) {\n        span.end(startTime + duration);\n      }\n    }\n  });\n}\n\n/**\n * Start tracking long animation frames.\n */\nexport function startTrackingLongAnimationFrames(): void {\n  // NOTE: the current web-vitals version (3.5.2) does not support long-animation-frame, so\n  // we directly observe `long-animation-frame` events instead of through the web-vitals\n  // `observe` helper function.\n  const observer = new PerformanceObserver(list => {\n    for (const entry of list.getEntries() as PerformanceLongAnimationFrameTiming[]) {\n      if (!getActiveSpan()) {\n        return;\n      }\n      if (!entry.scripts[0]) {\n        return;\n      }\n\n      const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      const attributes: SpanAttributes = {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      };\n      const initialScript = entry.scripts[0];\n      if (initialScript) {\n        const { invoker, invokerType, sourceURL, sourceFunctionName, sourceCharPosition } = initialScript;\n        attributes['browser.script.invoker'] = invoker;\n        attributes['browser.script.invoker_type'] = invokerType;\n        if (sourceURL) {\n          attributes['code.filepath'] = sourceURL;\n        }\n        if (sourceFunctionName) {\n          attributes['code.function'] = sourceFunctionName;\n        }\n        if (sourceCharPosition !== -1) {\n          attributes['browser.script.source_char_position'] = sourceCharPosition;\n        }\n      }\n\n      const span = startInactiveSpan({\n        name: 'Main UI thread blocked',\n        op: 'ui.long-animation-frame',\n        startTime,\n        attributes,\n      });\n      if (span) {\n        span.end(startTime + duration);\n      }\n    }\n  });\n\n  observer.observe({ type: 'long-animation-frame', buffered: true });\n}\n\n/**\n * Start tracking interaction events.\n */\nexport function startTrackingInteractions(): void {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    for (const entry of entries) {\n      if (!getActiveSpan()) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const spanOptions: StartSpanOptions & Required<Pick<StartSpanOptions, 'attributes'>> = {\n          name: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTime: startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n          },\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          spanOptions.attributes['ui.component_name'] = componentName;\n        }\n\n        const span = startInactiveSpan(spanOptions);\n        if (span) {\n          span.end(startTime + duration);\n        }\n      }\n    }\n  });\n}\n\nexport { startTrackingINP, registerInpInteractionListener } from './inp';\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS(): () => void {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry as LayoutShift;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(): () => void {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry as LargestContentfulPaint;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID(): () => void {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n    const startTime = msToSec(entry.startTime);\n    DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb(): () => void {\n  return addTtfbInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nexport function addPerformanceEntries(span: Span): void {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(span);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry: Record<string, any>) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(\n      // Inexplicibly, Chrome sometimes emits a negative duration. We need to work around this.\n      // There is a SO post attempting to explain this, but it leaves one with open questions: https://stackoverflow.com/questions/23191918/peformance-getentries-and-negative-duration-display\n      // The way we clamp the value is probably not accurate, since we have observed this happen for things that may take a while to load, like for example the replay worker.\n      // TODO: Investigate why this happens and how to properly mitigate. For now, this is a workaround to prevent transactions being dropped due to negative duration spans.\n      Math.max(0, entry.duration),\n    );\n\n    if (op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(span, entry, timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(span, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(span, entry, entry.name as string, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(span);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      const measurement = _measurements[name];\n      if (!measurement || !transactionStartTime || timeOrigin >= transactionStartTime) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the span span data, so these web vitals will need\n      // to be adjusted to be relative to span.startTimestamp.\n      const oldValue = measurement.value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transactionStartTime) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      DEBUG_BUILD && logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      measurement.value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      startAndEndSpan(span, fidMark.value, fidMark.value + msToSec(_measurements['fid'].value), {\n        name: 'first input delay',\n        op: 'ui.action',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.entries(_measurements).forEach(([measurementName, measurement]) => {\n      setMeasurement(measurementName, measurement.value, measurement.unit);\n    });\n\n    _tagMetricInfo(span);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nexport function _addMeasureSpans(\n  span: Span,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): number {\n  const navEntry = getNavigationEntry();\n  const requestTime = msToSec(navEntry ? navEntry.requestStart : 0);\n  // Because performance.measure accepts arbitrary timestamps it can produce\n  // spans that happen before the browser even makes a request for the page.\n  //\n  // An example of this is the automatically generated Next.js-before-hydration\n  // spans created by the Next.js framework.\n  //\n  // To prevent this we will pin the start timestamp to the request start time\n  // This does make duration inaccruate, so if this does happen, we will add\n  // an attribute to the span\n  const measureStartTimestamp = timeOrigin + Math.max(startTime, requestTime);\n  const startTimeStamp = timeOrigin + startTime;\n  const measureEndTimestamp = startTimeStamp + duration;\n\n  const attributes: SpanAttributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n\n  if (measureStartTimestamp !== startTimeStamp) {\n    attributes['sentry.browser.measure_happened_before_request'] = true;\n    attributes['sentry.browser.measure_start_time'] = measureStartTimestamp;\n  }\n\n  startAndEndSpan(span, measureStartTimestamp, measureEndTimestamp, {\n    name: entry.name as string,\n    op: entry.entryType as string,\n    attributes,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(span: Span, entry: Record<string, any>, timeOrigin: number): void {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(span, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(span, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(span, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(span, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(span, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  span: Span,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  event: string,\n  timeOrigin: number,\n  name?: string,\n  eventEnd?: string,\n): void {\n  const end = eventEnd ? (entry[eventEnd] as number | undefined) : (entry[`${event}End`] as number | undefined);\n  const start = entry[`${event}Start`] as number | undefined;\n  if (!start || !end) {\n    return;\n  }\n  startAndEndSpan(span, timeOrigin + msToSec(start), timeOrigin + msToSec(end), {\n    op: 'browser',\n    name: name || event,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n    },\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(span: Span, entry: Record<string, any>, timeOrigin: number): void {\n  const requestStartTimestamp = timeOrigin + msToSec(entry.requestStart as number);\n  const responseEndTimestamp = timeOrigin + msToSec(entry.responseEnd as number);\n  const responseStartTimestamp = timeOrigin + msToSec(entry.responseStart as number);\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire span if it contained faulty spans.\n    startAndEndSpan(span, requestStartTimestamp, responseEndTimestamp, {\n      op: 'browser',\n      name: 'request',\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      },\n    });\n\n    startAndEndSpan(span, responseStartTimestamp, responseEndTimestamp, {\n      op: 'browser',\n      name: 'response',\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      },\n    });\n  }\n}\n\nexport interface ResourceEntry extends Record<string, unknown> {\n  initiatorType?: string;\n  transferSize?: number;\n  encodedBodySize?: number;\n  decodedBodySize?: number;\n  renderBlockingStatus?: string;\n}\n\n/** Create resource-related spans */\nexport function _addResourceSpans(\n  span: Span,\n  entry: ResourceEntry,\n  resourceUrl: string,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): void {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  const attributes: SpanAttributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n  setResourceEntrySizeData(attributes, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(attributes, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(attributes, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  if ('renderBlockingStatus' in entry) {\n    attributes['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n  if (parsedUrl.protocol) {\n    attributes['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    attributes['server.address'] = parsedUrl.host;\n  }\n\n  attributes['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  startAndEndSpan(span, startTimestamp, endTimestamp, {\n    name: resourceUrl.replace(WINDOW.location.origin, ''),\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    attributes,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(span: Span): void {\n  const navigator = WINDOW.navigator as null | (Navigator & NavigatorNetworkInformation & NavigatorDeviceMemory);\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      span.setAttribute('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      span.setAttribute('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    span.setAttribute('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    span.setAttribute('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to span to allow debugging */\nfunction _tagMetricInfo(span: Span): void {\n  if (_lcpEntry) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      span.setAttribute('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      span.setAttribute('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      span.setAttribute('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    span.setAttribute('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      span.setAttribute(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  attributes: SpanAttributes,\n  entry: ResourceEntry,\n  key: keyof Pick<ResourceEntry, 'transferSize' | 'encodedBodySize' | 'decodedBodySize'>,\n  dataKey: 'http.response_transfer_size' | 'http.response_content_length' | 'http.decoded_response_content_length',\n): void {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    attributes[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements: Measurements): void {\n  const navEntry = getNavigationEntry();\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB Request Time');\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n","import type { HandlerDataDom } from '@sentry/types';\n\nimport { addHandler, addNonEnumerableProperty, fill, maybeInstrument, triggerHandlers, uuid4 } from '@sentry/utils';\nimport { WINDOW } from '../types';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: unknown;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","import type { HandlerDataHistory } from '@sentry/types';\nimport { addHandler, fill, maybeInstrument, supportsHistory, triggerHandlers } from '@sentry/utils';\nimport { WINDOW } from '../types';\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: unknown[]) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: unknown[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n","import { isNativeFunction, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build';\nimport { WINDOW } from './types';\n\n/**\n * We generally want to use window.fetch / window.setTimeout.\n * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n * so we try to get an unpatched version of this from a sandboxed iframe.\n */\n\ninterface CacheableImplementations {\n  setTimeout: typeof WINDOW.setTimeout;\n  fetch: typeof WINDOW.fetch;\n}\n\nconst cachedImplementations: Partial<CacheableImplementations> = {};\n\n/**\n * Get the native implementation of a browser function.\n *\n * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n *\n * The following methods can be retrieved:\n * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n */\nexport function getNativeImplementation<T extends keyof CacheableImplementations>(\n  name: T,\n): CacheableImplementations[T] {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n\n  let impl = WINDOW[name] as CacheableImplementations[T];\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFunction(impl)) {\n    return (cachedImplementations[name] = impl.bind(WINDOW) as CacheableImplementations[T]);\n  }\n\n  const document = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = contentWindow[name] as CacheableImplementations[T];\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      // Could not create sandbox iframe, just use window.xxx\n      DEBUG_BUILD && logger.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n    }\n  }\n\n  // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n  // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n  if (!impl) {\n    return impl;\n  }\n\n  return (cachedImplementations[name] = impl.bind(WINDOW) as CacheableImplementations[T]);\n}\n\n/** Clear a cached implementation. */\nexport function clearCachedImplementation(name: keyof CacheableImplementations): void {\n  cachedImplementations[name] = undefined;\n}\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function fetch(...rest: Parameters<typeof WINDOW.fetch>): ReturnType<typeof WINDOW.fetch> {\n  return getNativeImplementation('fetch')(...rest);\n}\n\n/**\n * Get an unwrapped `setTimeout` method.\n * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n * avoiding triggering change detection.\n */\nexport function setTimeout(...rest: Parameters<typeof WINDOW.setTimeout>): ReturnType<typeof WINDOW.setTimeout> {\n  return getNativeImplementation('setTimeout')(...rest);\n}\n","import type { HandlerDataXhr, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { addHandler, fill, isString, maybeInstrument, timestampInSeconds, triggerHandlers } from '@sentry/utils';\nimport { WINDOW } from '../types';\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\ntype WindowWithXhr = Window & { XMLHttpRequest?: typeof XMLHttpRequest };\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  if (!(WINDOW as WindowWithXhr).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: unknown[]): void {\n      const startTimestamp = timestampInSeconds() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            endTimestamp: timestampInSeconds() * 1000,\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction) {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: unknown[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction) {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: unknown[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        startTimestamp: timestampInSeconds() * 1000,\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import {\n  SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME,\n  SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT,\n  SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  getActiveSpan,\n  getClient,\n  getCurrentScope,\n  getRootSpan,\n  spanToJSON,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { Integration, Span, SpanAttributes } from '@sentry/types';\nimport { browserPerformanceTimeOrigin, dropUndefinedKeys, htmlTreeAsString } from '@sentry/utils';\nimport { WINDOW } from '../types';\nimport {\n  addInpInstrumentationHandler,\n  addPerformanceInstrumentationHandler,\n  isPerformanceEventTiming,\n} from './instrument';\nimport { getBrowserPerformanceAPI, msToSec } from './utils';\n\nconst LAST_INTERACTIONS: number[] = [];\nconst INTERACTIONS_SPAN_MAP = new Map<number, Span>();\n\n/**\n * Start tracking INP webvital events.\n */\nexport function startTrackingINP(): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP();\n\n    return (): void => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\nconst INP_ENTRY_MAP: Record<string, 'click' | 'hover' | 'drag' | 'press'> = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP(): () => void {\n  return addInpInstrumentationHandler(({ metric }) => {\n    const client = getClient();\n    if (!client || metric.value == undefined) {\n      return;\n    }\n\n    const entry = metric.entries.find(entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name]);\n\n    if (!entry) {\n      return;\n    }\n\n    const { interactionId } = entry;\n    const interactionType = INP_ENTRY_MAP[entry.name];\n\n    const options = client.getOptions();\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const scope = getCurrentScope();\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan ? getRootSpan(activeSpan) : undefined;\n\n    // We first try to lookup the span from our INTERACTIONS_SPAN_MAP,\n    // where we cache the route per interactionId\n    const cachedSpan = interactionId != null ? INTERACTIONS_SPAN_MAP.get(interactionId) : undefined;\n\n    const spanToUse = cachedSpan || rootSpan;\n\n    // Else, we try to use the active span.\n    // Finally, we fall back to look at the transactionName on the scope\n    const routeName = spanToUse ? spanToJSON(spanToUse).description : scope.getScopeData().transactionName;\n\n    const user = scope.getUser();\n\n    // We need to get the replay, user, and activeTransaction from the current scope\n    // so that we can associate replay id, profile id, and a user display to the span\n    const replay = client.getIntegrationByName<Integration & { getReplayId: () => string }>('Replay');\n\n    const replayId = replay && replay.getReplayId();\n\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    let profileId: string | undefined = undefined;\n    try {\n      // @ts-expect-error skip optional chaining to save bundle size with try catch\n      profileId = scope.getScopeData().contexts.profile.profile_id;\n    } catch {\n      // do nothing\n    }\n\n    const name = htmlTreeAsString(entry.target);\n    const attributes: SpanAttributes = dropUndefinedKeys({\n      release: options.release,\n      environment: options.environment,\n      transaction: routeName,\n      [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: metric.value,\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.inp',\n      user: userDisplay || undefined,\n      profile_id: profileId || undefined,\n      replay_id: replayId || undefined,\n      // INP score calculation in the sentry backend relies on the user agent\n      // to account for different INP values being reported from different browsers\n      'user_agent.original': WINDOW.navigator && WINDOW.navigator.userAgent,\n    });\n\n    const span = startInactiveSpan({\n      name,\n      op: `ui.interaction.${interactionType}`,\n      attributes,\n      startTime: startTime,\n      experimental: {\n        standalone: true,\n      },\n    });\n\n    span.addEvent('inp', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: metric.value,\n    });\n\n    span.end(startTime + duration);\n  });\n}\n\n/**\n * Register a listener to cache route information for INP interactions.\n * TODO(v9): `latestRoute` no longer needs to be passed in and will be removed in v9.\n */\nexport function registerInpInteractionListener(_latestRoute?: unknown): void {\n  const handleEntries = ({ entries }: { entries: PerformanceEntry[] }): void => {\n    const activeSpan = getActiveSpan();\n    const activeRootSpan = activeSpan && getRootSpan(activeSpan);\n\n    entries.forEach(entry => {\n      if (!isPerformanceEventTiming(entry) || !activeRootSpan) {\n        return;\n      }\n\n      const interactionId = entry.interactionId;\n      if (interactionId == null) {\n        return;\n      }\n\n      // If the interaction was already recorded before, nothing more to do\n      if (INTERACTIONS_SPAN_MAP.has(interactionId)) {\n        return;\n      }\n\n      // We keep max. 10 interactions in the list, then remove the oldest one & clean up\n      if (LAST_INTERACTIONS.length > 10) {\n        const last = LAST_INTERACTIONS.shift() as number;\n        INTERACTIONS_SPAN_MAP.delete(last);\n      }\n\n      // We add the interaction to the list of recorded interactions\n      // and store the span for this interaction\n      LAST_INTERACTIONS.push(interactionId);\n      INTERACTIONS_SPAN_MAP.set(interactionId, activeRootSpan);\n    });\n  };\n\n  addPerformanceInstrumentationHandler('event', handleEntries);\n  addPerformanceInstrumentationHandler('first-input', handleEntries);\n}\n","import { clearCachedImplementation, getNativeImplementation } from '@sentry-internal/browser-utils';\nimport { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\nimport type { WINDOW } from '../helpers';\n\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: typeof WINDOW.fetch | undefined = getNativeImplementation('fetch'),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      clearCachedImplementation('fetch');\n      return rejectedSyncPromise('No fetch implementation available');\n    }\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedImplementation('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { UNKNOWN_FUNCTION, createStackParser } from '@sentry/utils';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func === '<anonymous>' ? UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line) as null | [string, string, string, string];\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line) as null | [string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]) as null | [string, string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line) as null | [string, string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]) as null | [string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line) as null | [string, string, string, string, string];\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line) as null | [string, string, string, string];\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line) as null | [string, string, string, string, string, string];\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? (func.split('@')[0] as string) : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","import {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport { addBreadcrumb, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Breadcrumb,\n  Client,\n  Event as SentryEvent,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  IntegrationFn,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types';\nimport {\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import { defineIntegration } from '@sentry/core';\nimport type { IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface BrowserApiErrorsOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<BrowserApiErrorsOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","import { captureEvent, defineIntegration, getClient } from '@sentry/core';\nimport type { Client, Event, IntegrationFn, Primitive, StackParser } from '@sentry/types';\nimport {\n  UNKNOWN_FUNCTION,\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n    type ErrorWithReason = { reason: unknown };\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error as ErrorWithReason)) {\n      return (error as ErrorWithReason).reason;\n    }\n\n    type CustomEventWithDetail = { detail: { reason: unknown } };\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error as CustomEventWithDetail) && 'reason' in (error as CustomEventWithDetail).detail) {\n      return (error as CustomEventWithDetail).detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","import { defineIntegration } from '@sentry/core';\nimport { WINDOW } from '../helpers';\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nexport const httpContextIntegration = defineIntegration(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n});\n","import { defineIntegration } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Aggregrate linked errors in an event.\n */\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n","import { getCurrentScope } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  lastEventId,\n  startSession,\n} from '@sentry/core';\nimport type { Client, DsnLike, Integration, Options, UserFeedback } from '@sentry/types';\nimport { consoleSandbox, logger, stackParserFromStackParserOptions, supportsFetch } from '@sentry/utils';\n\nimport { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { dedupeIntegration } from '@sentry/core';\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport { WINDOW } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { browserApiErrorsIntegration } from './integrations/browserapierrors';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport } from './transports/fetch';\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  return [\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    browserApiErrorsIntegration(),\n    breadcrumbsIntegration(),\n    globalHandlersIntegration(),\n    linkedErrorsIntegration(),\n    dedupeIntegration(),\n    httpContextIntegration(),\n  ];\n}\n\nfunction applyDefaultOptions(optionsArg: BrowserOptions = {}): BrowserOptions {\n  const defaultOptions: BrowserOptions = {\n    defaultIntegrations: getDefaultIntegrations(optionsArg),\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id // This supports the variable that sentry-webpack-plugin injects\n          ? WINDOW.SENTRY_RELEASE.id\n          : undefined,\n    autoSessionTracking: true,\n    sendClientReports: true,\n  };\n\n  return { ...defaultOptions, ...optionsArg };\n}\n\ntype ExtensionProperties = {\n  chrome?: Runtime;\n  browser?: Runtime;\n  nw?: unknown;\n};\ntype Runtime = {\n  runtime?: {\n    id?: string;\n  };\n};\n\nfunction shouldShowBrowserExtensionError(): boolean {\n  const windowWithMaybeExtension = WINDOW as typeof WINDOW & ExtensionProperties;\n\n  const extensionKey = windowWithMaybeExtension.chrome ? 'chrome' : 'browser';\n  const extensionObject = windowWithMaybeExtension[extensionKey];\n\n  const runtimeId = extensionObject && extensionObject.runtime && extensionObject.runtime.id;\n  const href = (WINDOW.location && WINDOW.location.href) || '';\n\n  const extensionProtocols = ['chrome-extension:', 'moz-extension:', 'ms-browser-extension:'];\n\n  // Running the SDK in a dedicated extension page and calling Sentry.init is fine; no risk of data leakage\n  const isDedicatedExtensionPage =\n    !!runtimeId && WINDOW === WINDOW.top && extensionProtocols.some(protocol => href.startsWith(`${protocol}//`));\n\n  // Running the SDK in NW.js, which appears like a browser extension but isn't, is also fine\n  // see: https://github.com/getsentry/sentry-javascript/issues/12668\n  const isNWjs = typeof windowWithMaybeExtension.nw !== 'undefined';\n\n  return !!runtimeId && !isDedicatedExtensionPage && !isNWjs;\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(browserOptions: BrowserOptions = {}): Client | undefined {\n  const options = applyDefaultOptions(browserOptions);\n\n  if (shouldShowBrowserExtensionError()) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/',\n      );\n    });\n    return;\n  }\n\n  if (DEBUG_BUILD) {\n    if (!supportsFetch()) {\n      logger.warn(\n        'No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill.',\n      );\n    }\n  }\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeFetchTransport,\n  };\n\n  const client = initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n\n  return client;\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const scope = getCurrentScope();\n  const client = scope.getClient();\n  const dsn = client && client.getDsn();\n\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    const eventId = lastEventId();\n    if (eventId) {\n      options.eventId = eventId;\n    }\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n *\n * @deprecated Use `captureFeedback` instead.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.captureUserFeedback(feedback);\n  }\n}\n","import { SDK_VERSION, getClient } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\nimport type { BrowserClient } from '../client';\nimport { WINDOW } from '../helpers';\n\n// This is a map of integration function method to bundle file name.\nconst LazyLoadableIntegrations = {\n  replayIntegration: 'replay',\n  replayCanvasIntegration: 'replay-canvas',\n  feedbackIntegration: 'feedback',\n  feedbackModalIntegration: 'feedback-modal',\n  feedbackScreenshotIntegration: 'feedback-screenshot',\n  captureConsoleIntegration: 'captureconsole',\n  contextLinesIntegration: 'contextlines',\n  linkedErrorsIntegration: 'linkederrors',\n  debugIntegration: 'debug',\n  dedupeIntegration: 'dedupe',\n  extraErrorDataIntegration: 'extraerrordata',\n  httpClientIntegration: 'httpclient',\n  reportingObserverIntegration: 'reportingobserver',\n  rewriteFramesIntegration: 'rewriteframes',\n  sessionTimingIntegration: 'sessiontiming',\n  browserProfilingIntegration: 'browserprofiling',\n} as const;\n\nconst WindowWithMaybeIntegration = WINDOW as {\n  Sentry?: Partial<Record<keyof typeof LazyLoadableIntegrations, IntegrationFn>>;\n};\n\n/**\n * Lazy load an integration from the CDN.\n * Rejects if the integration cannot be loaded.\n */\nexport async function lazyLoadIntegration(name: keyof typeof LazyLoadableIntegrations): Promise<IntegrationFn> {\n  const bundle = LazyLoadableIntegrations[name];\n\n  // `window.Sentry` is only set when using a CDN bundle, but this method can also be used via the NPM package\n  const sentryOnWindow = (WindowWithMaybeIntegration.Sentry = WindowWithMaybeIntegration.Sentry || {});\n\n  if (!bundle) {\n    throw new Error(`Cannot lazy load integration: ${name}`);\n  }\n\n  // Bail if the integration already exists\n  const existing = sentryOnWindow[name];\n  if (typeof existing === 'function') {\n    return existing;\n  }\n\n  const url = getScriptURL(bundle);\n  const script = WINDOW.document.createElement('script');\n  script.src = url;\n  script.crossOrigin = 'anonymous';\n  script.referrerPolicy = 'origin';\n\n  const waitForLoad = new Promise<void>((resolve, reject) => {\n    script.addEventListener('load', () => resolve());\n    script.addEventListener('error', reject);\n  });\n\n  WINDOW.document.body.appendChild(script);\n\n  try {\n    await waitForLoad;\n  } catch {\n    throw new Error(`Error when loading integration: ${name}`);\n  }\n\n  const integrationFn = sentryOnWindow[name];\n\n  if (typeof integrationFn !== 'function') {\n    throw new Error(`Could not load integration: ${name}`);\n  }\n\n  return integrationFn;\n}\n\nfunction getScriptURL(bundle: string): string {\n  const client = getClient<BrowserClient>();\n  const options = client && client.getOptions();\n  const baseURL = (options && options.cdnBaseUrl) || 'https://browser.sentry-cdn.com';\n\n  return new URL(`/${SDK_VERSION}/${bundle}.min.js`, baseURL).toString();\n}\n","import { captureMessage, defineIntegration, getClient, withScope } from '@sentry/core';\nimport type { Client, IntegrationFn } from '@sentry/types';\nimport { GLOBAL_OBJ, supportsReportingObserver } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nconst INTEGRATION_NAME = 'ReportingObserver';\n\ninterface Report {\n  [key: string]: unknown;\n  type: ReportTypes;\n  url: string;\n  body?: ReportBody;\n}\n\ntype ReportTypes = 'crash' | 'deprecation' | 'intervention';\n\ntype ReportBody = CrashReportBody | DeprecationReportBody | InterventionReportBody;\n\ninterface CrashReportBody {\n  [key: string]: unknown;\n  crashId: string;\n  reason?: string;\n}\n\ninterface DeprecationReportBody {\n  [key: string]: unknown;\n  id: string;\n  anticipatedRemoval?: Date;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\ninterface InterventionReportBody {\n  [key: string]: unknown;\n  id: string;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\ninterface ReportingObserverOptions {\n  types?: ReportTypes[];\n}\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _reportingObserverIntegration = ((options: ReportingObserverOptions = {}) => {\n  const types = options.types || ['crash', 'deprecation', 'intervention'];\n\n  /** Handler for the reporting observer. */\n  function handler(reports: Report[]): void {\n    if (!SETUP_CLIENTS.has(getClient() as Client)) {\n      return;\n    }\n\n    for (const report of reports) {\n      withScope(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inheirted\n          const plainBody: {\n            [key: string]: unknown;\n          } = {};\n\n          // eslint-disable-next-line guard-for-in\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === 'crash') {\n            const body = report.body as CrashReportBody;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body as DeprecationReportBody | InterventionReportBody;\n            details = body.message || details;\n          }\n        }\n\n        captureMessage(`${label}: ${details}`);\n      });\n    }\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      if (!supportsReportingObserver()) {\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      const observer = new (WINDOW as any).ReportingObserver(handler, {\n        buffered: true,\n        types,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      observer.observe();\n    },\n\n    setup(client): void {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Reporting API integration - https://w3c.github.io/reporting/\n */\nexport const reportingObserverIntegration = defineIntegration(_reportingObserverIntegration);\n","import { SENTRY_XHR_DATA_KEY, addXhrInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { captureEvent, defineIntegration, getClient, isSentryRequestUrl } from '@sentry/core';\nimport type { Client, Event as SentryEvent, IntegrationFn, SentryWrappedXMLHttpRequest } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addFetchInstrumentationHandler,\n  logger,\n  supportsNativeFetch,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport type HttpStatusCodeRange = [number, number] | number;\nexport type HttpRequestTarget = string | RegExp;\n\nconst INTEGRATION_NAME = 'HttpClient';\n\ninterface HttpClientOptions {\n  /**\n   * HTTP status codes that should be considered failed.\n   * This array can contain tuples of `[begin, end]` (both inclusive),\n   * single status codes, or a combinations of both\n   *\n   * Example: [[500, 505], 507]\n   * Default: [[500, 599]]\n   */\n  failedRequestStatusCodes: HttpStatusCodeRange[];\n\n  /**\n   * Targets to track for failed requests.\n   * This array can contain strings or regular expressions.\n   *\n   * Example: ['http://localhost', /api\\/.*\\/]\n   * Default: [/.*\\/]\n   */\n  failedRequestTargets: HttpRequestTarget[];\n}\n\nconst _httpClientIntegration = ((options: Partial<HttpClientOptions> = {}) => {\n  const _options: HttpClientOptions = {\n    failedRequestStatusCodes: [[500, 599]],\n    failedRequestTargets: [/.*/],\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client): void {\n      _wrapFetch(client, _options);\n      _wrapXHR(client, _options);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Create events for failed client side HTTP requests.\n */\nexport const httpClientIntegration = defineIntegration(_httpClientIntegration);\n\n/**\n * Interceptor function for fetch requests\n *\n * @param requestInfo The Fetch API request info\n * @param response The Fetch API response\n * @param requestInit The request init object\n */\nfunction _fetchResponseHandler(\n  options: HttpClientOptions,\n  requestInfo: RequestInfo,\n  response: Response,\n  requestInit?: RequestInit,\n): void {\n  if (_shouldCaptureResponse(options, response.status, response.url)) {\n    const request = _getRequest(requestInfo, requestInit);\n\n    let requestHeaders, responseHeaders, requestCookies, responseCookies;\n\n    if (_shouldSendDefaultPii()) {\n      [requestHeaders, requestCookies] = _parseCookieHeaders('Cookie', request);\n      [responseHeaders, responseCookies] = _parseCookieHeaders('Set-Cookie', response);\n    }\n\n    const event = _createEvent({\n      url: request.url,\n      method: request.method,\n      status: response.status,\n      requestHeaders,\n      responseHeaders,\n      requestCookies,\n      responseCookies,\n    });\n\n    captureEvent(event);\n  }\n}\n\nfunction _parseCookieHeaders(\n  cookieHeader: string,\n  obj: Request | Response,\n): [Record<string, string>, Record<string, string> | undefined] {\n  const headers = _extractFetchHeaders(obj.headers);\n  let cookies;\n\n  try {\n    const cookieString = headers[cookieHeader] || headers[cookieHeader.toLowerCase()] || undefined;\n\n    if (cookieString) {\n      cookies = _parseCookieString(cookieString);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.log(`Could not extract cookies from header ${cookieHeader}`);\n  }\n\n  return [headers, cookies];\n}\n\n/**\n * Interceptor function for XHR requests\n *\n * @param xhr The XHR request\n * @param method The HTTP method\n * @param headers The HTTP headers\n */\nfunction _xhrResponseHandler(\n  options: HttpClientOptions,\n  xhr: XMLHttpRequest,\n  method: string,\n  headers: Record<string, string>,\n): void {\n  if (_shouldCaptureResponse(options, xhr.status, xhr.responseURL)) {\n    let requestHeaders, responseCookies, responseHeaders;\n\n    if (_shouldSendDefaultPii()) {\n      try {\n        const cookieString = xhr.getResponseHeader('Set-Cookie') || xhr.getResponseHeader('set-cookie') || undefined;\n\n        if (cookieString) {\n          responseCookies = _parseCookieString(cookieString);\n        }\n      } catch (e) {\n        DEBUG_BUILD && logger.log('Could not extract cookies from response headers');\n      }\n\n      try {\n        responseHeaders = _getXHRResponseHeaders(xhr);\n      } catch (e) {\n        DEBUG_BUILD && logger.log('Could not extract headers from response');\n      }\n\n      requestHeaders = headers;\n    }\n\n    const event = _createEvent({\n      url: xhr.responseURL,\n      method,\n      status: xhr.status,\n      requestHeaders,\n      // Can't access request cookies from XHR\n      responseHeaders,\n      responseCookies,\n    });\n\n    captureEvent(event);\n  }\n}\n\n/**\n * Extracts response size from `Content-Length` header when possible\n *\n * @param headers\n * @returns The response size in bytes or undefined\n */\nfunction _getResponseSizeFromHeaders(headers?: Record<string, string>): number | undefined {\n  if (headers) {\n    const contentLength = headers['Content-Length'] || headers['content-length'];\n\n    if (contentLength) {\n      return parseInt(contentLength, 10);\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Creates an object containing cookies from the given cookie string\n *\n * @param cookieString The cookie string to parse\n * @returns The parsed cookies\n */\nfunction _parseCookieString(cookieString: string): Record<string, string> {\n  return cookieString.split('; ').reduce((acc: Record<string, string>, cookie: string) => {\n    const [key, value] = cookie.split('=');\n    if (key && value) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Extracts the headers as an object from the given Fetch API request or response object\n *\n * @param headers The headers to extract\n * @returns The extracted headers as an object\n */\nfunction _extractFetchHeaders(headers: Headers): Record<string, string> {\n  const result: Record<string, string> = {};\n\n  headers.forEach((value, key) => {\n    result[key] = value;\n  });\n\n  return result;\n}\n\n/**\n * Extracts the response headers as an object from the given XHR object\n *\n * @param xhr The XHR object to extract the response headers from\n * @returns The response headers as an object\n */\nfunction _getXHRResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    if (key && value) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Checks if the given target url is in the given list of targets\n *\n * @param target The target url to check\n * @returns true if the target url is in the given list of targets, false otherwise\n */\nfunction _isInGivenRequestTargets(\n  failedRequestTargets: HttpClientOptions['failedRequestTargets'],\n  target: string,\n): boolean {\n  return failedRequestTargets.some((givenRequestTarget: HttpRequestTarget) => {\n    if (typeof givenRequestTarget === 'string') {\n      return target.includes(givenRequestTarget);\n    }\n\n    return givenRequestTarget.test(target);\n  });\n}\n\n/**\n * Checks if the given status code is in the given range\n *\n * @param status The status code to check\n * @returns true if the status code is in the given range, false otherwise\n */\nfunction _isInGivenStatusRanges(\n  failedRequestStatusCodes: HttpClientOptions['failedRequestStatusCodes'],\n  status: number,\n): boolean {\n  return failedRequestStatusCodes.some((range: HttpStatusCodeRange) => {\n    if (typeof range === 'number') {\n      return range === status;\n    }\n\n    return status >= range[0] && status <= range[1];\n  });\n}\n\n/**\n * Wraps `fetch` function to capture request and response data\n */\nfunction _wrapFetch(client: Client, options: HttpClientOptions): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  addFetchInstrumentationHandler(handlerData => {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { response, args } = handlerData;\n    const [requestInfo, requestInit] = args as [RequestInfo, RequestInit | undefined];\n\n    if (!response) {\n      return;\n    }\n\n    _fetchResponseHandler(options, requestInfo, response as Response, requestInit);\n  });\n}\n\n/**\n * Wraps XMLHttpRequest to capture request and response data\n */\nfunction _wrapXHR(client: Client, options: HttpClientOptions): void {\n  if (!('XMLHttpRequest' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  addXhrInstrumentationHandler(handlerData => {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const xhr = handlerData.xhr as SentryWrappedXMLHttpRequest & XMLHttpRequest;\n\n    const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n    if (!sentryXhrData) {\n      return;\n    }\n\n    const { method, request_headers: headers } = sentryXhrData;\n\n    try {\n      _xhrResponseHandler(options, xhr, method, headers);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Error while extracting response event form XHR response', e);\n    }\n  });\n}\n\n/**\n * Checks whether to capture given response as an event\n *\n * @param status response status code\n * @param url response url\n */\nfunction _shouldCaptureResponse(options: HttpClientOptions, status: number, url: string): boolean {\n  return (\n    _isInGivenStatusRanges(options.failedRequestStatusCodes, status) &&\n    _isInGivenRequestTargets(options.failedRequestTargets, url) &&\n    !isSentryRequestUrl(url, getClient())\n  );\n}\n\n/**\n * Creates a synthetic Sentry event from given response data\n *\n * @param data response data\n * @returns event\n */\nfunction _createEvent(data: {\n  url: string;\n  method: string;\n  status: number;\n  responseHeaders?: Record<string, string>;\n  responseCookies?: Record<string, string>;\n  requestHeaders?: Record<string, string>;\n  requestCookies?: Record<string, string>;\n}): SentryEvent {\n  const message = `HTTP Client Error with status code: ${data.status}`;\n\n  const event: SentryEvent = {\n    message,\n    exception: {\n      values: [\n        {\n          type: 'Error',\n          value: message,\n        },\n      ],\n    },\n    request: {\n      url: data.url,\n      method: data.method,\n      headers: data.requestHeaders,\n      cookies: data.requestCookies,\n    },\n    contexts: {\n      response: {\n        status_code: data.status,\n        headers: data.responseHeaders,\n        cookies: data.responseCookies,\n        body_size: _getResponseSizeFromHeaders(data.responseHeaders),\n      },\n    },\n  };\n\n  addExceptionMechanism(event, {\n    type: 'http.client',\n    handled: false,\n  });\n\n  return event;\n}\n\nfunction _getRequest(requestInfo: RequestInfo, requestInit?: RequestInit): Request {\n  if (!requestInit && requestInfo instanceof Request) {\n    return requestInfo;\n  }\n\n  // If both are set, we try to construct a new Request with the given arguments\n  // However, if e.g. the original request has a `body`, this will throw an error because it was already accessed\n  // In this case, as a fallback, we just use the original request - using both is rather an edge case\n  if (requestInfo instanceof Request && requestInfo.bodyUsed) {\n    return requestInfo;\n  }\n\n  return new Request(requestInfo, requestInit);\n}\n\nfunction _shouldSendDefaultPii(): boolean {\n  const client = getClient();\n  return client ? Boolean(client.getOptions().sendDefaultPii) : false;\n}\n","import { defineIntegration } from '@sentry/core';\nimport type { Event, IntegrationFn, StackFrame } from '@sentry/types';\nimport { GLOBAL_OBJ, addContextToFrame, stripUrlQueryAndFragment } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nconst DEFAULT_LINES_OF_CONTEXT = 7;\n\nconst INTEGRATION_NAME = 'ContextLines';\n\ninterface ContextLinesOptions {\n  /**\n   * Sets the number of context lines for each frame when loading a file.\n   * Defaults to 7.\n   *\n   * Set to 0 to disable loading and inclusion of source files.\n   **/\n  frameContextLines?: number;\n}\n\nconst _contextLinesIntegration = ((options: ContextLinesOptions = {}) => {\n  const contextLines = options.frameContextLines != null ? options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      return addSourceContext(event, contextLines);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Collects source context lines around the lines of stackframes pointing to JS embedded in\n * the current page's HTML.\n *\n * This integration DOES NOT work for stack frames pointing to JS files that are loaded by the browser.\n * For frames pointing to files, context lines are added during ingestion and symbolication\n * by attempting to download the JS files to the Sentry backend.\n *\n * Use this integration if you have inline JS code in HTML pages that can't be accessed\n * by our backend (e.g. due to a login-protected page).\n */\nexport const contextLinesIntegration = defineIntegration(_contextLinesIntegration);\n\n/**\n * Processes an event and adds context lines.\n */\nfunction addSourceContext(event: Event, contextLines: number): Event {\n  const doc = WINDOW.document;\n  const htmlFilename = WINDOW.location && stripUrlQueryAndFragment(WINDOW.location.href);\n  if (!doc || !htmlFilename) {\n    return event;\n  }\n\n  const exceptions = event.exception && event.exception.values;\n  if (!exceptions || !exceptions.length) {\n    return event;\n  }\n\n  const html = doc.documentElement.innerHTML;\n  if (!html) {\n    return event;\n  }\n\n  const htmlLines = ['<!DOCTYPE html>', '<html>', ...html.split('\\n'), '</html>'];\n\n  exceptions.forEach(exception => {\n    const stacktrace = exception.stacktrace;\n    if (stacktrace && stacktrace.frames) {\n      stacktrace.frames = stacktrace.frames.map(frame =>\n        applySourceContextToFrame(frame, htmlLines, htmlFilename, contextLines),\n      );\n    }\n  });\n\n  return event;\n}\n\n/**\n * Only exported for testing\n */\nexport function applySourceContextToFrame(\n  frame: StackFrame,\n  htmlLines: string[],\n  htmlFilename: string,\n  linesOfContext: number,\n): StackFrame {\n  if (frame.filename !== htmlFilename || !frame.lineno || !htmlLines.length) {\n    return frame;\n  }\n\n  addContextToFrame(htmlLines, frame, linesOfContext);\n\n  return frame;\n}\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\r\nfunction extractFileExtension(path, baseURL) {\r\n    let url;\r\n    try {\r\n        url = new URL(path, baseURL ?? window.location.href);\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n    const regex = /\\.([0-9a-z]+)(?:$)/i;\r\n    const match = url.pathname.match(regex);\r\n    return match?.[1] ?? null;\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!needBlock && !n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    extractFileExtension(sn.attributes.href) === 'js'))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        typeof serializedNode.attributes.rel === 'string' &&\r\n        (serializedNode.attributes.rel === 'stylesheet' ||\r\n            (serializedNode.attributes.rel === 'preload' &&\r\n                typeof serializedNode.attributes.href === 'string' &&\r\n                extractFileExtension(serializedNode.attributes.href) === 'css'))) {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        const m = match(/^([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const splitSelectors = trim(m[0])\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        })\r\n            .split(/\\s*(?![^(]*\\)),\\s*/);\r\n        if (splitSelectors.length <= 1) {\r\n            return splitSelectors.map((s) => {\r\n                return s.replace(/\\u200C/g, ',');\r\n            });\r\n        }\r\n        let i = 0;\r\n        let j = 0;\r\n        const len = splitSelectors.length;\r\n        const finalSelectors = [];\r\n        while (i < len) {\r\n            const openingParensCount = (splitSelectors[i].match(/\\(/g) || []).length;\r\n            const closingParensCount = (splitSelectors[i].match(/\\)/g) || []).length;\r\n            let unbalancedParens = openingParensCount - closingParensCount;\r\n            if (unbalancedParens >= 1) {\r\n                let foundClosingSelector = false;\r\n                j = i + 1;\r\n                while (j < len) {\r\n                    const nextOpeningParensCount = (splitSelectors[j].match(/\\(/g) || [])\r\n                        .length;\r\n                    const nextClosingParensCount = (splitSelectors[j].match(/\\)/g) || [])\r\n                        .length;\r\n                    const nextUnbalancedParens = nextClosingParensCount - nextOpeningParensCount;\r\n                    if (nextUnbalancedParens === unbalancedParens) {\r\n                        finalSelectors.push(splitSelectors.slice(i, j + 1).join(','));\r\n                        i = j + 1;\r\n                        foundClosingSelector = true;\r\n                        break;\r\n                    }\r\n                    j++;\r\n                    unbalancedParens -= nextUnbalancedParens;\r\n                }\r\n                if (foundClosingSelector) {\r\n                    continue;\r\n                }\r\n                splitSelectors\r\n                    .slice(i, len)\r\n                    .forEach((selector) => selector && finalSelectors.push(selector));\r\n                break;\r\n            }\r\n            splitSelectors[i] && finalSelectors.push(splitSelectors[i]);\r\n            i++;\r\n        }\r\n        return finalSelectors.map((s) => {\r\n            return s.replace(/\\u200C/g, ',');\r\n        });\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, clearTimeout, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, extractFileExtension, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, setTimeout, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction closestElementOfNode(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    return el;\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = closestElementOfNode(node);\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, clearTimeout, closestElementOfNode, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, setTimeout, shadowHostInDom, throttle, uniqueTextMutations };\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, closestElementOfNode, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.attributeMap = new WeakMap();\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        if (iframe.contentWindow) {\r\n                            this.canvasManager.addWindow(iframe.contentWindow);\r\n                        }\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.attributeMap = new WeakMap();\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributeMap.get(m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        if (!target.contentDocument) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                        this.attributeMap.set(m.target, item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            if (!this.unattachedDoc) {\r\n                                try {\r\n                                    this.unattachedDoc =\r\n                                        document.implementation.createHTMLDocument();\r\n                                }\r\n                                catch (e) {\r\n                                    this.unattachedDoc = this.doc;\r\n                                }\r\n                            }\r\n                            const old = this.unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    const parentId = mirror.getId(parentNode);\r\n    if (removes.some((r) => r.id === parentId)) {\r\n        return true;\r\n    }\r\n    return _isParentRemoved(removes, parentNode, mirror);\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, setTimeout, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    let mutationObserver;\r\n    if (o.recordDOM) {\r\n        mutationObserver = initMutationObserver(o, o.doc);\r\n    }\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    let styleSheetObserver = () => { };\r\n    let adoptedStyleSheetObserver = () => { };\r\n    let styleDeclarationObserver = () => { };\r\n    let fontObserver = () => { };\r\n    if (o.recordDOM) {\r\n        styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n        adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n        styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n            win: currentWindow,\r\n        });\r\n        if (o.collectFonts) {\r\n            fontObserver = initFontObserver(o);\r\n        }\r\n    }\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver?.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n","import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        if (iframeEl.contentDocument &&\r\n            iframeEl.contentDocument.adoptedStyleSheets &&\r\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n","import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { setTimeout, patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        this.bypassOptions.canvasManager.addShadowRoot(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\r\n            return;\r\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n        this.bypassOptions.canvasManager.resetShadowRoots();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n    addWindow() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    resetShadowRoots() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.windowsSet = new WeakSet();\r\n        this.windows = [];\r\n        this.shadowDoms = new Set();\r\n        this.worker?.terminate();\r\n        this.worker = null;\r\n        this.snapshotInProgressMap = new Map();\r\n        if ((this.options.recordCanvas &&\r\n            typeof this.options.sampling === 'number') ||\r\n            this.options.enableManualSnapshot) {\r\n            this.worker = this.initFPSWorker();\r\n        }\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.shadowDoms = new Set();\r\n        this.windowsSet = new WeakSet();\r\n        this.windows = [];\r\n        this.restoreHandlers = [];\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.snapshotInProgressMap = new Map();\r\n        this.worker = null;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if ((recordCanvas && typeof sampling === 'number') ||\r\n            options.enableManualSnapshot) {\r\n            this.worker = this.initFPSWorker();\r\n        }\r\n        this.addWindow(win);\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all') {\r\n                this.startRAFTimestamping();\r\n                this.startPendingCanvasMutationFlusher();\r\n            }\r\n            if (recordCanvas && typeof sampling === 'number') {\r\n                this.initCanvasFPSObserver(sampling, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n            }\r\n        })();\r\n    }\r\n    addWindow(win) {\r\n        const { sampling = 'all', blockClass, blockSelector, unblockSelector, recordCanvas, enableManualSnapshot, } = this.options;\r\n        if (this.windowsSet.has(win))\r\n            return;\r\n        if (enableManualSnapshot) {\r\n            this.windowsSet.add(win);\r\n            this.windows.push(new WeakRef(win));\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all') {\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            }\r\n            if (recordCanvas && typeof sampling === 'number') {\r\n                const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n                this.restoreHandlers.push(() => {\r\n                    canvasContextReset();\r\n                });\r\n            }\r\n        })();\r\n        this.windowsSet.add(win);\r\n        this.windows.push(new WeakRef(win));\r\n    }\r\n    addShadowRoot(shadowRoot) {\r\n        this.shadowDoms.add(new WeakRef(shadowRoot));\r\n    }\r\n    resetShadowRoots() {\r\n        this.shadowDoms = new Set();\r\n    }\r\n    initFPSWorker() {\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            this.snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        return worker;\r\n    }\r\n    initCanvasFPSObserver(fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const rafId = this.takeSnapshot(false, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.restoreHandlers.push(() => {\r\n            cancelAnimationFrame(rafId);\r\n        });\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.restoreHandlers.push(() => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        });\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.restoreHandlers.push(() => {\r\n            cancelAnimationFrame(rafId);\r\n        });\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            const searchCanvas = (root) => {\r\n                root.querySelectorAll('canvas').forEach((canvas) => {\r\n                    if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                        matchedCanvas.push(canvas);\r\n                    }\r\n                });\r\n            };\r\n            for (const item of this.windows) {\r\n                const window = item.deref();\r\n                if (window) {\r\n                    searchCanvas(window.document);\r\n                }\r\n            }\r\n            for (const item of this.shadowDoms) {\r\n                const shadowRoot = item.deref();\r\n                if (shadowRoot) {\r\n                    searchCanvas(shadowRoot);\r\n                }\r\n            }\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (!this.windows.length) {\r\n                return;\r\n            }\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                if (!this.mirror.hasNode(canvas)) {\r\n                    return;\r\n                }\r\n                const id = this.mirror.getId(canvas);\r\n                if (this.snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                this.snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    this.worker?.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n","import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.loop = true;\r\n        this.periodicallyClear();\r\n    }\r\n    periodicallyClear() {\r\n        onRequestAnimationFrame(() => {\r\n            this.clear();\r\n            if (this.loop)\r\n                this.periodicallyClear();\r\n        });\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    clear() {\r\n        this.nodeMap = new WeakMap();\r\n    }\r\n    destroy() {\r\n        this.loop = false;\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n","import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nlet wrappedEmit;\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\ntry {\r\n    if (Array.from([1], (x) => x * 2)[0] !== 2) {\r\n        const cleanFrame = document.createElement('iframe');\r\n        document.body.appendChild(cleanFrame);\r\n        Array.from = cleanFrame.contentWindow?.Array.from || Array.from;\r\n        document.body.removeChild(cleanFrame);\r\n    }\r\n}\r\ncatch (err) {\r\n    console.debug('Unable to override Array.from', err);\r\n}\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordDOM = true, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    wrappedEmit = (r, isCheckout) => {\r\n        const e = r;\r\n        e.timestamp = nowTimestamp();\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                lastFullSnapshotEvent &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        });\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    });\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        }),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maxCanvasSize,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        if (!recordDOM) {\r\n            return;\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }, isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                if (iframe.contentWindow) {\r\n                    canvasManager.addWindow(iframe.contentWindow);\r\n                }\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        });\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                }),\r\n                mouseInteractionCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                inputCb: (v) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                }),\r\n                mediaInteractionCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                styleSheetRuleCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                styleDeclarationCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    });\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    });\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordDOM,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    }),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    wrappedEmit({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    });\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, mirror, takeFullSnapshot };\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifcally need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically use in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n  addWindow(win: typeof globalThis & Window): void;\n  addShadowRoot(shadowRoot: ShadowRoot): void;\n  resetShadowRoots(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { fill } from '@sentry/utils';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import { setTimeout } from '@sentry-internal/browser-utils';\nimport { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\r\nfunction extractFileExtension(path, baseURL) {\r\n    let url;\r\n    try {\r\n        url = new URL(path, baseURL ?? window.location.href);\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n    const regex = /\\.([0-9a-z]+)(?:$)/i;\r\n    const match = url.pathname.match(regex);\r\n    return match?.[1] ?? null;\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!needBlock && !n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    extractFileExtension(sn.attributes.href) === 'js'))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        typeof serializedNode.attributes.rel === 'string' &&\r\n        (serializedNode.attributes.rel === 'stylesheet' ||\r\n            (serializedNode.attributes.rel === 'preload' &&\r\n                typeof serializedNode.attributes.href === 'string' &&\r\n                extractFileExtension(serializedNode.attributes.href) === 'css'))) {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        const m = match(/^([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const splitSelectors = trim(m[0])\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        })\r\n            .split(/\\s*(?![^(]*\\)),\\s*/);\r\n        if (splitSelectors.length <= 1) {\r\n            return splitSelectors.map((s) => {\r\n                return s.replace(/\\u200C/g, ',');\r\n            });\r\n        }\r\n        let i = 0;\r\n        let j = 0;\r\n        const len = splitSelectors.length;\r\n        const finalSelectors = [];\r\n        while (i < len) {\r\n            const openingParensCount = (splitSelectors[i].match(/\\(/g) || []).length;\r\n            const closingParensCount = (splitSelectors[i].match(/\\)/g) || []).length;\r\n            let unbalancedParens = openingParensCount - closingParensCount;\r\n            if (unbalancedParens >= 1) {\r\n                let foundClosingSelector = false;\r\n                j = i + 1;\r\n                while (j < len) {\r\n                    const nextOpeningParensCount = (splitSelectors[j].match(/\\(/g) || [])\r\n                        .length;\r\n                    const nextClosingParensCount = (splitSelectors[j].match(/\\)/g) || [])\r\n                        .length;\r\n                    const nextUnbalancedParens = nextClosingParensCount - nextOpeningParensCount;\r\n                    if (nextUnbalancedParens === unbalancedParens) {\r\n                        finalSelectors.push(splitSelectors.slice(i, j + 1).join(','));\r\n                        i = j + 1;\r\n                        foundClosingSelector = true;\r\n                        break;\r\n                    }\r\n                    j++;\r\n                    unbalancedParens -= nextUnbalancedParens;\r\n                }\r\n                if (foundClosingSelector) {\r\n                    continue;\r\n                }\r\n                splitSelectors\r\n                    .slice(i, len)\r\n                    .forEach((selector) => selector && finalSelectors.push(selector));\r\n                break;\r\n            }\r\n            splitSelectors[i] && finalSelectors.push(splitSelectors[i]);\r\n            i++;\r\n        }\r\n        return finalSelectors.map((s) => {\r\n            return s.replace(/\\u200C/g, ',');\r\n        });\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, clearTimeout, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, extractFileExtension, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, onRequestAnimationFrame, rebuild, serializeNodeWithId, setTimeout, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (!attributes['data-sentry-component'] && attributes['data-sentry-element']) {\n    attributes['data-sentry-component'] = attributes['data-sentry-element'];\n  }\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  NavigationData,\n  PaintData,\n  ReplayContainer,\n  ReplayPerformanceEntry,\n  ResourceData,\n  WebVitalData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\nexport interface Metric {\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[] | PerformanceEventTiming[];\n}\n\ninterface LayoutShiftAttribution {\n  node?: Node;\n  previousRect: DOMRectReadOnly;\n  currentRect: DOMRectReadOnly;\n}\n\n/**\n * Handler creater for web vitals\n */\nexport function webVitalHandler(\n  getter: (metric: Metric) => ReplayPerformanceEntry<AllPerformanceEntryData>,\n  replay: ReplayContainer,\n): (data: { metric: Metric }) => void {\n  return ({ metric }) => void replay.replayPerformanceEntries.push(getter(metric));\n}\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  const entryType = ENTRY_TYPES[entry.entryType];\n  if (!entryType) {\n    return null;\n  }\n\n  return entryType(entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on a LCP metric.\n */\nexport function getLargestContentfulPaint(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const lastEntry = metric.entries[metric.entries.length - 1] as (PerformanceEntry & { element?: Node }) | undefined;\n  const node = lastEntry ? lastEntry.element : undefined;\n  return getWebVital(metric, 'largest-contentful-paint', node);\n}\n\n/**\n * Add a CLS event to the replay based on a CLS metric.\n */\nexport function getCumulativeLayoutShift(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  // get first node that shifts\n  const firstEntry = metric.entries[0] as (PerformanceEntry & { sources?: LayoutShiftAttribution[] }) | undefined;\n  const node = firstEntry\n    ? firstEntry.sources && firstEntry.sources[0]\n      ? firstEntry.sources[0].node\n      : undefined\n    : undefined;\n  return getWebVital(metric, 'cumulative-layout-shift', node);\n}\n\n/**\n * Add a FID event to the replay based on a FID metric.\n */\nexport function getFirstInputDelay(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const lastEntry = metric.entries[metric.entries.length - 1] as (PerformanceEntry & { target?: Node }) | undefined;\n  const node = lastEntry ? lastEntry.target : undefined;\n  return getWebVital(metric, 'first-input-delay', node);\n}\n\n/**\n * Add an INP event to the replay based on an INP metric.\n */\nexport function getInteractionToNextPaint(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const lastEntry = metric.entries[metric.entries.length - 1] as (PerformanceEntry & { target?: Node }) | undefined;\n  const node = lastEntry ? lastEntry.target : undefined;\n  return getWebVital(metric, 'interaction-to-next-paint', node);\n}\n\n/**\n * Add an web vital event to the replay based on the web vital metric.\n */\nexport function getWebVital(\n  metric: Metric,\n  name: string,\n  node: Node | undefined,\n): ReplayPerformanceEntry<WebVitalData> {\n  const value = metric.value;\n  const rating = metric.rating;\n\n  const end = getAbsoluteTime(value);\n\n  const data: ReplayPerformanceEntry<WebVitalData> = {\n    type: 'web-vital',\n    name,\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      rating,\n      nodeId: node ? record.mirror.getId(node) : undefined,\n    },\n  };\n\n  return data;\n}\n","import {\n  addClsInstrumentationHandler,\n  addFidInstrumentationHandler,\n  addInpInstrumentationHandler,\n  addLcpInstrumentationHandler,\n  addPerformanceInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport type { ReplayContainer } from '../types';\nimport {\n  getCumulativeLayoutShift,\n  getFirstInputDelay,\n  getInteractionToNextPaint,\n  getLargestContentfulPaint,\n  webVitalHandler,\n} from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(webVitalHandler(getLargestContentfulPaint, replay)),\n    addClsInstrumentationHandler(webVitalHandler(getCumulativeLayoutShift, replay)),\n    addFidInstrumentationHandler(webVitalHandler(getFirstInputDelay, replay)),\n    addInpInstrumentationHandler(webVitalHandler(getInteractionToNextPaint, replay)),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),J=\"undefined\"!=typeof TextEncoder&&new TextEncoder,K=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(J)return J.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),a=i.length;return q(i,n),j(i,a-8,r.d()),j(i,a-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(const r of t)n+=r.length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&\"function\"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","import { setTimeout } from '@sentry-internal/browser-utils';\nimport { addBreadcrumb } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nexport function logInfo(message: string, shouldAddBreadcrumb?: boolean): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nexport function logInfoNextTick(message: string, shouldAddBreadcrumb?: boolean): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message: string): void {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logInfo } from '../util/log';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport type { EventBuffer } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logInfoNextTick } from '../util/log';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(traceInternals?: boolean): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import type { Session, SessionOptions } from '../types';\nimport { logInfoNextTick } from '../util/log';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    traceInternals?: boolean;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logInfoNextTick } from './log';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfoNextTick(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/types';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import { setTimeout } from '@sentry-internal/browser-utils';\nimport type { ErrorEvent, Event, TransactionEvent, TransportMakeRequestResponse } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  return (event: Event, sendResponse: TransportMakeRequestResponse) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (!statusCode || statusCode < 200 || statusCode >= 300) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id as string);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n","import type { ErrorEvent, Event } from '@sentry/types';\nimport { getLocationHref } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue =\n    event.exception && event.exception.values && event.exception.values[0] && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    // With newer React versions, the messages changed to a different website https://react.dev/errors/418\n    exceptionValue.match(\n      /(reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=|react\\.dev\\/errors\\/)(418|419|422|423|425)/,\n    ) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n      data: {\n        url: getLocationHref(),\n      },\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import { getClient } from '@sentry/core';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\n/**\n * Handle breadcrumbs that Sentry captures, and make sure to capture relevant breadcrumbs to Replay as well.\n */\nexport function handleBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  if (!client) {\n    return;\n  }\n\n  client.on('beforeAddBreadcrumb', breadcrumb => beforeAddBreadcrumb(replay, breadcrumb));\n}\n\nfunction beforeAddBreadcrumb(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (!replay.isEnabled() || !isBreadcrumbWithCategory(breadcrumb)) {\n    return;\n  }\n\n  const result = normalizeBreadcrumb(breadcrumb);\n  if (result) {\n    addBreadcrumbEvent(replay, result);\n  }\n}\n\n/** Exported only for tests. */\nexport function normalizeBreadcrumb(breadcrumb: Breadcrumb): Breadcrumb | null {\n  if (\n    !isBreadcrumbWithCategory(breadcrumb) ||\n    [\n      // fetch & xhr are handled separately,in handleNetworkBreadcrumbs\n      'fetch',\n      'xhr',\n      // These two are breadcrumbs for emitted sentry events, we don't care about them\n      'sentry.event',\n      'sentry.transaction',\n    ].includes(breadcrumb.category) ||\n    // We capture UI breadcrumbs separately\n    breadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (breadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(breadcrumb);\n  }\n\n  return createBreadcrumb(breadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n","import type { Event, EventHint } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/types';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event } from '@sentry/types';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","import type { Event, EventHint } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(replay: ReplayContainer): (event: Event, hint: EventHint) => Event | null {\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { HandlerDataHistory } from '@sentry/types';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { dropUndefinedKeys, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkBody,\n  NetworkMetaWarning,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(body: RequestInit['body']): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  const textEncoder = new TextEncoder();\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nexport function getBodyString(body: unknown): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.entries(headers).reduce((filteredHeaders: Record<string, string>, [key, value]) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = value;\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData: FormData): string {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import { setTimeout } from '@sentry-internal/browser-utils';\nimport type { Breadcrumb, FetchBreadcrumbData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  FetchHint,\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n): void {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions,\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'>,\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined ? getBodySize(bodyText) : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs: unknown[] = []): RequestInit['body'] | undefined {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] as RequestInit).body;\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n\n  return _getResponseText(response);\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import { SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport type { Breadcrumb, XhrBreadcrumbData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  XhrHint,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ') as [string, string | undefined];\n    if (value) {\n      acc[key.toLowerCase()] = value;\n    }\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr);\n  } catch {\n    return undefined;\n  }\n}\n","import { getClient } from '@sentry/core';\nimport type { Breadcrumb, BreadcrumbHint, FetchBreadcrumbData, XhrBreadcrumbData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { FetchHint, ReplayContainer, ReplayNetworkOptions, XhrHint } from '../types';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint && hint.response;\n}\n","import {\n  addClickKeypressInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { DynamicSamplingContext } from '@sentry/types';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleBreadcrumbs } from '../coreHandlers/handleBreadcrumbs';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const client = getClient();\n\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleBreadcrumbs(replay);\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay);\n  addEventProcessor(eventProcessor);\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (client) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('spanStart', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We may be missing the initial spanStart due to timing issues,\n    // so we capture it on finish again.\n    client.on('spanEnd', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { setTimeout } from '@sentry-internal/browser-utils';\n\ntype DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { logger } from '@sentry/utils';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logInfo } from './log';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { IntegrationIndex } from '@sentry/core';\nimport { getIsolationScope, prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent, Scope } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  client.emit('preprocessEvent', event, eventHint);\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import { getClient, getCurrentScope } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport type { RateLimits } from '@sentry/utils';\nimport { resolvedSyncPromise } from '@sentry/utils';\nimport { isRateLimited, updateRateLimits } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logInfo } from './log';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return resolvedSyncPromise({});\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return resolvedSyncPromise({});\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import { setTimeout } from '@sentry-internal/browser-utils';\nimport { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  getActiveSpan,\n  getClient,\n  getRootSpan,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReplayRecordingMode, Span } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\n\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logInfo, logInfoNextTick } from './util/log';\nimport { sendReplay } from './util/sendReplay';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active span.\n   * This is only available when performance is enabled.\n   */\n  public lastActiveSpan?: Span;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  /** The replay has to be manually started, because no sample rate (neither session or error) was provided. */\n  private _requiresManualStart: boolean;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._requiresManualStart = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    const requiresManualStart = errorSampleRate <= 0 && sessionSampleRate <= 0;\n\n    this._requiresManualStart = requiresManualStart;\n\n    if (requiresManualStart) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will log a message if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      DEBUG_BUILD && logger.info('[Replay] Recording is already in progress');\n      return;\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      DEBUG_BUILD && logger.info('[Replay] Buffering is in progress, call `flush()` to save the replay');\n      return;\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      DEBUG_BUILD && logger.info('[Replay] Buffering is in progress, call `flush()` to save the replay');\n      return;\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    const lastActiveSpan = this.lastActiveSpan || getActiveSpan();\n    const lastRootSpan = lastActiveSpan && getRootSpan(lastActiveSpan);\n\n    const attributes = (lastRootSpan && spanToJSON(lastRootSpan).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastRootSpan || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastRootSpan).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void = (event: KeyboardEvent) => {\n    handleKeyboardEvent(this, event);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    // If replay was started manually (=no sample rate was given),\n    // We do not want to back-port the initial timestamp\n    if (!session || !eventBuffer || this._requiresManualStart) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush = async ({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler = (mutations: unknown[]): boolean => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };\n}\n","import type { ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>>;\n\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(selectors: string[], defaultSelectors: string[]): string {\n  return [\n    ...selectors,\n    // sentry defaults\n    ...defaultSelectors,\n  ].join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({ mask, unmask, block, unblock, ignore }: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]']);\n  const unmaskSelector = getOption(unmask, []);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(block, ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements]),\n    unblockSelector: getOption(unblock, []),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]']),\n  };\n\n  return options;\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import { parseSampleRate } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Client, Integration, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser } from '@sentry/utils';\n\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  InitialReplayPluginOptions,\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\n/**\n * Sentry integration for [Session Replay](https://sentry.io/for/session-replay/).\n *\n * See the [Replay documentation](https://docs.sentry.io/platforms/javascript/guides/session-replay/) for more information.\n *\n * @example\n *\n * ```\n * Sentry.init({\n *   dsn: '__DSN__',\n *   integrations: [Sentry.replayIntegration()],\n * });\n * ```\n */\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * Replay integration\n *\n * TODO: Rewrite this to be functional integration\n * Exported for tests.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n  }: ReplayConfiguration = {}) {\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public afterAllSetup(client: Client): void {\n    if (!isBrowser() || this._replay) {\n      return;\n    }\n\n    this._setup(client);\n    this._initialize(client);\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will log a message if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * If replay is not enabled, a new session replay is started.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    // assuming a session should be recorded in this case\n    if (!this._replay.isEnabled()) {\n      this._replay.start();\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(client: Client): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._maybeLoadFromReplayCanvasIntegration(client);\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(client: Client): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions, client);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(client: Client): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const canvasIntegration = client.getIntegrationByName('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions, client: Client): ReplayPluginOptions {\n  const opt = client.getOptions() as BrowserClientReplayOptions;\n\n  const finalOptions: ReplayPluginOptions = {\n    sessionSampleRate: 0,\n    errorSampleRate: 0,\n    ...dropUndefinedKeys(initialOptions),\n  };\n\n  const replaysSessionSampleRate = parseSampleRate(opt.replaysSessionSampleRate);\n  const replaysOnErrorSampleRate = parseSampleRate(opt.replaysOnErrorSampleRate);\n\n  if (replaysSessionSampleRate == null && replaysOnErrorSampleRate == null) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (replaysSessionSampleRate != null) {\n    finalOptions.sessionSampleRate = replaysSessionSampleRate;\n  }\n\n  if (replaysOnErrorSampleRate != null) {\n    finalOptions.errorSampleRate = replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import { getClient } from '@sentry/core';\nimport type { replayIntegration } from '../integration';\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\nexport function getReplay(): ReturnType<typeof replayIntegration> | undefined {\n  const client = getClient();\n  return client && client.getIntegrationByName<ReturnType<typeof replayIntegration>>('Replay');\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\r\nfunction extractFileExtension(path, baseURL) {\r\n    let url;\r\n    try {\r\n        url = new URL(path, baseURL ?? window.location.href);\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n    const regex = /\\.([0-9a-z]+)(?:$)/i;\r\n    const match = url.pathname.match(regex);\r\n    return match?.[1] ?? null;\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!needBlock && !n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    extractFileExtension(sn.attributes.href) === 'js'))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        typeof serializedNode.attributes.rel === 'string' &&\r\n        (serializedNode.attributes.rel === 'stylesheet' ||\r\n            (serializedNode.attributes.rel === 'preload' &&\r\n                typeof serializedNode.attributes.href === 'string' &&\r\n                extractFileExtension(serializedNode.attributes.href) === 'css'))) {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        const m = match(/^([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const splitSelectors = trim(m[0])\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        })\r\n            .split(/\\s*(?![^(]*\\)),\\s*/);\r\n        if (splitSelectors.length <= 1) {\r\n            return splitSelectors.map((s) => {\r\n                return s.replace(/\\u200C/g, ',');\r\n            });\r\n        }\r\n        let i = 0;\r\n        let j = 0;\r\n        const len = splitSelectors.length;\r\n        const finalSelectors = [];\r\n        while (i < len) {\r\n            const openingParensCount = (splitSelectors[i].match(/\\(/g) || []).length;\r\n            const closingParensCount = (splitSelectors[i].match(/\\)/g) || []).length;\r\n            let unbalancedParens = openingParensCount - closingParensCount;\r\n            if (unbalancedParens >= 1) {\r\n                let foundClosingSelector = false;\r\n                j = i + 1;\r\n                while (j < len) {\r\n                    const nextOpeningParensCount = (splitSelectors[j].match(/\\(/g) || [])\r\n                        .length;\r\n                    const nextClosingParensCount = (splitSelectors[j].match(/\\)/g) || [])\r\n                        .length;\r\n                    const nextUnbalancedParens = nextClosingParensCount - nextOpeningParensCount;\r\n                    if (nextUnbalancedParens === unbalancedParens) {\r\n                        finalSelectors.push(splitSelectors.slice(i, j + 1).join(','));\r\n                        i = j + 1;\r\n                        foundClosingSelector = true;\r\n                        break;\r\n                    }\r\n                    j++;\r\n                    unbalancedParens -= nextUnbalancedParens;\r\n                }\r\n                if (foundClosingSelector) {\r\n                    continue;\r\n                }\r\n                splitSelectors\r\n                    .slice(i, len)\r\n                    .forEach((selector) => selector && finalSelectors.push(selector));\r\n                break;\r\n            }\r\n            splitSelectors[i] && finalSelectors.push(splitSelectors[i]);\r\n            i++;\r\n        }\r\n        return finalSelectors.map((s) => {\r\n            return s.replace(/\\u200C/g, ',');\r\n        });\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, clearTimeout, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, extractFileExtension, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, setTimeout, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction closestElementOfNode(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    return el;\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = closestElementOfNode(node);\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, clearTimeout, closestElementOfNode, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, setTimeout, shadowHostInDom, throttle, uniqueTextMutations };\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n","import { encode } from './../../../../../../ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js';\n\nconst canvasVarMap = new Map();\r\nfunction variableListFor(ctx, ctor) {\r\n    let contextMap = canvasVarMap.get(ctx);\r\n    if (!contextMap) {\r\n        contextMap = new Map();\r\n        canvasVarMap.set(ctx, contextMap);\r\n    }\r\n    if (!contextMap.has(ctor)) {\r\n        contextMap.set(ctor, []);\r\n    }\r\n    return contextMap.get(ctor);\r\n}\r\nconst saveWebGLVar = (value, win, ctx) => {\r\n    if (!value ||\r\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\r\n        return;\r\n    const name = value.constructor.name;\r\n    const list = variableListFor(ctx, name);\r\n    let index = list.indexOf(value);\r\n    if (index === -1) {\r\n        index = list.length;\r\n        list.push(value);\r\n    }\r\n    return index;\r\n};\r\nfunction serializeArg(value, win, ctx) {\r\n    if (value instanceof Array) {\r\n        return value.map((arg) => serializeArg(arg, win, ctx));\r\n    }\r\n    else if (value === null) {\r\n        return value;\r\n    }\r\n    else if (value instanceof Float32Array ||\r\n        value instanceof Float64Array ||\r\n        value instanceof Int32Array ||\r\n        value instanceof Uint32Array ||\r\n        value instanceof Uint8Array ||\r\n        value instanceof Uint16Array ||\r\n        value instanceof Int16Array ||\r\n        value instanceof Int8Array ||\r\n        value instanceof Uint8ClampedArray) {\r\n        const name = value.constructor.name;\r\n        return {\r\n            rr_type: name,\r\n            args: [Object.values(value)],\r\n        };\r\n    }\r\n    else if (value instanceof ArrayBuffer) {\r\n        const name = value.constructor.name;\r\n        const base64 = encode(value);\r\n        return {\r\n            rr_type: name,\r\n            base64,\r\n        };\r\n    }\r\n    else if (value instanceof DataView) {\r\n        const name = value.constructor.name;\r\n        return {\r\n            rr_type: name,\r\n            args: [\r\n                serializeArg(value.buffer, win, ctx),\r\n                value.byteOffset,\r\n                value.byteLength,\r\n            ],\r\n        };\r\n    }\r\n    else if (value instanceof HTMLImageElement) {\r\n        const name = value.constructor.name;\r\n        const { src } = value;\r\n        return {\r\n            rr_type: name,\r\n            src,\r\n        };\r\n    }\r\n    else if (value instanceof HTMLCanvasElement) {\r\n        const name = 'HTMLImageElement';\r\n        const src = value.toDataURL();\r\n        return {\r\n            rr_type: name,\r\n            src,\r\n        };\r\n    }\r\n    else if (value instanceof ImageData) {\r\n        const name = value.constructor.name;\r\n        return {\r\n            rr_type: name,\r\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\r\n        };\r\n    }\r\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\r\n        const name = value.constructor.name;\r\n        const index = saveWebGLVar(value, win, ctx);\r\n        return {\r\n            rr_type: name,\r\n            index: index,\r\n        };\r\n    }\r\n    return value;\r\n}\r\nconst serializeArgs = (args, win, ctx) => {\r\n    return args.map((arg) => serializeArg(arg, win, ctx));\r\n};\r\nconst isInstanceOfWebGLObject = (value, win) => {\r\n    const webGLConstructorNames = [\r\n        'WebGLActiveInfo',\r\n        'WebGLBuffer',\r\n        'WebGLFramebuffer',\r\n        'WebGLProgram',\r\n        'WebGLRenderbuffer',\r\n        'WebGLShader',\r\n        'WebGLShaderPrecisionFormat',\r\n        'WebGLTexture',\r\n        'WebGLUniformLocation',\r\n        'WebGLVertexArrayObject',\r\n        'WebGLVertexArrayObjectOES',\r\n    ];\r\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter((name) => typeof win[name] === 'function');\r\n    return Boolean(supportedWebGLConstructorNames.find((name) => value instanceof win[name]));\r\n};\n\nexport { isInstanceOfWebGLObject, saveWebGLVar, serializeArg, serializeArgs, variableListFor };\n","import { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport { patch, isBlocked, setTimeout, hookSetter } from '../../../utils.js';\nimport { serializeArgs } from './serialize-args.js';\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, blockSelector, unblockSelector) {\r\n    const handlers = [];\r\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\r\n    for (const prop of props2D) {\r\n        try {\r\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\r\n                continue;\r\n            }\r\n            const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\r\n                return function (...args) {\r\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                        setTimeout(() => {\r\n                            const recordArgs = serializeArgs(args, win, this);\r\n                            cb(this.canvas, {\r\n                                type: CanvasContext['2D'],\r\n                                property: prop,\r\n                                args: recordArgs,\r\n                            });\r\n                        }, 0);\r\n                    }\r\n                    return original.apply(this, args);\r\n                };\r\n            });\r\n            handlers.push(restoreHandler);\r\n        }\r\n        catch {\r\n            const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\r\n                set(v) {\r\n                    cb(this.canvas, {\r\n                        type: CanvasContext['2D'],\r\n                        property: prop,\r\n                        args: [v],\r\n                        setter: true,\r\n                    });\r\n                },\r\n            });\r\n            handlers.push(hookHandler);\r\n        }\r\n    }\r\n    return () => {\r\n        handlers.forEach((h) => h());\r\n    };\r\n}\n\nexport { initCanvas2DMutationObserver as default };\n","import { patch, isBlocked } from '../../../utils.js';\n\nfunction getNormalizedContextName(contextType) {\r\n    return contextType === 'experimental-webgl' ? 'webgl' : contextType;\r\n}\r\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, setPreserveDrawingBufferToTrue) {\r\n    const handlers = [];\r\n    try {\r\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\r\n            return function (contextType, ...args) {\r\n                if (!isBlocked(this, blockClass, blockSelector, unblockSelector, true)) {\r\n                    const ctxName = getNormalizedContextName(contextType);\r\n                    if (!('__context' in this))\r\n                        this.__context = ctxName;\r\n                    if (setPreserveDrawingBufferToTrue &&\r\n                        ['webgl', 'webgl2'].includes(ctxName)) {\r\n                        if (args[0] && typeof args[0] === 'object') {\r\n                            const contextAttributes = args[0];\r\n                            if (!contextAttributes.preserveDrawingBuffer) {\r\n                                contextAttributes.preserveDrawingBuffer = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            args.splice(0, 1, {\r\n                                preserveDrawingBuffer: true,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                return original.apply(this, [contextType, ...args]);\r\n            };\r\n        });\r\n        handlers.push(restoreHandler);\r\n    }\r\n    catch {\r\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\r\n    }\r\n    return () => {\r\n        handlers.forEach((h) => h());\r\n    };\r\n}\n\nexport { initCanvasContextObserver as default };\n","import { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport { patch, isBlocked, hookSetter } from '../../../utils.js';\nimport { saveWebGLVar, serializeArgs } from './serialize-args.js';\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, blockSelector, unblockSelector, mirror, win) {\r\n    const handlers = [];\r\n    const props = Object.getOwnPropertyNames(prototype);\r\n    for (const prop of props) {\r\n        if ([\r\n            'isContextLost',\r\n            'canvas',\r\n            'drawingBufferWidth',\r\n            'drawingBufferHeight',\r\n        ].includes(prop)) {\r\n            continue;\r\n        }\r\n        try {\r\n            if (typeof prototype[prop] !== 'function') {\r\n                continue;\r\n            }\r\n            const restoreHandler = patch(prototype, prop, function (original) {\r\n                return function (...args) {\r\n                    const result = original.apply(this, args);\r\n                    saveWebGLVar(result, win, this);\r\n                    if ('tagName' in this.canvas &&\r\n                        !isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                        const recordArgs = serializeArgs(args, win, this);\r\n                        const mutation = {\r\n                            type,\r\n                            property: prop,\r\n                            args: recordArgs,\r\n                        };\r\n                        cb(this.canvas, mutation);\r\n                    }\r\n                    return result;\r\n                };\r\n            });\r\n            handlers.push(restoreHandler);\r\n        }\r\n        catch {\r\n            const hookHandler = hookSetter(prototype, prop, {\r\n                set(v) {\r\n                    cb(this.canvas, {\r\n                        type,\r\n                        property: prop,\r\n                        args: [v],\r\n                        setter: true,\r\n                    });\r\n                },\r\n            });\r\n            handlers.push(hookHandler);\r\n        }\r\n    }\r\n    return handlers;\r\n}\r\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\r\n    const handlers = [];\r\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\r\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\r\n        handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\r\n    }\r\n    return () => {\r\n        handlers.forEach((h) => h());\r\n    };\r\n}\n\nexport { initCanvasWebGLMutationObserver as default };\n","var r = `for(var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",t=\"undefined\"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<64;a++)t[e.charCodeAt(a)]=a;var n=function(t){var a,n=new Uint8Array(t),r=n.length,s=\"\";for(a=0;a<r;a+=3)s+=e[n[a]>>2],s+=e[(3&n[a])<<4|n[a+1]>>4],s+=e[(15&n[a+1])<<2|n[a+2]>>6],s+=e[63&n[a+2]];return r%3==2?s=s.substring(0,s.length-1)+\"=\":r%3==1&&(s=s.substring(0,s.length-2)+\"==\"),s};const r=new Map,s=new Map;const i=self;i.onmessage=async function(e){if(!(\"OffscreenCanvas\"in globalThis))return i.postMessage({id:e.data.id});{const{id:t,bitmap:a,width:o,height:f,maxCanvasSize:c,dataURLOptions:g}=e.data,u=async function(e,t,a){const r=e+\"-\"+t;if(\"OffscreenCanvas\"in globalThis){if(s.has(r))return s.get(r);const i=new OffscreenCanvas(e,t);i.getContext(\"2d\");const o=await i.convertToBlob(a),f=await o.arrayBuffer(),c=n(f);return s.set(r,c),c}return\"\"}(o,f,g),[h,d]=function(e,t,a){if(!a)return[e,t];const[n,r]=a;if(e<=n&&t<=r)return[e,t];let s=e,i=t;return s>n&&(i=Math.floor(n*t/e),s=n),i>r&&(s=Math.floor(r*e/t),i=r),[s,i]}(o,f,c),l=new OffscreenCanvas(h,d),w=l.getContext(\"bitmaprenderer\"),p=h===o&&d===f?a:await createImageBitmap(a,{resizeWidth:h,resizeHeight:d,resizeQuality:\"low\"});w.transferFromImageBitmap(p),a.close();const y=await l.convertToBlob(g),v=y.type,b=await y.arrayBuffer(),m=n(b);if(p.close(),!r.has(t)&&await u===m)return r.set(t,m),i.postMessage({id:t});if(r.get(t)===m)return i.postMessage({id:t});i.postMessage({id:t,type:v,base64:m,width:o,height:f}),r.set(t,m)}};`;\n\nexport { r as default };\n","import r from './image-bitmap-data-url-worker.js';\n\nfunction t(){const t=new Blob([r]);return URL.createObjectURL(t)}\n\nexport { t as getImageBitmapDataUrlWorkerURL };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n    addWindow() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    resetShadowRoots() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.windowsSet = new WeakSet();\r\n        this.windows = [];\r\n        this.shadowDoms = new Set();\r\n        this.worker?.terminate();\r\n        this.worker = null;\r\n        this.snapshotInProgressMap = new Map();\r\n        if ((this.options.recordCanvas &&\r\n            typeof this.options.sampling === 'number') ||\r\n            this.options.enableManualSnapshot) {\r\n            this.worker = this.initFPSWorker();\r\n        }\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.shadowDoms = new Set();\r\n        this.windowsSet = new WeakSet();\r\n        this.windows = [];\r\n        this.restoreHandlers = [];\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.snapshotInProgressMap = new Map();\r\n        this.worker = null;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if ((recordCanvas && typeof sampling === 'number') ||\r\n            options.enableManualSnapshot) {\r\n            this.worker = this.initFPSWorker();\r\n        }\r\n        this.addWindow(win);\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all') {\r\n                this.startRAFTimestamping();\r\n                this.startPendingCanvasMutationFlusher();\r\n            }\r\n            if (recordCanvas && typeof sampling === 'number') {\r\n                this.initCanvasFPSObserver(sampling, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n            }\r\n        })();\r\n    }\r\n    addWindow(win) {\r\n        const { sampling = 'all', blockClass, blockSelector, unblockSelector, recordCanvas, enableManualSnapshot, } = this.options;\r\n        if (this.windowsSet.has(win))\r\n            return;\r\n        if (enableManualSnapshot) {\r\n            this.windowsSet.add(win);\r\n            this.windows.push(new WeakRef(win));\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all') {\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            }\r\n            if (recordCanvas && typeof sampling === 'number') {\r\n                const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n                this.restoreHandlers.push(() => {\r\n                    canvasContextReset();\r\n                });\r\n            }\r\n        })();\r\n        this.windowsSet.add(win);\r\n        this.windows.push(new WeakRef(win));\r\n    }\r\n    addShadowRoot(shadowRoot) {\r\n        this.shadowDoms.add(new WeakRef(shadowRoot));\r\n    }\r\n    resetShadowRoots() {\r\n        this.shadowDoms = new Set();\r\n    }\r\n    initFPSWorker() {\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            this.snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        return worker;\r\n    }\r\n    initCanvasFPSObserver(fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const rafId = this.takeSnapshot(false, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.restoreHandlers.push(() => {\r\n            cancelAnimationFrame(rafId);\r\n        });\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.restoreHandlers.push(() => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        });\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.restoreHandlers.push(() => {\r\n            cancelAnimationFrame(rafId);\r\n        });\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            const searchCanvas = (root) => {\r\n                root.querySelectorAll('canvas').forEach((canvas) => {\r\n                    if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                        matchedCanvas.push(canvas);\r\n                    }\r\n                });\r\n            };\r\n            for (const item of this.windows) {\r\n                const window = item.deref();\r\n                if (window) {\r\n                    searchCanvas(window.document);\r\n                }\r\n            }\r\n            for (const item of this.shadowDoms) {\r\n                const shadowRoot = item.deref();\r\n                if (shadowRoot) {\r\n                    searchCanvas(shadowRoot);\r\n                }\r\n            }\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (!this.windows.length) {\r\n                return;\r\n            }\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                if (!this.mirror.hasNode(canvas)) {\r\n                    return;\r\n                }\r\n                const id = this.mirror.getId(canvas);\r\n                if (this.snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                this.snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    this.worker?.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import type { CanvasManagerInterface, CanvasManagerOptions } from '@sentry-internal/replay';\nimport { CanvasManager } from '@sentry-internal/rrweb';\nimport { defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationFn } from '@sentry/types';\n\ninterface ReplayCanvasIntegration extends Integration {\n  snapshot: (canvasElement?: HTMLCanvasElement) => Promise<void>;\n}\n\ninterface ReplayCanvasOptions {\n  enableManualSnapshot?: boolean;\n  maxCanvasSize?: [width: number, height: number];\n  quality: 'low' | 'medium' | 'high';\n}\n\ntype GetCanvasManager = (options: CanvasManagerOptions) => CanvasManagerInterface;\nexport interface ReplayCanvasIntegrationOptions {\n  enableManualSnapshot?: boolean;\n  maxCanvasSize?: number;\n  recordCanvas: true;\n  getCanvasManager: GetCanvasManager;\n  sampling: {\n    canvas: number;\n  };\n  dataURLOptions: {\n    type: string;\n    quality: number;\n  };\n}\n\nconst CANVAS_QUALITY = {\n  low: {\n    sampling: {\n      canvas: 1,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.25,\n    },\n  },\n  medium: {\n    sampling: {\n      canvas: 2,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.4,\n    },\n  },\n  high: {\n    sampling: {\n      canvas: 4,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.5,\n    },\n  },\n};\n\nconst INTEGRATION_NAME = 'ReplayCanvas';\nconst DEFAULT_MAX_CANVAS_SIZE = 1280;\n\n/** Exported only for type safe tests. */\nexport const _replayCanvasIntegration = ((options: Partial<ReplayCanvasOptions> = {}) => {\n  const [maxCanvasWidth, maxCanvasHeight] = options.maxCanvasSize || [];\n  const _canvasOptions = {\n    quality: options.quality || 'medium',\n    enableManualSnapshot: options.enableManualSnapshot,\n    maxCanvasSize: [\n      maxCanvasWidth ? Math.min(maxCanvasWidth, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE,\n      maxCanvasHeight ? Math.min(maxCanvasHeight, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE,\n    ] as [number, number],\n  };\n\n  let canvasManagerResolve: (value: CanvasManager) => void;\n  const _canvasManager: Promise<CanvasManager> = new Promise(resolve => (canvasManagerResolve = resolve));\n\n  return {\n    name: INTEGRATION_NAME,\n    getOptions(): ReplayCanvasIntegrationOptions {\n      const { quality, enableManualSnapshot, maxCanvasSize } = _canvasOptions;\n\n      return {\n        enableManualSnapshot,\n        recordCanvas: true,\n        getCanvasManager: (getCanvasManagerOptions: CanvasManagerOptions) => {\n          const manager = new CanvasManager({\n            ...getCanvasManagerOptions,\n            enableManualSnapshot,\n            maxCanvasSize,\n            errorHandler: (err: unknown) => {\n              try {\n                if (typeof err === 'object') {\n                  (err as Error & { __rrweb__?: boolean }).__rrweb__ = true;\n                }\n              } catch (error) {\n                // ignore errors here\n                // this can happen if the error is frozen or does not allow mutation for other reasons\n              }\n            },\n          });\n          canvasManagerResolve(manager);\n          return manager;\n        },\n        ...(CANVAS_QUALITY[quality || 'medium'] || CANVAS_QUALITY.medium),\n      };\n    },\n    async snapshot(canvasElement?: HTMLCanvasElement) {\n      const canvasManager = await _canvasManager;\n      canvasManager.snapshot(canvasElement);\n    },\n  };\n}) satisfies IntegrationFn<ReplayCanvasIntegration>;\n\n/**\n * Add this in addition to `replayIntegration()` to enable canvas recording.\n */\nexport const replayCanvasIntegration = defineIntegration(\n  _replayCanvasIntegration,\n) as IntegrationFn<ReplayCanvasIntegration>;\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and feedback packages\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\nexport const DOCUMENT = WINDOW.document;\nexport const NAVIGATOR = WINDOW.navigator;\n\nexport const TRIGGER_LABEL = 'Report a Bug';\nexport const CANCEL_BUTTON_LABEL = 'Cancel';\nexport const SUBMIT_BUTTON_LABEL = 'Send Bug Report';\nexport const CONFIRM_BUTTON_LABEL = 'Confirm';\nexport const FORM_TITLE = 'Report a Bug';\nexport const EMAIL_PLACEHOLDER = 'your.email@example.org';\nexport const EMAIL_LABEL = 'Email';\nexport const MESSAGE_PLACEHOLDER = \"What's the bug? What did you expect?\";\nexport const MESSAGE_LABEL = 'Description';\nexport const NAME_PLACEHOLDER = 'Your Name';\nexport const NAME_LABEL = 'Name';\nexport const SUCCESS_MESSAGE_TEXT = 'Thank you for your report!';\nexport const IS_REQUIRED_LABEL = '(required)';\nexport const ADD_SCREENSHOT_LABEL = 'Add a screenshot';\nexport const REMOVE_SCREENSHOT_LABEL = 'Remove screenshot';\n\nexport const FEEDBACK_WIDGET_SOURCE = 'widget';\nexport const FEEDBACK_API_SOURCE = 'api';\n\nexport const SUCCESS_MESSAGE_TIMEOUT = 5000;\n","import { captureFeedback } from '@sentry/core';\nimport { getClient } from '@sentry/core';\nimport { getCurrentScope } from '@sentry/core';\nimport type { Event, EventHint, SendFeedback, SendFeedbackParams, TransportMakeRequestResponse } from '@sentry/types';\nimport { getLocationHref } from '@sentry/utils';\nimport { FEEDBACK_API_SOURCE } from '../constants';\n\n/**\n * Public API to send a Feedback item to Sentry\n */\nexport const sendFeedback: SendFeedback = (\n  params: SendFeedbackParams,\n  hint: EventHint & { includeReplay?: boolean } = { includeReplay: true },\n): Promise<string> => {\n  if (!params.message) {\n    throw new Error('Unable to submit feedback with empty message');\n  }\n\n  // We want to wait for the feedback to be sent (or not)\n  const client = getClient();\n\n  if (!client) {\n    throw new Error('No client setup, cannot send feedback.');\n  }\n\n  if (params.tags && Object.keys(params.tags).length) {\n    getCurrentScope().setTags(params.tags);\n  }\n  const eventId = captureFeedback(\n    {\n      source: FEEDBACK_API_SOURCE,\n      url: getLocationHref(),\n      ...params,\n    },\n    hint,\n  );\n\n  // We want to wait for the feedback to be sent (or not)\n  return new Promise<string>((resolve, reject) => {\n    // After 5s, we want to clear anyhow\n    const timeout = setTimeout(() => reject('Unable to determine if Feedback was correctly sent.'), 5_000);\n\n    const cleanup = client.on('afterSendEvent', (event: Event, response: TransportMakeRequestResponse) => {\n      if (event.event_id !== eventId) {\n        return;\n      }\n\n      clearTimeout(timeout);\n      cleanup();\n\n      // Require valid status codes, otherwise can assume feedback was not sent successfully\n      if (\n        response &&\n        typeof response.statusCode === 'number' &&\n        response.statusCode >= 200 &&\n        response.statusCode < 300\n      ) {\n        resolve(eventId);\n      }\n\n      if (response && typeof response.statusCode === 'number' && response.statusCode === 0) {\n        return reject(\n          'Unable to send Feedback. This is because of network issues, or because you are using an ad-blocker.',\n        );\n      }\n\n      return reject(\n        'Unable to send Feedback. This could be because of network issues, or because you are using an ad-blocker',\n      );\n    });\n  });\n};\n\n/*\n * For reference, the fully built event looks something like this:\n * {\n *     \"type\": \"feedback\",\n *     \"event_id\": \"d2132d31b39445f1938d7e21b6bf0ec4\",\n *     \"timestamp\": 1597977777.6189718,\n *     \"dist\": \"1.12\",\n *     \"platform\": \"javascript\",\n *     \"environment\": \"production\",\n *     \"release\": 42,\n *     \"tags\": {\"transaction\": \"/organizations/:orgId/performance/:eventSlug/\"},\n *     \"sdk\": {\"name\": \"name\", \"version\": \"version\"},\n *     \"user\": {\n *         \"id\": \"123\",\n *         \"username\": \"user\",\n *         \"email\": \"user@site.com\",\n *         \"ip_address\": \"192.168.11.12\",\n *     },\n *     \"request\": {\n *         \"url\": None,\n *         \"headers\": {\n *             \"user-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Safari/605.1.15\"\n *         },\n *     },\n *     \"contexts\": {\n *         \"feedback\": {\n *             \"message\": \"test message\",\n *             \"contact_email\": \"test@example.com\",\n *             \"type\": \"feedback\",\n *         },\n *         \"trace\": {\n *             \"trace_id\": \"4C79F60C11214EB38604F4AE0781BFB2\",\n *             \"span_id\": \"FA90FDEAD5F74052\",\n *             \"type\": \"trace\",\n *         },\n *         \"replay\": {\n *             \"replay_id\": \"e2d42047b1c5431c8cba85ee2a8ab25d\",\n *         },\n *     },\n *   }\n */\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { NAVIGATOR } from '../constants';\n\n/**\n * Mobile browsers do not support `mediaDevices.getDisplayMedia` even though they have the api implemented\n * Instead they return things like `NotAllowedError` when called.\n *\n * It's simpler for us to browser sniff first, and avoid loading the integration if we can.\n *\n * https://stackoverflow.com/a/58879212\n * https://stackoverflow.com/a/3540295\n *\n * `mediaDevices.getDisplayMedia` is also only supported in secure contexts, and return a `mediaDevices is not supported` error, so we should also avoid loading the integration if we can.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia\n */\nexport function isScreenshotSupported(): boolean {\n  if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(NAVIGATOR.userAgent)) {\n    return false;\n  }\n  /**\n   * User agent on iPads show as Macintosh, so we need extra checks\n   *\n   * https://forums.developer.apple.com/forums/thread/119186\n   * https://stackoverflow.com/questions/60482650/how-to-detect-ipad-useragent-on-safari-browser\n   */\n  if (/Macintosh/i.test(NAVIGATOR.userAgent) && NAVIGATOR.maxTouchPoints && NAVIGATOR.maxTouchPoints > 1) {\n    return false;\n  }\n  if (!isSecureContext) {\n    return false;\n  }\n  return true;\n}\n","import type { FeedbackFormData, FeedbackInternalOptions } from '@sentry/types';\nimport type { OptionalFeedbackConfiguration } from '../core/types';\n\n/**\n * Quick and dirty deep merge for the Feedback integration options\n */\nexport function mergeOptions(\n  defaultOptions: FeedbackInternalOptions,\n  optionOverrides: OptionalFeedbackConfiguration,\n): FeedbackInternalOptions {\n  return {\n    ...defaultOptions,\n    ...optionOverrides,\n    tags: {\n      ...defaultOptions.tags,\n      ...optionOverrides.tags,\n    },\n    onFormOpen: () => {\n      optionOverrides.onFormOpen && optionOverrides.onFormOpen();\n      defaultOptions.onFormOpen && defaultOptions.onFormOpen();\n    },\n    onFormClose: () => {\n      optionOverrides.onFormClose && optionOverrides.onFormClose();\n      defaultOptions.onFormClose && defaultOptions.onFormClose();\n    },\n    onSubmitSuccess: (data: FeedbackFormData) => {\n      optionOverrides.onSubmitSuccess && optionOverrides.onSubmitSuccess(data);\n      defaultOptions.onSubmitSuccess && defaultOptions.onSubmitSuccess(data);\n    },\n    onSubmitError: (error: Error) => {\n      optionOverrides.onSubmitError && optionOverrides.onSubmitError(error);\n      defaultOptions.onSubmitError && defaultOptions.onSubmitError(error);\n    },\n    onFormSubmitted: () => {\n      optionOverrides.onFormSubmitted && optionOverrides.onFormSubmitted();\n      defaultOptions.onFormSubmitted && defaultOptions.onFormSubmitted();\n    },\n    themeDark: {\n      ...defaultOptions.themeDark,\n      ...optionOverrides.themeDark,\n    },\n    themeLight: {\n      ...defaultOptions.themeLight,\n      ...optionOverrides.themeLight,\n    },\n  };\n}\n","import { DOCUMENT } from '../../constants';\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nexport function createActorStyles(): HTMLStyleElement {\n  const style = DOCUMENT.createElement('style');\n  style.textContent = `\n.widget__actor {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: var(--page-margin);\n  inset: var(--actor-inset);\n\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px;\n\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 600;\n  line-height: 1.14em;\n  text-decoration: none;\n\n  background: var(--actor-background, var(--background));\n  border-radius: var(--actor-border-radius, 1.7em/50%);\n  border: var(--actor-border, var(--border));\n  box-shadow: var(--actor-box-shadow, var(--box-shadow));\n  color: var(--actor-color, var(--foreground));\n  fill: var(--actor-color, var(--foreground));\n  cursor: pointer;\n  opacity: 1;\n  transition: transform 0.2s ease-in-out;\n  transform: translate(0, 0) scale(1);\n}\n.widget__actor[aria-hidden=\"true\"] {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n  transform: translate(0, 16px) scale(0.98);\n}\n\n.widget__actor:hover {\n  background: var(--actor-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n\n.widget__actor svg {\n  width: 1.14em;\n  height: 1.14em;\n}\n\n@media (max-width: 600px) {\n  .widget__actor span {\n    display: none;\n  }\n}\n`;\n\n  return style;\n}\n","/**\n * Helper function to set a dict of attributes on element (w/ specified namespace)\n */\nexport function setAttributesNS<T extends SVGElement>(el: T, attributes: Record<string, string>): T {\n  Object.entries(attributes).forEach(([key, val]) => {\n    el.setAttributeNS(null, key, val);\n  });\n  return el;\n}\n","import { WINDOW } from '../../constants';\nimport { setAttributesNS } from '../../util/setAttributesNS';\n\nconst SIZE = 20;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Feedback Icon\n */\nexport function FeedbackIcon(): SVGElement {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    viewBox: `0 0 ${SIZE} ${SIZE}`,\n    fill: 'var(--foreground)',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_80)',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M15.6622 15H12.3997C12.2129 14.9959 12.031 14.9396 11.8747 14.8375L8.04965 12.2H7.49956V19.1C7.4875 19.3348 7.3888 19.5568 7.22256 19.723C7.05632 19.8892 6.83435 19.9879 6.59956 20H2.04956C1.80193 19.9968 1.56535 19.8969 1.39023 19.7218C1.21511 19.5467 1.1153 19.3101 1.11206 19.0625V12.2H0.949652C0.824431 12.2017 0.700142 12.1783 0.584123 12.1311C0.468104 12.084 0.362708 12.014 0.274155 11.9255C0.185602 11.8369 0.115689 11.7315 0.0685419 11.6155C0.0213952 11.4995 -0.00202913 11.3752 -0.00034808 11.25V3.75C-0.00900498 3.62067 0.0092504 3.49095 0.0532651 3.36904C0.0972798 3.24712 0.166097 3.13566 0.255372 3.04168C0.344646 2.94771 0.452437 2.87327 0.571937 2.82307C0.691437 2.77286 0.82005 2.74798 0.949652 2.75H8.04965L11.8747 0.1625C12.031 0.0603649 12.2129 0.00407221 12.3997 0H15.6622C15.9098 0.00323746 16.1464 0.103049 16.3215 0.278167C16.4966 0.453286 16.5964 0.689866 16.5997 0.9375V3.25269C17.3969 3.42959 18.1345 3.83026 18.7211 4.41679C19.5322 5.22788 19.9878 6.32796 19.9878 7.47502C19.9878 8.62209 19.5322 9.72217 18.7211 10.5333C18.1345 11.1198 17.3969 11.5205 16.5997 11.6974V14.0125C16.6047 14.1393 16.5842 14.2659 16.5395 14.3847C16.4948 14.5035 16.4268 14.6121 16.3394 14.7042C16.252 14.7962 16.147 14.8698 16.0307 14.9206C15.9144 14.9714 15.7891 14.9984 15.6622 15ZM1.89695 10.325H1.88715V4.625H8.33715C8.52423 4.62301 8.70666 4.56654 8.86215 4.4625L12.6872 1.875H14.7247V13.125H12.6872L8.86215 10.4875C8.70666 10.3835 8.52423 10.327 8.33715 10.325H2.20217C2.15205 10.3167 2.10102 10.3125 2.04956 10.3125C1.9981 10.3125 1.94708 10.3167 1.89695 10.325ZM2.98706 12.2V18.1625H5.66206V12.2H2.98706ZM16.5997 9.93612V5.01393C16.6536 5.02355 16.7072 5.03495 16.7605 5.04814C17.1202 5.13709 17.4556 5.30487 17.7425 5.53934C18.0293 5.77381 18.2605 6.06912 18.4192 6.40389C18.578 6.73866 18.6603 7.10452 18.6603 7.47502C18.6603 7.84552 18.578 8.21139 18.4192 8.54616C18.2605 8.88093 18.0293 9.17624 17.7425 9.41071C17.4556 9.64518 17.1202 9.81296 16.7605 9.90191C16.7072 9.91509 16.6536 9.9265 16.5997 9.93612Z',\n  });\n  svg.appendChild(g).appendChild(path);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_80',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    fill: 'white',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return svg;\n}\n","import { DOCUMENT, TRIGGER_LABEL } from '../../constants';\nimport { createActorStyles } from './Actor.css';\nimport { FeedbackIcon } from './FeedbackIcon';\n\nexport interface ActorProps {\n  triggerLabel: string;\n  triggerAriaLabel: string;\n  shadow: ShadowRoot;\n}\n\nexport interface ActorComponent {\n  el: HTMLElement;\n\n  appendToDom: () => void;\n\n  removeFromDom: () => void;\n\n  show: () => void;\n\n  hide: () => void;\n}\n\n/**\n * The sentry-provided button to open the feedback modal\n */\nexport function Actor({ triggerLabel, triggerAriaLabel, shadow }: ActorProps): ActorComponent {\n  const el = DOCUMENT.createElement('button');\n  el.type = 'button';\n  el.className = 'widget__actor';\n  el.ariaHidden = 'false';\n  el.ariaLabel = triggerAriaLabel || triggerLabel || TRIGGER_LABEL;\n  el.appendChild(FeedbackIcon());\n  if (triggerLabel) {\n    const label = DOCUMENT.createElement('span');\n    label.appendChild(DOCUMENT.createTextNode(triggerLabel));\n    el.appendChild(label);\n  }\n\n  const style = createActorStyles();\n\n  return {\n    el,\n    appendToDom(): void {\n      shadow.appendChild(style);\n      shadow.appendChild(el);\n    },\n    removeFromDom(): void {\n      shadow.removeChild(el);\n      shadow.removeChild(style);\n    },\n    show(): void {\n      el.ariaHidden = 'false';\n    },\n    hide(): void {\n      el.ariaHidden = 'true';\n    },\n  };\n}\n","import type { FeedbackInternalOptions } from '@sentry/types';\nimport { DOCUMENT } from '../constants';\n\nconst PURPLE = 'rgba(88, 74, 192, 1)';\n\ninterface InternalTheme extends NonNullable<FeedbackInternalOptions['themeLight']> {\n  border: string;\n  interactiveFilter: string;\n}\n\nconst DEFAULT_LIGHT: InternalTheme = {\n  foreground: '#2b2233',\n  background: '#ffffff',\n  accentForeground: 'white',\n  accentBackground: PURPLE,\n  successColor: '#268d75',\n  errorColor: '#df3338',\n  border: '1.5px solid rgba(41, 35, 47, 0.13)',\n  boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',\n  outline: '1px auto var(--accent-background)',\n  interactiveFilter: 'brightness(95%)',\n};\nconst DEFAULT_DARK: InternalTheme = {\n  foreground: '#ebe6ef',\n  background: '#29232f',\n  accentForeground: 'white',\n  accentBackground: PURPLE,\n  successColor: '#2da98c',\n  errorColor: '#f55459',\n  border: '1.5px solid rgba(235, 230, 239, 0.15)',\n  boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',\n  outline: '1px auto var(--accent-background)',\n  interactiveFilter: 'brightness(150%)',\n};\n\nfunction getThemedCssVariables(theme: InternalTheme): string {\n  return `\n  --foreground: ${theme.foreground};\n  --background: ${theme.background};\n  --accent-foreground: ${theme.accentForeground};\n  --accent-background: ${theme.accentBackground};\n  --success-color: ${theme.successColor};\n  --error-color: ${theme.errorColor};\n  --border: ${theme.border};\n  --box-shadow: ${theme.boxShadow};\n  --outline: ${theme.outline};\n  --interactive-filter: ${theme.interactiveFilter};\n  `;\n}\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nexport function createMainStyles({ colorScheme, themeDark, themeLight }: FeedbackInternalOptions): HTMLStyleElement {\n  const style = DOCUMENT.createElement('style');\n  style.textContent = `\n:host {\n  --font-family: system-ui, 'Helvetica Neue', Arial, sans-serif;\n  --font-size: 14px;\n  --z-index: 100000;\n\n  --page-margin: 16px;\n  --inset: auto 0 0 auto;\n  --actor-inset: var(--inset);\n\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n\n  ${colorScheme !== 'system' ? 'color-scheme: only light;' : ''}\n\n  ${getThemedCssVariables(\n    colorScheme === 'dark' ? { ...DEFAULT_DARK, ...themeDark } : { ...DEFAULT_LIGHT, ...themeLight },\n  )}\n}\n\n${\n  colorScheme === 'system'\n    ? `\n@media (prefers-color-scheme: dark) {\n  :host {\n    ${getThemedCssVariables({ ...DEFAULT_DARK, ...themeDark })}\n  }\n}`\n    : ''\n}\n}\n`;\n\n  return style;\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  FeedbackInternalOptions,\n  FeedbackModalIntegration,\n  FeedbackScreenshotIntegration,\n  Integration,\n  IntegrationFn,\n} from '@sentry/types';\nimport { isBrowser, logger } from '@sentry/utils';\nimport {\n  ADD_SCREENSHOT_LABEL,\n  CANCEL_BUTTON_LABEL,\n  CONFIRM_BUTTON_LABEL,\n  DOCUMENT,\n  EMAIL_LABEL,\n  EMAIL_PLACEHOLDER,\n  FORM_TITLE,\n  IS_REQUIRED_LABEL,\n  MESSAGE_LABEL,\n  MESSAGE_PLACEHOLDER,\n  NAME_LABEL,\n  NAME_PLACEHOLDER,\n  REMOVE_SCREENSHOT_LABEL,\n  SUBMIT_BUTTON_LABEL,\n  SUCCESS_MESSAGE_TEXT,\n  TRIGGER_LABEL,\n} from '../constants';\nimport { DEBUG_BUILD } from '../util/debug-build';\nimport { isScreenshotSupported } from '../util/isScreenshotSupported';\nimport { mergeOptions } from '../util/mergeOptions';\nimport type { ActorComponent } from './components/Actor';\nimport { Actor } from './components/Actor';\nimport { createMainStyles } from './createMainStyles';\nimport { sendFeedback } from './sendFeedback';\nimport type { OptionalFeedbackConfiguration, OverrideFeedbackConfiguration } from './types';\n\ntype Unsubscribe = () => void;\n\n/**\n * Allow users to capture user feedback and send it to Sentry.\n */\n\ninterface BuilderOptions {\n  // The type here should be `keyof typeof LazyLoadableIntegrations`, but that'll cause a cicrular\n  // dependency with @sentry/core\n  lazyLoadIntegration: (name: 'feedbackModalIntegration' | 'feedbackScreenshotIntegration') => Promise<IntegrationFn>;\n  getModalIntegration?: null | (() => IntegrationFn);\n  getScreenshotIntegration?: null | (() => IntegrationFn);\n}\n\nexport const buildFeedbackIntegration = ({\n  lazyLoadIntegration,\n  getModalIntegration,\n  getScreenshotIntegration,\n}: BuilderOptions): IntegrationFn<\n  Integration & {\n    attachTo(el: Element | string, optionOverrides?: OverrideFeedbackConfiguration): Unsubscribe;\n    createForm(\n      optionOverrides?: OverrideFeedbackConfiguration,\n    ): Promise<ReturnType<FeedbackModalIntegration['createDialog']>>;\n    createWidget(optionOverrides?: OverrideFeedbackConfiguration): ActorComponent;\n    remove(): void;\n  }\n> => {\n  const feedbackIntegration = (({\n    // FeedbackGeneralConfiguration\n    id = 'sentry-feedback',\n    autoInject = true,\n    showBranding = true,\n    isEmailRequired = false,\n    isNameRequired = false,\n    showEmail = true,\n    showName = true,\n    enableScreenshot = true,\n    useSentryUser = {\n      email: 'email',\n      name: 'username',\n    },\n    tags,\n\n    // FeedbackThemeConfiguration\n    colorScheme = 'system',\n    themeLight = {},\n    themeDark = {},\n\n    // FeedbackTextConfiguration\n    addScreenshotButtonLabel = ADD_SCREENSHOT_LABEL,\n    cancelButtonLabel = CANCEL_BUTTON_LABEL,\n    confirmButtonLabel = CONFIRM_BUTTON_LABEL,\n    emailLabel = EMAIL_LABEL,\n    emailPlaceholder = EMAIL_PLACEHOLDER,\n    formTitle = FORM_TITLE,\n    isRequiredLabel = IS_REQUIRED_LABEL,\n    messageLabel = MESSAGE_LABEL,\n    messagePlaceholder = MESSAGE_PLACEHOLDER,\n    nameLabel = NAME_LABEL,\n    namePlaceholder = NAME_PLACEHOLDER,\n    removeScreenshotButtonLabel = REMOVE_SCREENSHOT_LABEL,\n    submitButtonLabel = SUBMIT_BUTTON_LABEL,\n    successMessageText = SUCCESS_MESSAGE_TEXT,\n    triggerLabel = TRIGGER_LABEL,\n    triggerAriaLabel = '',\n\n    // FeedbackCallbacks\n    onFormOpen,\n    onFormClose,\n    onSubmitSuccess,\n    onSubmitError,\n    onFormSubmitted,\n  }: OptionalFeedbackConfiguration = {}) => {\n    const _options = {\n      id,\n      autoInject,\n      showBranding,\n      isEmailRequired,\n      isNameRequired,\n      showEmail,\n      showName,\n      enableScreenshot,\n      useSentryUser,\n      tags,\n\n      colorScheme,\n      themeDark,\n      themeLight,\n\n      triggerLabel,\n      triggerAriaLabel,\n      cancelButtonLabel,\n      submitButtonLabel,\n      confirmButtonLabel,\n      formTitle,\n      emailLabel,\n      emailPlaceholder,\n      messageLabel,\n      messagePlaceholder,\n      nameLabel,\n      namePlaceholder,\n      successMessageText,\n      isRequiredLabel,\n      addScreenshotButtonLabel,\n      removeScreenshotButtonLabel,\n\n      onFormClose,\n      onFormOpen,\n      onSubmitError,\n      onSubmitSuccess,\n      onFormSubmitted,\n    };\n\n    let _shadow: ShadowRoot | null = null;\n    let _subscriptions: Unsubscribe[] = [];\n\n    /**\n     * Get the shadow root where we will append css\n     */\n    const _createShadow = (options: FeedbackInternalOptions): ShadowRoot => {\n      if (!_shadow) {\n        const host = DOCUMENT.createElement('div');\n        host.id = String(options.id);\n        DOCUMENT.body.appendChild(host);\n\n        _shadow = host.attachShadow({ mode: 'open' });\n        _shadow.appendChild(createMainStyles(options));\n      }\n      return _shadow as ShadowRoot;\n    };\n\n    const _findIntegration = async <I extends Integration>(\n      integrationName: string,\n      getter: undefined | null | (() => IntegrationFn),\n      functionMethodName: 'feedbackModalIntegration' | 'feedbackScreenshotIntegration',\n    ): Promise<I> => {\n      const client = getClient();\n      const existing = client && client.getIntegrationByName(integrationName);\n      if (existing) {\n        return existing as I;\n      }\n      const integrationFn = (getter && getter()) || (await lazyLoadIntegration(functionMethodName));\n      const integration = integrationFn();\n      client && client.addIntegration(integration);\n      return integration as I;\n    };\n\n    const _loadAndRenderDialog = async (\n      options: FeedbackInternalOptions,\n    ): Promise<ReturnType<FeedbackModalIntegration['createDialog']>> => {\n      const screenshotRequired = options.enableScreenshot && isScreenshotSupported();\n      const [modalIntegration, screenshotIntegration] = await Promise.all([\n        _findIntegration<FeedbackModalIntegration>('FeedbackModal', getModalIntegration, 'feedbackModalIntegration'),\n        screenshotRequired\n          ? _findIntegration<FeedbackScreenshotIntegration>(\n              'FeedbackScreenshot',\n              getScreenshotIntegration,\n              'feedbackScreenshotIntegration',\n            )\n          : undefined,\n      ]);\n      if (!modalIntegration) {\n        // TODO: Let the end-user retry async loading\n        DEBUG_BUILD &&\n          logger.error(\n            '[Feedback] Missing feedback modal integration. Try using `feedbackSyncIntegration` in your `Sentry.init`.',\n          );\n        throw new Error('[Feedback] Missing feedback modal integration!');\n      }\n      if (screenshotRequired && !screenshotIntegration) {\n        DEBUG_BUILD &&\n          logger.error('[Feedback] Missing feedback screenshot integration. Proceeding without screenshots.');\n      }\n\n      return modalIntegration.createDialog({\n        options,\n        screenshotIntegration: screenshotRequired ? screenshotIntegration : undefined,\n        sendFeedback,\n        shadow: _createShadow(options),\n      });\n    };\n\n    const _attachTo = (el: Element | string, optionOverrides: OverrideFeedbackConfiguration = {}): Unsubscribe => {\n      const mergedOptions = mergeOptions(_options, optionOverrides);\n\n      const targetEl =\n        typeof el === 'string' ? DOCUMENT.querySelector(el) : typeof el.addEventListener === 'function' ? el : null;\n\n      if (!targetEl) {\n        DEBUG_BUILD && logger.error('[Feedback] Unable to attach to target element');\n        throw new Error('Unable to attach to target element');\n      }\n\n      let dialog: ReturnType<FeedbackModalIntegration['createDialog']> | null = null;\n      const handleClick = async (): Promise<void> => {\n        if (!dialog) {\n          dialog = await _loadAndRenderDialog({\n            ...mergedOptions,\n            onFormClose: () => {\n              dialog && dialog.close();\n              mergedOptions.onFormClose && mergedOptions.onFormClose();\n            },\n            onFormSubmitted: () => {\n              dialog && dialog.removeFromDom();\n              mergedOptions.onFormSubmitted && mergedOptions.onFormSubmitted();\n            },\n          });\n        }\n        dialog.appendToDom();\n        dialog.open();\n      };\n      targetEl.addEventListener('click', handleClick);\n      const unsubscribe = (): void => {\n        _subscriptions = _subscriptions.filter(sub => sub !== unsubscribe);\n        dialog && dialog.removeFromDom();\n        dialog = null;\n        targetEl.removeEventListener('click', handleClick);\n      };\n      _subscriptions.push(unsubscribe);\n      return unsubscribe;\n    };\n\n    const _createActor = (optionOverrides: OverrideFeedbackConfiguration = {}): ActorComponent => {\n      const mergedOptions = mergeOptions(_options, optionOverrides);\n      const shadow = _createShadow(mergedOptions);\n      const actor = Actor({\n        triggerLabel: mergedOptions.triggerLabel,\n        triggerAriaLabel: mergedOptions.triggerAriaLabel,\n        shadow,\n      });\n      _attachTo(actor.el, {\n        ...mergedOptions,\n        onFormOpen() {\n          actor.hide();\n        },\n        onFormClose() {\n          actor.show();\n        },\n        onFormSubmitted() {\n          actor.show();\n        },\n      });\n      return actor;\n    };\n\n    return {\n      name: 'Feedback',\n      setupOnce() {\n        if (!isBrowser() || !_options.autoInject) {\n          return;\n        }\n\n        if (DOCUMENT.readyState === 'loading') {\n          DOCUMENT.addEventListener('DOMContentLoaded', () => _createActor().appendToDom());\n        } else {\n          _createActor().appendToDom();\n        }\n      },\n\n      /**\n       * Adds click listener to the element to open a feedback dialog\n       *\n       * The returned function can be used to remove the click listener\n       */\n      attachTo: _attachTo,\n\n      /**\n       * Creates a new widget which is composed of a Button which triggers a Dialog.\n       * Accepts partial options to override any options passed to constructor.\n       */\n      createWidget(optionOverrides: OverrideFeedbackConfiguration = {}): ActorComponent {\n        const actor = _createActor(mergeOptions(_options, optionOverrides));\n        actor.appendToDom();\n        return actor;\n      },\n\n      /**\n       * Creates a new Form which you can\n       * Accepts partial options to override any options passed to constructor.\n       */\n      async createForm(\n        optionOverrides: OverrideFeedbackConfiguration = {},\n      ): Promise<ReturnType<FeedbackModalIntegration['createDialog']>> {\n        return _loadAndRenderDialog(mergeOptions(_options, optionOverrides));\n      },\n\n      /**\n       * Removes the Feedback integration (including host, shadow DOM, and all widgets)\n       */\n      remove(): void {\n        if (_shadow) {\n          _shadow.parentElement && _shadow.parentElement.remove();\n          _shadow = null;\n        }\n        // Remove any lingering subscriptions\n        _subscriptions.forEach(sub => sub());\n        _subscriptions = [];\n      },\n    };\n  }) satisfies IntegrationFn;\n\n  return feedbackIntegration;\n};\n","import { getClient } from '@sentry/core';\nimport type { buildFeedbackIntegration } from './integration';\n\ntype FeedbackIntegration = ReturnType<typeof buildFeedbackIntegration>;\n\n/**\n * This is a small utility to get a type-safe instance of the Feedback integration.\n */\nexport function getFeedback(): ReturnType<FeedbackIntegration> | undefined {\n  const client = getClient();\n  return client && client.getIntegrationByName<ReturnType<FeedbackIntegration>>('Feedback');\n}\n","var n,l,u,t,i,o,r,f,e,c={},s=[],a=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,h=Array.isArray;function v(n,l){for(var u in l)n[u]=l[u];return n}function p(n){var l=n.parentNode;l&&l.removeChild(n)}function y(l,u,t){var i,o,r,f={};for(r in u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):t),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return d(l,f,i,o,null)}function d(n,t,i,o,r){var f={type:n,props:t,key:i,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==r?++u:r,__i:-1,__u:0};return null==r&&null!=l.vnode&&l.vnode(f),f}function _(){return{current:null}}function g(n){return n.children}function b(n,l){this.props=n,this.context=l}function m(n,l){if(null==l)return n.__?m(n.__,n.__i+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?m(n):null}function w(n,u,t){var i,o=n.__v,r=o.__e,f=n.__P;if(f)return(i=v({},o)).__v=o.__v+1,l.vnode&&l.vnode(i),M(f,i,o,n.__n,void 0!==f.ownerSVGElement,32&o.__u?[r]:null,u,null==r?m(o):r,!!(32&o.__u),t),i.__.__k[i.__i]=i,i.__d=void 0,i.__e!=r&&k(i),i}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function x(n){(!n.__d&&(n.__d=!0)&&i.push(n)&&!C.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||r)(C)}function C(){var n,u,t,o=[],r=[];for(i.sort(f);n=i.shift();)n.__d&&(t=i.length,u=w(n,o,r)||u,0===t||i.length>t?(j(o,u,r),r.length=o.length=0,u=void 0,i.sort(f)):u&&l.__c&&l.__c(u,s));u&&j(o,u,r),C.__r=0}function P(n,l,u,t,i,o,r,f,e,a,h){var v,p,y,d,_,g=t&&t.__k||s,b=l.length;for(u.__d=e,S(u,l,g),e=u.__d,v=0;v<b;v++)null!=(y=u.__k[v])&&\"boolean\"!=typeof y&&\"function\"!=typeof y&&(p=-1===y.__i?c:g[y.__i]||c,y.__i=v,M(n,y,p,i,o,r,f,e,a,h),d=y.__e,y.ref&&p.ref!=y.ref&&(p.ref&&N(p.ref,null,y),h.push(y.ref,y.__c||d,y)),null==_&&null!=d&&(_=d),65536&y.__u||p.__k===y.__k?e=$(y,e,n):\"function\"==typeof y.type&&void 0!==y.__d?e=y.__d:d&&(e=d.nextSibling),y.__d=void 0,y.__u&=-196609);u.__d=e,u.__e=_}function S(n,l,u){var t,i,o,r,f,e=l.length,c=u.length,s=c,a=0;for(n.__k=[],t=0;t<e;t++)null!=(i=n.__k[t]=null==(i=l[t])||\"boolean\"==typeof i||\"function\"==typeof i?null:\"string\"==typeof i||\"number\"==typeof i||\"bigint\"==typeof i||i.constructor==String?d(null,i,null,null,i):h(i)?d(g,{children:i},null,null,null):void 0===i.constructor&&i.__b>0?d(i.type,i.props,i.key,i.ref?i.ref:null,i.__v):i)?(i.__=n,i.__b=n.__b+1,f=I(i,u,r=t+a,s),i.__i=f,o=null,-1!==f&&(s--,(o=u[f])&&(o.__u|=131072)),null==o||null===o.__v?(-1==f&&a--,\"function\"!=typeof i.type&&(i.__u|=65536)):f!==r&&(f===r+1?a++:f>r?s>e-r?a+=f-r:a--:a=f<r&&f==r-1?f-r:0,f!==t+a&&(i.__u|=65536))):(o=u[t])&&null==o.key&&o.__e&&(o.__e==n.__d&&(n.__d=m(o)),O(o,o,!1),u[t]=null,s--);if(s)for(t=0;t<c;t++)null!=(o=u[t])&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=m(o)),O(o,o))}function $(n,l,u){var t,i;if(\"function\"==typeof n.type){for(t=n.__k,i=0;t&&i<t.length;i++)t[i]&&(t[i].__=n,l=$(t[i],l,u));return l}n.__e!=l&&(u.insertBefore(n.__e,l||null),l=n.__e);do{l=l&&l.nextSibling}while(null!=l&&8===l.nodeType);return l}function H(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(h(n)?n.some(function(n){H(n,l)}):l.push(n)),l}function I(n,l,u,t){var i=n.key,o=n.type,r=u-1,f=u+1,e=l[u];if(null===e||e&&i==e.key&&o===e.type)return u;if(t>(null!=e&&0==(131072&e.__u)?1:0))for(;r>=0||f<l.length;){if(r>=0){if((e=l[r])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return r;r--}if(f<l.length){if((e=l[f])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return f;f++}}return-1}function T(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||a.test(l)?u:u+\"px\"}function A(n,l,u,t,i){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof t&&(n.style.cssText=t=\"\"),t)for(l in t)u&&l in u||T(n.style,l,\"\");if(u)for(l in u)t&&u[l]===t[l]||T(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/(PointerCapture)$|Capture$/i,\"$1\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?t?u.u=t.u:(u.u=Date.now(),n.addEventListener(l,o?L:D,o)):n.removeEventListener(l,o?L:D,o);else{if(i)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!==l&&\"height\"!==l&&\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&\"rowSpan\"!==l&&\"colSpan\"!==l&&\"role\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&\"-\"!==l[4]?n.removeAttribute(l):n.setAttribute(l,u))}}function D(n){if(this.l){var u=this.l[n.type+!1];if(n.t){if(n.t<=u.u)return}else n.t=Date.now();return u(l.event?l.event(n):n)}}function L(n){if(this.l)return this.l[n.type+!0](l.event?l.event(n):n)}function M(n,u,t,i,o,r,f,e,c,s){var a,p,y,d,_,m,w,k,x,C,S,$,H,I,T,A=u.type;if(void 0!==u.constructor)return null;128&t.__u&&(c=!!(32&t.__u),r=[e=u.__e=t.__e]),(a=l.__b)&&a(u);n:if(\"function\"==typeof A)try{if(k=u.props,x=(a=A.contextType)&&i[a.__c],C=a?x?x.props.value:a.__:i,t.__c?w=(p=u.__c=t.__c).__=p.__E:(\"prototype\"in A&&A.prototype.render?u.__c=p=new A(k,C):(u.__c=p=new b(k,C),p.constructor=A,p.render=q),x&&x.sub(p),p.props=k,p.state||(p.state={}),p.context=C,p.__n=i,y=p.__d=!0,p.__h=[],p._sb=[]),null==p.__s&&(p.__s=p.state),null!=A.getDerivedStateFromProps&&(p.__s==p.state&&(p.__s=v({},p.__s)),v(p.__s,A.getDerivedStateFromProps(k,p.__s))),d=p.props,_=p.state,p.__v=u,y)null==A.getDerivedStateFromProps&&null!=p.componentWillMount&&p.componentWillMount(),null!=p.componentDidMount&&p.__h.push(p.componentDidMount);else{if(null==A.getDerivedStateFromProps&&k!==d&&null!=p.componentWillReceiveProps&&p.componentWillReceiveProps(k,C),!p.__e&&(null!=p.shouldComponentUpdate&&!1===p.shouldComponentUpdate(k,p.__s,C)||u.__v===t.__v)){for(u.__v!==t.__v&&(p.props=k,p.state=p.__s,p.__d=!1),u.__e=t.__e,u.__k=t.__k,u.__k.forEach(function(n){n&&(n.__=u)}),S=0;S<p._sb.length;S++)p.__h.push(p._sb[S]);p._sb=[],p.__h.length&&f.push(p);break n}null!=p.componentWillUpdate&&p.componentWillUpdate(k,p.__s,C),null!=p.componentDidUpdate&&p.__h.push(function(){p.componentDidUpdate(d,_,m)})}if(p.context=C,p.props=k,p.__P=n,p.__e=!1,$=l.__r,H=0,\"prototype\"in A&&A.prototype.render){for(p.state=p.__s,p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),I=0;I<p._sb.length;I++)p.__h.push(p._sb[I]);p._sb=[]}else do{p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),p.state=p.__s}while(p.__d&&++H<25);p.state=p.__s,null!=p.getChildContext&&(i=v(v({},i),p.getChildContext())),y||null==p.getSnapshotBeforeUpdate||(m=p.getSnapshotBeforeUpdate(d,_)),P(n,h(T=null!=a&&a.type===g&&null==a.key?a.props.children:a)?T:[T],u,t,i,o,r,f,e,c,s),p.base=u.__e,u.__u&=-161,p.__h.length&&f.push(p),w&&(p.__E=p.__=null)}catch(n){u.__v=null,c||null!=r?(u.__e=e,u.__u|=c?160:32,r[r.indexOf(e)]=null):(u.__e=t.__e,u.__k=t.__k),l.__e(n,u,t)}else null==r&&u.__v===t.__v?(u.__k=t.__k,u.__e=t.__e):u.__e=z(t.__e,u,t,i,o,r,f,c,s);(a=l.diffed)&&a(u)}function j(n,u,t){for(var i=0;i<t.length;i++)N(t[i],t[++i],t[++i]);l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function z(l,u,t,i,o,r,f,e,s){var a,v,y,d,_,g,b,w=t.props,k=u.props,x=u.type;if(\"svg\"===x&&(o=!0),null!=r)for(a=0;a<r.length;a++)if((_=r[a])&&\"setAttribute\"in _==!!x&&(x?_.localName===x:3===_.nodeType)){l=_,r[a]=null;break}if(null==l){if(null===x)return document.createTextNode(k);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",x):document.createElement(x,k.is&&k),r=null,e=!1}if(null===x)w===k||e&&l.data===k||(l.data=k);else{if(r=r&&n.call(l.childNodes),w=t.props||c,!e&&null!=r)for(w={},a=0;a<l.attributes.length;a++)w[(_=l.attributes[a]).name]=_.value;for(a in w)_=w[a],\"children\"==a||(\"dangerouslySetInnerHTML\"==a?y=_:\"key\"===a||a in k||A(l,a,null,_,o));for(a in k)_=k[a],\"children\"==a?d=_:\"dangerouslySetInnerHTML\"==a?v=_:\"value\"==a?g=_:\"checked\"==a?b=_:\"key\"===a||e&&\"function\"!=typeof _||w[a]===_||A(l,a,_,w[a],o);if(v)e||y&&(v.__html===y.__html||v.__html===l.innerHTML)||(l.innerHTML=v.__html),u.__k=[];else if(y&&(l.innerHTML=\"\"),P(l,h(d)?d:[d],u,t,i,o&&\"foreignObject\"!==x,r,f,r?r[0]:t.__k&&m(t,0),e,s),null!=r)for(a=r.length;a--;)null!=r[a]&&p(r[a]);e||(a=\"value\",void 0!==g&&(g!==l[a]||\"progress\"===x&&!g||\"option\"===x&&g!==w[a])&&A(l,a,g,w[a],!1),a=\"checked\",void 0!==b&&b!==l[a]&&A(l,a,b,w[a],!1))}return l}function N(n,u,t){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,t)}}function O(n,u,t){var i,o;if(l.unmount&&l.unmount(n),(i=n.ref)&&(i.current&&i.current!==n.__e||N(i,null,u)),null!=(i=n.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(n){l.__e(n,u)}i.base=i.__P=null,n.__c=void 0}if(i=n.__k)for(o=0;o<i.length;o++)i[o]&&O(i[o],u,t||\"function\"!=typeof n.type);t||null==n.__e||p(n.__e),n.__=n.__e=n.__d=void 0}function q(n,l,u){return this.constructor(n,u)}function B(u,t,i){var o,r,f,e;l.__&&l.__(u,t),r=(o=\"function\"==typeof i)?null:i&&i.__k||t.__k,f=[],e=[],M(t,u=(!o&&i||t).__k=y(g,null,[u]),r||c,c,void 0!==t.ownerSVGElement,!o&&i?[i]:r?null:t.firstChild?n.call(t.childNodes):null,f,!o&&i?i:r?r.__e:t.firstChild,o,e),u.__d=void 0,j(f,u,e)}function E(n,l){B(n,l,E)}function F(l,u,t){var i,o,r,f,e=v({},l.props);for(r in l.type&&l.type.defaultProps&&(f=l.type.defaultProps),u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:e[r]=void 0===u[r]&&void 0!==f?f[r]:u[r];return arguments.length>2&&(e.children=arguments.length>3?n.call(arguments,2):t),d(l.type,e,i||l.key,o||l.ref,null)}function G(n,l){var u={__c:l=\"__cC\"+e++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,t;return this.getChildContext||(u=[],(t={})[l]=this,this.getChildContext=function(){return t},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(function(n){n.__e=!0,x(n)})},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=s.slice,l={__e:function(n,l,u,t){for(var i,o,r;l=l.__;)if((i=l.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(n)),r=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(n,t||{}),r=i.__d),r)return i.__E=i}catch(l){n=l}throw n}},u=0,t=function(n){return null!=n&&null==n.constructor},b.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=v({},this.state),\"function\"==typeof n&&(n=n(v({},u),this.props)),n&&v(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),x(this))},b.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),x(this))},b.prototype.render=g,i=[],r=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,f=function(n,l){return n.__v.__b-l.__v.__b},C.__r=0,e=0;export{b as Component,g as Fragment,F as cloneElement,G as createContext,y as createElement,_ as createRef,y as h,E as hydrate,t as isValidElement,l as options,B as render,H as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=[],e=n,a=e.__b,v=e.__r,l=e.diffed,m=e.__c,s=e.unmount,d=e.__;function h(n,t){e.__h&&e.__h(r,n,o||t),o=0;var u=r.__H||(r.__H={__:[],__h:[]});return n>=u.__.length&&u.__.push({__V:c}),u.__[n]}function p(n){return o=1,y(D,n)}function y(n,u,i){var o=h(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):D(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){var f=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return!!n.__c});if(u.every(function(n){return!n.__N}))return!c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!c||c.call(this,n,t,r))};r.u=!0;var c=r.shouldComponentUpdate,e=r.componentWillUpdate;r.componentWillUpdate=function(n,t,r){if(this.__e){var u=c;c=void 0,f(n,t,r),c=u}e&&e.call(this,n,t,r)},r.shouldComponentUpdate=f}return o.__N||o.__}function _(n,u){var i=h(t++,3);!e.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__H.__h.push(i))}function A(n,u){var i=h(t++,4);!e.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__h.push(i))}function F(n){return o=5,q(function(){return{current:n}},[])}function T(n,t,r){o=6,A(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function q(n,r){var u=h(t++,7);return C(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function x(n,t){return o=8,q(function(){return n},t)}function P(n){var u=r.context[n.__c],i=h(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function V(n,t){e.useDebugValue&&e.useDebugValue(t?t(n):n)}function b(n){var u=h(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function g(){var n=h(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function j(){for(var n;n=f.shift();)if(n.__P&&n.__H)try{n.__H.__h.forEach(z),n.__H.__h.forEach(B),n.__H.__h=[]}catch(t){n.__H.__h=[],e.__e(t,n.__v)}}e.__b=function(n){r=null,a&&a(n)},e.__=function(n,t){t.__k&&t.__k.__m&&(n.__m=t.__k.__m),d&&d(n,t)},e.__r=function(n){v&&v(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=c,n.__N=n.i=void 0})):(i.__h.forEach(z),i.__h.forEach(B),i.__h=[],t=0)),u=r},e.diffed=function(n){l&&l(n);var t=n.__c;t&&t.__H&&(t.__H.__h.length&&(1!==f.push(t)&&i===e.requestAnimationFrame||((i=e.requestAnimationFrame)||w)(j)),t.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==c&&(n.__=n.__V),n.i=void 0,n.__V=c})),u=r=null},e.__c=function(n,t){t.some(function(n){try{n.__h.forEach(z),n.__h=n.__h.filter(function(n){return!n.__||B(n)})}catch(r){t.some(function(n){n.__h&&(n.__h=[])}),t=[],e.__e(r,n.__v)}}),m&&m(n,t)},e.unmount=function(n){s&&s(n);var t,r=n.__c;r&&r.__H&&(r.__H.__.forEach(function(n){try{z(n)}catch(n){t=n}}),r.__H=void 0,t&&e.__e(t,r.__v))};var k=\"function\"==typeof requestAnimationFrame;function w(n){var t,r=function(){clearTimeout(u),k&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);k&&(t=requestAnimationFrame(r))}function z(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function B(n){var t=r;n.__c=n.__(),r=t}function C(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function D(n,t){return\"function\"==typeof t?t(n):t}export{x as useCallback,P as useContext,V as useDebugValue,_ as useEffect,b as useErrorBoundary,g as useId,T as useImperativeHandle,A as useLayoutEffect,q as useMemo,y as useReducer,F as useRef,p as useState};\n//# sourceMappingURL=hooks.module.js.map\n","import { DOCUMENT } from '../../constants';\nimport { setAttributesNS } from '../../util/setAttributesNS';\n\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Sentry Logo\n */\nexport function SentryLogo(): SVGElement {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    DOCUMENT.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: '32',\n    height: '30',\n    viewBox: '0 0 72 66',\n    fill: 'inherit',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    transform: 'translate(11, 11)',\n    d: 'M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z',\n  });\n  svg.appendChild(path);\n\n  return svg;\n}\n","import type { FeedbackInternalOptions } from '@sentry/types';\n// biome-ignore lint/nursery/noUnusedImports: reason\nimport { h } from 'preact'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport type { VNode } from 'preact';\nimport { useMemo } from 'preact/hooks';\nimport { SentryLogo } from './SentryLogo';\n\nexport interface Props {\n  options: FeedbackInternalOptions;\n}\n\nexport function DialogHeader({ options }: Props): VNode {\n  const logoHtml = useMemo(() => ({ __html: SentryLogo().outerHTML }), []);\n\n  return (\n    <h2 class=\"dialog__header\">\n      {options.formTitle}\n      {options.showBranding ? (\n        <a\n          class=\"brand-link\"\n          target=\"_blank\"\n          href=\"https://sentry.io/welcome/\"\n          title=\"Powered by Sentry\"\n          rel=\"noopener noreferrer\"\n          dangerouslySetInnerHTML={logoHtml}\n        />\n      ) : null}\n    </h2>\n  );\n}\n","import type { FeedbackFormData, FeedbackInternalOptions } from '@sentry/types';\n\nexport type Props = Pick<\n  FeedbackInternalOptions,\n  'emailLabel' | 'isEmailRequired' | 'isNameRequired' | 'messageLabel' | 'nameLabel'\n>;\n\n/**\n * Validate that a given feedback submission has the required fields\n */\nexport function getMissingFields(feedback: FeedbackFormData, props: Props): string[] {\n  const emptyFields = [];\n  if (props.isNameRequired && !feedback.name) {\n    emptyFields.push(props.nameLabel);\n  }\n  if (props.isEmailRequired && !feedback.email) {\n    emptyFields.push(props.emailLabel);\n  }\n  if (!feedback.message) {\n    emptyFields.push(props.messageLabel);\n  }\n\n  return emptyFields;\n}\n","import type {\n  FeedbackFormData,\n  FeedbackInternalOptions,\n  FeedbackScreenshotIntegration,\n  SendFeedback,\n} from '@sentry/types';\nimport { logger } from '@sentry/utils';\n// biome-ignore lint/nursery/noUnusedImports: reason\nimport { h } from 'preact'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport type { JSX, VNode } from 'preact';\nimport { useCallback, useState } from 'preact/hooks';\nimport { FEEDBACK_WIDGET_SOURCE } from '../../constants';\nimport { DEBUG_BUILD } from '../../util/debug-build';\nimport { getMissingFields } from '../../util/validate';\n\nexport interface Props extends Pick<FeedbackInternalOptions, 'showEmail' | 'showName'> {\n  options: FeedbackInternalOptions;\n  defaultEmail: string;\n  defaultName: string;\n  onFormClose: () => void;\n  onSubmit: SendFeedback;\n  onSubmitSuccess: (data: FeedbackFormData) => void;\n  onSubmitError: (error: Error) => void;\n  screenshotInput: ReturnType<FeedbackScreenshotIntegration['createInput']> | undefined;\n}\n\nfunction retrieveStringValue(formData: FormData, key: string): string {\n  const value = formData.get(key);\n  if (typeof value === 'string') {\n    return value.trim();\n  }\n  return '';\n}\n\nexport function Form({\n  options,\n  defaultEmail,\n  defaultName,\n\n  onFormClose,\n  onSubmit,\n  onSubmitSuccess,\n  onSubmitError,\n  showEmail,\n  showName,\n  screenshotInput,\n}: Props): VNode {\n  const {\n    tags,\n    addScreenshotButtonLabel,\n    removeScreenshotButtonLabel,\n    cancelButtonLabel,\n    emailLabel,\n    emailPlaceholder,\n    isEmailRequired,\n    isNameRequired,\n    messageLabel,\n    messagePlaceholder,\n    nameLabel,\n    namePlaceholder,\n    submitButtonLabel,\n    isRequiredLabel,\n  } = options;\n  // TODO: set a ref on the form, and whenever an input changes call proceessForm() and setError()\n  const [error, setError] = useState<null | string>(null);\n\n  const [showScreenshotInput, setShowScreenshotInput] = useState(false);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ScreenshotInputComponent: any = screenshotInput && screenshotInput.input;\n\n  const [screenshotError, setScreenshotError] = useState<null | Error>(null);\n  const onScreenshotError = useCallback((error: Error) => {\n    setScreenshotError(error);\n    setShowScreenshotInput(false);\n  }, []);\n\n  const hasAllRequiredFields = useCallback(\n    (data: FeedbackFormData) => {\n      const missingFields = getMissingFields(data, {\n        emailLabel,\n        isEmailRequired,\n        isNameRequired,\n        messageLabel,\n        nameLabel,\n      });\n\n      if (missingFields.length > 0) {\n        setError(`Please enter in the following required fields: ${missingFields.join(', ')}`);\n      } else {\n        setError(null);\n      }\n\n      return missingFields.length === 0;\n    },\n    [emailLabel, isEmailRequired, isNameRequired, messageLabel, nameLabel],\n  );\n\n  const handleSubmit = useCallback(\n    async (e: JSX.TargetedSubmitEvent<HTMLFormElement>) => {\n      try {\n        e.preventDefault();\n        if (!(e.target instanceof HTMLFormElement)) {\n          return;\n        }\n        const formData = new FormData(e.target);\n        const attachment = await (screenshotInput && showScreenshotInput ? screenshotInput.value() : undefined);\n\n        const data: FeedbackFormData = {\n          name: retrieveStringValue(formData, 'name'),\n          email: retrieveStringValue(formData, 'email'),\n          message: retrieveStringValue(formData, 'message'),\n          attachments: attachment ? [attachment] : undefined,\n        };\n\n        if (!hasAllRequiredFields(data)) {\n          return;\n        }\n\n        try {\n          await onSubmit(\n            {\n              name: data.name,\n              email: data.email,\n              message: data.message,\n              source: FEEDBACK_WIDGET_SOURCE,\n              tags,\n            },\n            { attachments: data.attachments },\n          );\n          onSubmitSuccess(data);\n        } catch (error) {\n          DEBUG_BUILD && logger.error(error);\n          setError(error as string);\n          onSubmitError(error as Error);\n        }\n      } catch {\n        // pass\n      }\n    },\n    [screenshotInput && showScreenshotInput, onSubmitSuccess, onSubmitError],\n  );\n\n  return (\n    <form class=\"form\" onSubmit={handleSubmit}>\n      {ScreenshotInputComponent && showScreenshotInput ? (\n        <ScreenshotInputComponent onError={onScreenshotError} />\n      ) : null}\n\n      <div class=\"form__right\" data-sentry-feedback={true}>\n        <div class=\"form__top\">\n          {error ? <div class=\"form__error-container\">{error}</div> : null}\n\n          {showName ? (\n            <label for=\"name\" class=\"form__label\">\n              <LabelText label={nameLabel} isRequiredLabel={isRequiredLabel} isRequired={isNameRequired} />\n              <input\n                class=\"form__input\"\n                defaultValue={defaultName}\n                id=\"name\"\n                name=\"name\"\n                placeholder={namePlaceholder}\n                required={isNameRequired}\n                type=\"text\"\n              />\n            </label>\n          ) : (\n            <input aria-hidden value={defaultName} name=\"name\" type=\"hidden\" />\n          )}\n\n          {showEmail ? (\n            <label for=\"email\" class=\"form__label\">\n              <LabelText label={emailLabel} isRequiredLabel={isRequiredLabel} isRequired={isEmailRequired} />\n              <input\n                class=\"form__input\"\n                defaultValue={defaultEmail}\n                id=\"email\"\n                name=\"email\"\n                placeholder={emailPlaceholder}\n                required={isEmailRequired}\n                type=\"email\"\n              ></input>\n            </label>\n          ) : (\n            <input aria-hidden value={defaultEmail} name=\"email\" type=\"hidden\" />\n          )}\n\n          <label for=\"message\" class=\"form__label\">\n            <LabelText label={messageLabel} isRequiredLabel={isRequiredLabel} isRequired />\n            <textarea\n              autoFocus\n              class=\"form__input form__input--textarea\"\n              id=\"message\"\n              name=\"message\"\n              placeholder={messagePlaceholder}\n              required={true}\n              rows={5}\n            />\n          </label>\n\n          {ScreenshotInputComponent ? (\n            <label for=\"screenshot\" class=\"form__label\">\n              <button\n                class=\"btn btn--default\"\n                type=\"button\"\n                onClick={() => {\n                  setScreenshotError(null);\n                  setShowScreenshotInput(prev => !prev);\n                }}\n              >\n                {showScreenshotInput ? removeScreenshotButtonLabel : addScreenshotButtonLabel}\n              </button>\n              {screenshotError ? <div class=\"form__error-container\">{screenshotError.message}</div> : null}\n            </label>\n          ) : null}\n        </div>\n        <div class=\"btn-group\">\n          <button class=\"btn btn--primary\" type=\"submit\">\n            {submitButtonLabel}\n          </button>\n          <button class=\"btn btn--default\" type=\"button\" onClick={onFormClose}>\n            {cancelButtonLabel}\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nfunction LabelText({\n  label,\n  isRequired,\n  isRequiredLabel,\n}: {\n  label: string;\n  isRequired: boolean;\n  isRequiredLabel: string;\n}): VNode {\n  return (\n    <span class=\"form__label__text\">\n      {label}\n      {isRequired && <span class=\"form__label__text--required\">{isRequiredLabel}</span>}\n    </span>\n  );\n}\n","import { WINDOW } from '../../constants';\nimport { setAttributesNS } from '../../util/setAttributesNS';\n\nconst WIDTH = 16;\nconst HEIGHT = 17;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Success Icon (checkmark)\n */\nexport function SuccessIcon(): SVGElement {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: `${WIDTH}`,\n    height: `${HEIGHT}`,\n    viewBox: `0 0 ${WIDTH} ${HEIGHT}`,\n    fill: 'inherit',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_156)',\n  });\n\n  const path2 = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M3.55544 15.1518C4.87103 16.0308 6.41775 16.5 8 16.5C10.1217 16.5 12.1566 15.6571 13.6569 14.1569C15.1571 12.6566 16 10.6217 16 8.5C16 6.91775 15.5308 5.37103 14.6518 4.05544C13.7727 2.73985 12.5233 1.71447 11.0615 1.10897C9.59966 0.503466 7.99113 0.34504 6.43928 0.653721C4.88743 0.962403 3.46197 1.72433 2.34315 2.84315C1.22433 3.96197 0.462403 5.38743 0.153721 6.93928C-0.15496 8.49113 0.00346625 10.0997 0.608967 11.5615C1.21447 13.0233 2.23985 14.2727 3.55544 15.1518ZM4.40546 3.1204C5.46945 2.40946 6.72036 2.03 8 2.03C9.71595 2.03 11.3616 2.71166 12.575 3.92502C13.7883 5.13838 14.47 6.78405 14.47 8.5C14.47 9.77965 14.0905 11.0306 13.3796 12.0945C12.6687 13.1585 11.6582 13.9878 10.476 14.4775C9.29373 14.9672 7.99283 15.0953 6.73777 14.8457C5.48271 14.596 4.32987 13.9798 3.42502 13.075C2.52018 12.1701 1.90397 11.0173 1.65432 9.76224C1.40468 8.50718 1.5328 7.20628 2.0225 6.02404C2.5122 4.8418 3.34148 3.83133 4.40546 3.1204Z',\n  });\n  const path = setAttributesNS(createElementNS('path'), {\n    d: 'M6.68775 12.4297C6.78586 12.4745 6.89218 12.4984 7 12.5C7.11275 12.4955 7.22315 12.4664 7.32337 12.4145C7.4236 12.3627 7.51121 12.2894 7.58 12.2L12 5.63999C12.0848 5.47724 12.1071 5.28902 12.0625 5.11098C12.0178 4.93294 11.9095 4.77744 11.7579 4.67392C11.6064 4.57041 11.4221 4.52608 11.24 4.54931C11.0579 4.57254 10.8907 4.66173 10.77 4.79999L6.88 10.57L5.13 8.56999C5.06508 8.49566 4.98613 8.43488 4.89768 8.39111C4.80922 8.34735 4.713 8.32148 4.61453 8.31498C4.51605 8.30847 4.41727 8.32147 4.32382 8.35322C4.23038 8.38497 4.14413 8.43484 4.07 8.49999C3.92511 8.63217 3.83692 8.81523 3.82387 9.01092C3.81083 9.2066 3.87393 9.39976 4 9.54999L6.43 12.24C6.50187 12.3204 6.58964 12.385 6.68775 12.4297Z',\n  });\n\n  svg.appendChild(g).append(path, path2);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_156',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${WIDTH}`,\n    height: `${WIDTH}`,\n    fill: 'white',\n    transform: 'translate(0 0.5)',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return svg;\n}\n","import type { FeedbackFormData, FeedbackInternalOptions } from '@sentry/types';\n// biome-ignore lint/nursery/noUnusedImports: reason\nimport { Fragment, h } from 'preact'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport type { VNode } from 'preact';\nimport { useCallback, useMemo, useState } from 'preact/hooks';\n\nimport { SUCCESS_MESSAGE_TIMEOUT } from '../../constants';\nimport { DialogHeader } from './DialogHeader';\nimport type { Props as HeaderProps } from './DialogHeader';\nimport type { Props as FormProps } from './Form';\nimport { Form } from './Form';\nimport { SuccessIcon } from './SuccessIcon';\n\ninterface Props extends HeaderProps, FormProps {\n  onFormSubmitted: () => void;\n  open: boolean;\n  options: FeedbackInternalOptions;\n}\n\nexport function Dialog({ open, onFormSubmitted, ...props }: Props): VNode {\n  const options = props.options;\n  const successIconHtml = useMemo(() => ({ __html: SuccessIcon().outerHTML }), []);\n\n  const [timeoutId, setTimeoutId] = useState<NodeJS.Timeout | null>(null);\n\n  const handleOnSuccessClick = useCallback(() => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      setTimeoutId(null);\n    }\n    onFormSubmitted();\n  }, [timeoutId]);\n\n  const onSubmitSuccess = useCallback(\n    (data: FeedbackFormData) => {\n      props.onSubmitSuccess(data);\n      setTimeoutId(\n        setTimeout(() => {\n          onFormSubmitted();\n          setTimeoutId(null);\n        }, SUCCESS_MESSAGE_TIMEOUT),\n      );\n    },\n    [onFormSubmitted],\n  );\n\n  return (\n    <Fragment>\n      {timeoutId ? (\n        <div class=\"success__position\" onClick={handleOnSuccessClick}>\n          <div class=\"success__content\">\n            {options.successMessageText}\n            <span class=\"success__icon\" dangerouslySetInnerHTML={successIconHtml} />\n          </div>\n        </div>\n      ) : (\n        <dialog class=\"dialog\" onClick={options.onFormClose} open={open}>\n          <div class=\"dialog__position\">\n            <div\n              class=\"dialog__content\"\n              onClick={e => {\n                // Stop event propagation so clicks on content modal do not propagate to dialog (which will close dialog)\n                e.stopPropagation();\n              }}\n            >\n              <DialogHeader options={options} />\n              <Form {...props} onSubmitSuccess={onSubmitSuccess} />\n            </div>\n          </div>\n        </dialog>\n      )}\n    </Fragment>\n  );\n}\n","import { DOCUMENT } from '../../constants';\n\nconst DIALOG = `\n.dialog {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: 0;\n  inset: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  height: 100vh;\n  width: 100vw;\n\n  color: var(--dialog-color, var(--foreground));\n  fill: var(--dialog-color, var(--foreground));\n  line-height: 1.75em;\n\n  background-color: rgba(0, 0, 0, 0.05);\n  border: none;\n  inset: 0;\n  opacity: 1;\n  transition: opacity 0.2s ease-in-out;\n}\n\n.dialog__position {\n  position: fixed;\n  z-index: var(--z-index);\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  display: flex;\n  max-height: calc(100vh - (2 * var(--page-margin)));\n}\n@media (max-width: 600px) {\n  .dialog__position {\n    inset: var(--page-margin);\n    padding: 0;\n  }\n}\n\n.dialog__position:has(.editor) {\n  inset: var(--page-margin);\n  padding: 0;\n}\n\n.dialog:not([open]) {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n.dialog:not([open]) .dialog__content {\n  transform: translate(0, -16px) scale(0.98);\n}\n\n.dialog__content {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: var(--dialog-padding, 24px);\n  max-width: 100%;\n  width: 100%;\n  max-height: 100%;\n  overflow: auto;\n\n  background: var(--dialog-background, var(--background));\n  border-radius: var(--dialog-border-radius, 20px);\n  border: var(--dialog-border, var(--border));\n  box-shadow: var(--dialog-box-shadow, var(--box-shadow));\n  transform: translate(0, 0) scale(1);\n  transition: transform 0.2s ease-in-out;\n}\n`;\n\nconst DIALOG_HEADER = `\n.dialog__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: var(--dialog-header-weight, 600);\n  margin: 0;\n}\n\n.brand-link {\n  display: inline-flex;\n}\n.brand-link:focus-visible {\n  outline: var(--outline);\n}\n`;\n\nconst FORM = `\n.form {\n  display: flex;\n  overflow: auto;\n  flex-direction: row;\n  gap: 16px;\n  flex: 1 0;\n}\n\n.form__right {\n  flex: 0 0 var(--form-width, 272px);\n  width: var(--form-width, 272px);\n  display: flex;\n  overflow: auto;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n@media (max-width: 600px) {\n  .form__right {\n    width: auto;\n  }\n}\n\n.form__top {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form__error-container {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n\n.form__label {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin: 0px;\n}\n\n.form__label__text {\n  display: flex;\n  gap: 4px;\n  align-items: center;\n}\n\n.form__label__text--required {\n  font-size: 0.85em;\n}\n\n.form__input {\n  font-family: inherit;\n  line-height: inherit;\n  background: transparent;\n  box-sizing: border-box;\n  border: var(--input-border, var(--border));\n  border-radius: var(--input-border-radius, 6px);\n  color: var(--input-color, inherit);\n  fill: var(--input-color, inherit);\n  font-size: var(--input-font-size, inherit);\n  font-weight: var(--input-font-weight, 500);\n  padding: 6px 12px;\n}\n\n.form__input::placeholder {\n  opacity: 0.65;\n  color: var(--input-placeholder-color, inherit);\n  filter: var(--interactive-filter);\n}\n\n.form__input:focus-visible {\n  outline: var(--input-focus-outline, var(--outline));\n}\n\n.form__input--textarea {\n  font-family: inherit;\n  resize: vertical;\n}\n\n.error {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n`;\n\nconst BUTTON = `\n.btn-group {\n  display: grid;\n  gap: 8px;\n}\n\n.btn {\n  line-height: inherit;\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--button-font-size, inherit);\n  font-weight: var(--button-font-weight, 600);\n  padding: var(--button-padding, 6px 16px);\n}\n.btn[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.btn--primary {\n  color: var(--button-primary-color, var(--accent-foreground));\n  fill: var(--button-primary-color, var(--accent-foreground));\n  background: var(--button-primary-background, var(--accent-background));\n  border: var(--button-primary-border, var(--border));\n  border-radius: var(--button-primary-border-radius, 6px);\n  font-weight: var(--button-primary-font-weight, 500);\n}\n.btn--primary:hover {\n  color: var(--button-primary-hover-color, var(--accent-foreground));\n  fill: var(--button-primary-hover-color, var(--accent-foreground));\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n}\n.btn--primary:focus-visible {\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n  outline: var(--button-primary-focus-outline, var(--outline));\n}\n\n.btn--default {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-background, var(--background));\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  font-weight: var(--button-font-weight, 500);\n}\n.btn--default:hover {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n.btn--default:focus-visible {\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n  outline: var(--button-focus-outline, var(--outline));\n}\n`;\n\nconst SUCCESS = `\n.success__position {\n  position: fixed;\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  z-index: var(--z-index);\n}\n.success__content {\n  background: var(--success-background, var(--background));\n  border: var(--success-border, var(--border));\n  border-radius: var(--success-border-radius, 1.7em/50%);\n  box-shadow: var(--success-box-shadow, var(--box-shadow));\n  font-weight: var(--success-font-weight, 600);\n  color: var(--success-color);\n  fill: var(--success-color);\n  padding: 12px 24px;\n  line-height: 1.75em;\n\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: 6px;\n  cursor: default;\n}\n\n.success__icon {\n  display: flex;\n}\n`;\n\n/**\n * Creates <style> element for widget dialog\n */\nexport function createDialogStyles(): HTMLStyleElement {\n  const style = DOCUMENT.createElement('style');\n\n  style.textContent = `\n:host {\n  --dialog-inset: var(--inset);\n}\n\n${DIALOG}\n${DIALOG_HEADER}\n${FORM}\n${BUTTON}\n${SUCCESS}\n`;\n\n  return style;\n}\n","import { getCurrentScope, getGlobalScope, getIsolationScope } from '@sentry/core';\nimport type { FeedbackFormData, FeedbackModalIntegration, IntegrationFn, User } from '@sentry/types';\nimport { h, render } from 'preact';\nimport * as hooks from 'preact/hooks';\nimport { DOCUMENT } from '../constants';\nimport { Dialog } from './components/Dialog';\nimport { createDialogStyles } from './components/Dialog.css';\n\nfunction getUser(): User | undefined {\n  const currentUser = getCurrentScope().getUser();\n  const isolationUser = getIsolationScope().getUser();\n  const globalUser = getGlobalScope().getUser();\n  if (currentUser && Object.keys(currentUser).length) {\n    return currentUser;\n  }\n  if (isolationUser && Object.keys(isolationUser).length) {\n    return isolationUser;\n  }\n  return globalUser;\n}\n\nexport const feedbackModalIntegration = ((): FeedbackModalIntegration => {\n  return {\n    name: 'FeedbackModal',\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce() {},\n    createDialog: ({ options, screenshotIntegration, sendFeedback, shadow }) => {\n      const shadowRoot = shadow as unknown as ShadowRoot;\n      const userKey = options.useSentryUser;\n      const user = getUser();\n\n      const el = DOCUMENT.createElement('div');\n      const style = createDialogStyles();\n\n      let originalOverflow = '';\n      const dialog: ReturnType<FeedbackModalIntegration['createDialog']> = {\n        get el() {\n          return el;\n        },\n        appendToDom(): void {\n          if (!shadowRoot.contains(style) && !shadowRoot.contains(el)) {\n            shadowRoot.appendChild(style);\n            shadowRoot.appendChild(el);\n          }\n        },\n        removeFromDom(): void {\n          shadowRoot.removeChild(el);\n          shadowRoot.removeChild(style);\n          DOCUMENT.body.style.overflow = originalOverflow;\n        },\n        open() {\n          renderContent(true);\n          options.onFormOpen && options.onFormOpen();\n          originalOverflow = DOCUMENT.body.style.overflow;\n          DOCUMENT.body.style.overflow = 'hidden';\n        },\n        close() {\n          renderContent(false);\n          DOCUMENT.body.style.overflow = originalOverflow;\n        },\n      };\n\n      const screenshotInput = screenshotIntegration && screenshotIntegration.createInput({ h, hooks, dialog, options });\n\n      const renderContent = (open: boolean): void => {\n        render(\n          <Dialog\n            options={options}\n            screenshotInput={screenshotInput}\n            showName={options.showName || options.isNameRequired}\n            showEmail={options.showEmail || options.isEmailRequired}\n            defaultName={(userKey && user && user[userKey.name]) || ''}\n            defaultEmail={(userKey && user && user[userKey.email]) || ''}\n            onFormClose={() => {\n              renderContent(false);\n              options.onFormClose && options.onFormClose();\n            }}\n            onSubmit={sendFeedback}\n            onSubmitSuccess={(data: FeedbackFormData) => {\n              renderContent(false);\n              options.onSubmitSuccess && options.onSubmitSuccess(data);\n            }}\n            onSubmitError={(error: Error) => {\n              options.onSubmitError && options.onSubmitError(error);\n            }}\n            onFormSubmitted={() => {\n              options.onFormSubmitted && options.onFormSubmitted();\n            }}\n            open={open}\n          />,\n          el,\n        );\n      };\n\n      return dialog;\n    },\n  };\n}) satisfies IntegrationFn;\n","import type { VNode, h as hType } from 'preact';\n\ninterface FactoryParams {\n  h: typeof hType;\n}\n\nexport default function CropCornerFactory({\n  h, // eslint-disable-line @typescript-eslint/no-unused-vars\n}: FactoryParams) {\n  return function CropCorner({\n    top,\n    left,\n    corner,\n    onGrabButton,\n  }: {\n    top: number;\n    left: number;\n    corner: string;\n    onGrabButton: (e: Event, corner: string) => void;\n  }): VNode {\n    return (\n      <button\n        class={`editor__crop-corner editor__crop-corner--${corner} `}\n        style={{\n          top: top,\n          left: left,\n        }}\n        onMouseDown={e => {\n          e.preventDefault();\n          onGrabButton(e, corner);\n        }}\n        onClick={e => {\n          e.preventDefault();\n        }}\n      ></button>\n    );\n  };\n}\n","import { DOCUMENT } from '../../constants';\n\n/**\n * Creates <style> element for widget dialog\n */\nexport function createScreenshotInputStyles(): HTMLStyleElement {\n  const style = DOCUMENT.createElement('style');\n\n  const surface200 = '#1A141F';\n  const gray100 = '#302735';\n\n  style.textContent = `\n.editor {\n  padding: 10px;\n  padding-top: 65px;\n  padding-bottom: 65px;\n  flex-grow: 1;\n\n  background-color: ${surface200};\n  background-image: repeating-linear-gradient(\n      -145deg,\n      transparent,\n      transparent 8px,\n      ${surface200} 8px,\n      ${surface200} 11px\n    ),\n    repeating-linear-gradient(\n      -45deg,\n      transparent,\n      transparent 15px,\n      ${gray100} 15px,\n      ${gray100} 16px\n    );\n}\n\n.editor__canvas-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.editor__canvas-container canvas {\n  object-fit: contain;\n  position: relative;\n}\n\n.editor__crop-btn-group {\n  padding: 8px;\n  gap: 8px;\n  border-radius: var(--menu-border-radius, 6px);\n  background: var(--button-primary-background, var(--background));\n  width: 175px;\n  position: absolute;\n}\n\n.editor__crop-corner {\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  background: none;\n  border: 3px solid #ffffff;\n}\n\n.editor__crop-corner--top-left {\n  cursor: nwse-resize;\n  border-right: none;\n  border-bottom: none;\n}\n.editor__crop-corner--top-right {\n  cursor: nesw-resize;\n  border-left: none;\n  border-bottom: none;\n}\n.editor__crop-corner--bottom-left {\n  cursor: nesw-resize;\n  border-right: none;\n  border-top: none;\n}\n.editor__crop-corner--bottom-right {\n  cursor: nwse-resize;\n  border-left: none;\n  border-top: none;\n}\n`;\n\n  return style;\n}\n","import type * as Hooks from 'preact/hooks';\nimport { DOCUMENT, NAVIGATOR, WINDOW } from '../../constants';\n\ninterface FactoryParams {\n  hooks: typeof Hooks;\n}\n\ninterface Props {\n  onBeforeScreenshot: () => void;\n  onScreenshot: (imageSource: HTMLVideoElement) => void;\n  onAfterScreenshot: () => void;\n  onError: (error: Error) => void;\n}\n\ntype UseTakeScreenshot = ({ onBeforeScreenshot, onScreenshot, onAfterScreenshot, onError }: Props) => void;\n\nexport function useTakeScreenshotFactory({ hooks }: FactoryParams): UseTakeScreenshot {\n  return function useTakeScreenshot({ onBeforeScreenshot, onScreenshot, onAfterScreenshot, onError }: Props) {\n    hooks.useEffect(() => {\n      const takeScreenshot = async (): Promise<void> => {\n        onBeforeScreenshot();\n        const stream = await NAVIGATOR.mediaDevices.getDisplayMedia({\n          video: {\n            width: WINDOW.innerWidth * WINDOW.devicePixelRatio,\n            height: WINDOW.innerHeight * WINDOW.devicePixelRatio,\n          },\n          audio: false,\n          // @ts-expect-error experimental flags: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia#prefercurrenttab\n          monitorTypeSurfaces: 'exclude',\n          preferCurrentTab: true,\n          selfBrowserSurface: 'include',\n          surfaceSwitching: 'exclude',\n        });\n\n        const video = DOCUMENT.createElement('video');\n        await new Promise<void>((resolve, reject) => {\n          video.srcObject = stream;\n          video.onloadedmetadata = () => {\n            onScreenshot(video);\n            stream.getTracks().forEach(track => track.stop());\n            resolve();\n          };\n          video.play().catch(reject);\n        });\n        onAfterScreenshot();\n      };\n\n      takeScreenshot().catch(onError);\n    }, []);\n  };\n}\n","/* eslint-disable max-lines */\nimport type { FeedbackInternalOptions, FeedbackModalIntegration } from '@sentry/types';\nimport type { ComponentType, VNode, h as hType } from 'preact';\n// biome-ignore lint/nursery/noUnusedImports: reason\nimport { h } from 'preact'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport type * as Hooks from 'preact/hooks';\nimport { DOCUMENT, WINDOW } from '../../constants';\nimport CropCornerFactory from './CropCorner';\nimport { createScreenshotInputStyles } from './ScreenshotInput.css';\nimport { useTakeScreenshotFactory } from './useTakeScreenshot';\n\nconst CROP_BUTTON_SIZE = 30;\nconst CROP_BUTTON_BORDER = 3;\nconst CROP_BUTTON_OFFSET = CROP_BUTTON_SIZE + CROP_BUTTON_BORDER;\nconst DPI = WINDOW.devicePixelRatio;\n\ninterface FactoryParams {\n  h: typeof hType;\n  hooks: typeof Hooks;\n  imageBuffer: HTMLCanvasElement;\n  dialog: ReturnType<FeedbackModalIntegration['createDialog']>;\n  options: FeedbackInternalOptions;\n}\n\ninterface Props {\n  onError: (error: Error) => void;\n}\n\ninterface Box {\n  startX: number;\n  startY: number;\n  endX: number;\n  endY: number;\n}\n\ninterface Rect {\n  x: number;\n  y: number;\n  height: number;\n  width: number;\n}\n\nconst constructRect = (box: Box): Rect => {\n  return {\n    x: Math.min(box.startX, box.endX),\n    y: Math.min(box.startY, box.endY),\n    width: Math.abs(box.startX - box.endX),\n    height: Math.abs(box.startY - box.endY),\n  };\n};\n\nconst getContainedSize = (img: HTMLCanvasElement): Box => {\n  const imgClientHeight = img.clientHeight;\n  const imgClientWidth = img.clientWidth;\n  const ratio = img.width / img.height;\n  let width = imgClientHeight * ratio;\n  let height = imgClientHeight;\n  if (width > imgClientWidth) {\n    width = imgClientWidth;\n    height = imgClientWidth / ratio;\n  }\n  const x = (imgClientWidth - width) / 2;\n  const y = (imgClientHeight - height) / 2;\n  return { startX: x, startY: y, endX: width + x, endY: height + y };\n};\n\nexport function ScreenshotEditorFactory({\n  h,\n  hooks,\n  imageBuffer,\n  dialog,\n  options,\n}: FactoryParams): ComponentType<Props> {\n  const useTakeScreenshot = useTakeScreenshotFactory({ hooks });\n\n  return function ScreenshotEditor({ onError }: Props): VNode {\n    const styles = hooks.useMemo(() => ({ __html: createScreenshotInputStyles().innerText }), []);\n    const CropCorner = CropCornerFactory({ h });\n\n    const canvasContainerRef = hooks.useRef<HTMLDivElement>(null);\n    const cropContainerRef = hooks.useRef<HTMLDivElement>(null);\n    const croppingRef = hooks.useRef<HTMLCanvasElement>(null);\n    const [croppingRect, setCroppingRect] = hooks.useState<Box>({ startX: 0, startY: 0, endX: 0, endY: 0 });\n    const [confirmCrop, setConfirmCrop] = hooks.useState(false);\n\n    hooks.useEffect(() => {\n      WINDOW.addEventListener('resize', resizeCropper, false);\n    }, []);\n\n    function resizeCropper(): void {\n      const cropper = croppingRef.current;\n      const imageDimensions = constructRect(getContainedSize(imageBuffer));\n      if (cropper) {\n        cropper.width = imageDimensions.width * DPI;\n        cropper.height = imageDimensions.height * DPI;\n        cropper.style.width = `${imageDimensions.width}px`;\n        cropper.style.height = `${imageDimensions.height}px`;\n        const ctx = cropper.getContext('2d');\n        if (ctx) {\n          ctx.scale(DPI, DPI);\n        }\n      }\n\n      const cropButton = cropContainerRef.current;\n      if (cropButton) {\n        cropButton.style.width = `${imageDimensions.width}px`;\n        cropButton.style.height = `${imageDimensions.height}px`;\n      }\n\n      setCroppingRect({ startX: 0, startY: 0, endX: imageDimensions.width, endY: imageDimensions.height });\n    }\n\n    hooks.useEffect(() => {\n      const cropper = croppingRef.current;\n      if (!cropper) {\n        return;\n      }\n\n      const ctx = cropper.getContext('2d');\n      if (!ctx) {\n        return;\n      }\n\n      const imageDimensions = constructRect(getContainedSize(imageBuffer));\n      const croppingBox = constructRect(croppingRect);\n      ctx.clearRect(0, 0, imageDimensions.width, imageDimensions.height);\n\n      // draw gray overlay around the selection\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n      ctx.fillRect(0, 0, imageDimensions.width, imageDimensions.height);\n      ctx.clearRect(croppingBox.x, croppingBox.y, croppingBox.width, croppingBox.height);\n\n      // draw selection border\n      ctx.strokeStyle = '#ffffff';\n      ctx.lineWidth = 3;\n      ctx.strokeRect(croppingBox.x + 1, croppingBox.y + 1, croppingBox.width - 2, croppingBox.height - 2);\n      ctx.strokeStyle = '#000000';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(croppingBox.x + 3, croppingBox.y + 3, croppingBox.width - 6, croppingBox.height - 6);\n    }, [croppingRect]);\n\n    function onGrabButton(e: Event, corner: string): void {\n      setConfirmCrop(false);\n      const handleMouseMove = makeHandleMouseMove(corner);\n      const handleMouseUp = (): void => {\n        DOCUMENT.removeEventListener('mousemove', handleMouseMove);\n        DOCUMENT.removeEventListener('mouseup', handleMouseUp);\n        setConfirmCrop(true);\n      };\n\n      DOCUMENT.addEventListener('mouseup', handleMouseUp);\n      DOCUMENT.addEventListener('mousemove', handleMouseMove);\n    }\n\n    const makeHandleMouseMove = hooks.useCallback((corner: string) => {\n      return function (e: MouseEvent) {\n        if (!croppingRef.current) {\n          return;\n        }\n        const cropCanvas = croppingRef.current;\n        const cropBoundingRect = cropCanvas.getBoundingClientRect();\n        const mouseX = e.clientX - cropBoundingRect.x;\n        const mouseY = e.clientY - cropBoundingRect.y;\n        switch (corner) {\n          case 'top-left':\n            setCroppingRect(prev => ({\n              ...prev,\n              startX: Math.min(Math.max(0, mouseX), prev.endX - CROP_BUTTON_OFFSET),\n              startY: Math.min(Math.max(0, mouseY), prev.endY - CROP_BUTTON_OFFSET),\n            }));\n            break;\n          case 'top-right':\n            setCroppingRect(prev => ({\n              ...prev,\n              endX: Math.max(Math.min(mouseX, cropCanvas.width / DPI), prev.startX + CROP_BUTTON_OFFSET),\n              startY: Math.min(Math.max(0, mouseY), prev.endY - CROP_BUTTON_OFFSET),\n            }));\n            break;\n          case 'bottom-left':\n            setCroppingRect(prev => ({\n              ...prev,\n              startX: Math.min(Math.max(0, mouseX), prev.endX - CROP_BUTTON_OFFSET),\n              endY: Math.max(Math.min(mouseY, cropCanvas.height / DPI), prev.startY + CROP_BUTTON_OFFSET),\n            }));\n            break;\n          case 'bottom-right':\n            setCroppingRect(prev => ({\n              ...prev,\n              endX: Math.max(Math.min(mouseX, cropCanvas.width / DPI), prev.startX + CROP_BUTTON_OFFSET),\n              endY: Math.max(Math.min(mouseY, cropCanvas.height / DPI), prev.startY + CROP_BUTTON_OFFSET),\n            }));\n            break;\n        }\n      };\n    }, []);\n\n    function submit(): void {\n      const cutoutCanvas = DOCUMENT.createElement('canvas');\n      const imageBox = constructRect(getContainedSize(imageBuffer));\n      const croppingBox = constructRect(croppingRect);\n      cutoutCanvas.width = croppingBox.width * DPI;\n      cutoutCanvas.height = croppingBox.height * DPI;\n\n      const cutoutCtx = cutoutCanvas.getContext('2d');\n      if (cutoutCtx && imageBuffer) {\n        cutoutCtx.drawImage(\n          imageBuffer,\n          (croppingBox.x / imageBox.width) * imageBuffer.width,\n          (croppingBox.y / imageBox.height) * imageBuffer.height,\n          (croppingBox.width / imageBox.width) * imageBuffer.width,\n          (croppingBox.height / imageBox.height) * imageBuffer.height,\n          0,\n          0,\n          cutoutCanvas.width,\n          cutoutCanvas.height,\n        );\n      }\n\n      const ctx = imageBuffer.getContext('2d');\n      if (ctx) {\n        ctx.clearRect(0, 0, imageBuffer.width, imageBuffer.height);\n        imageBuffer.width = cutoutCanvas.width;\n        imageBuffer.height = cutoutCanvas.height;\n        imageBuffer.style.width = `${croppingBox.width}px`;\n        imageBuffer.style.height = `${croppingBox.height}px`;\n        ctx.drawImage(cutoutCanvas, 0, 0);\n        resizeCropper();\n      }\n    }\n\n    useTakeScreenshot({\n      onBeforeScreenshot: hooks.useCallback(() => {\n        (dialog.el as HTMLElement).style.display = 'none';\n      }, []),\n      onScreenshot: hooks.useCallback(\n        (imageSource: HTMLVideoElement) => {\n          const context = imageBuffer.getContext('2d');\n          if (!context) {\n            throw new Error('Could not get canvas context');\n          }\n          imageBuffer.width = imageSource.videoWidth;\n          imageBuffer.height = imageSource.videoHeight;\n          imageBuffer.style.width = '100%';\n          imageBuffer.style.height = '100%';\n          context.drawImage(imageSource, 0, 0);\n        },\n        [imageBuffer],\n      ),\n      onAfterScreenshot: hooks.useCallback(() => {\n        (dialog.el as HTMLElement).style.display = 'block';\n        const container = canvasContainerRef.current;\n        container && container.appendChild(imageBuffer);\n        resizeCropper();\n      }, []),\n      onError: hooks.useCallback(error => {\n        (dialog.el as HTMLElement).style.display = 'block';\n        onError(error);\n      }, []),\n    });\n\n    return (\n      <div class=\"editor\">\n        <style dangerouslySetInnerHTML={styles} />\n        <div class=\"editor__canvas-container\" ref={canvasContainerRef}>\n          <div class=\"editor__crop-container\" style={{ position: 'absolute', zIndex: 1 }} ref={cropContainerRef}>\n            <canvas style={{ position: 'absolute' }} ref={croppingRef}></canvas>\n            <CropCorner\n              left={croppingRect.startX - CROP_BUTTON_BORDER}\n              top={croppingRect.startY - CROP_BUTTON_BORDER}\n              onGrabButton={onGrabButton}\n              corner=\"top-left\"\n            ></CropCorner>\n            <CropCorner\n              left={croppingRect.endX - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER}\n              top={croppingRect.startY - CROP_BUTTON_BORDER}\n              onGrabButton={onGrabButton}\n              corner=\"top-right\"\n            ></CropCorner>\n            <CropCorner\n              left={croppingRect.startX - CROP_BUTTON_BORDER}\n              top={croppingRect.endY - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER}\n              onGrabButton={onGrabButton}\n              corner=\"bottom-left\"\n            ></CropCorner>\n            <CropCorner\n              left={croppingRect.endX - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER}\n              top={croppingRect.endY - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER}\n              onGrabButton={onGrabButton}\n              corner=\"bottom-right\"\n            ></CropCorner>\n            <div\n              style={{\n                left: Math.max(0, croppingRect.endX - 191),\n                top: Math.max(0, croppingRect.endY + 8),\n                display: confirmCrop ? 'flex' : 'none',\n              }}\n              class=\"editor__crop-btn-group\"\n            >\n              <button\n                onClick={e => {\n                  e.preventDefault();\n                  if (croppingRef.current) {\n                    setCroppingRect({\n                      startX: 0,\n                      startY: 0,\n                      endX: croppingRef.current.width / DPI,\n                      endY: croppingRef.current.height / DPI,\n                    });\n                  }\n                  setConfirmCrop(false);\n                }}\n                class=\"btn btn--default\"\n              >\n                {options.cancelButtonLabel}\n              </button>\n              <button\n                onClick={e => {\n                  e.preventDefault();\n                  submit();\n                  setConfirmCrop(false);\n                }}\n                class=\"btn btn--primary\"\n              >\n                {options.confirmButtonLabel}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n","import type { FeedbackScreenshotIntegration, IntegrationFn } from '@sentry/types';\nimport type { Attachment } from '@sentry/types';\nimport type { h as hType } from 'preact';\nimport type * as Hooks from 'preact/hooks';\nimport { DOCUMENT } from '../constants';\nimport { ScreenshotEditorFactory } from './components/ScreenshotEditor';\n\nexport const feedbackScreenshotIntegration = ((): FeedbackScreenshotIntegration => {\n  return {\n    name: 'FeedbackScreenshot',\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce() {},\n    createInput: ({ h, hooks, dialog, options }) => {\n      const imageBuffer = DOCUMENT.createElement('canvas');\n\n      return {\n        input: ScreenshotEditorFactory({\n          h: h as typeof hType,\n          hooks: hooks as typeof Hooks,\n          imageBuffer,\n          dialog,\n          options,\n        }) as any, // eslint-disable-line @typescript-eslint/no-explicit-any\n\n        value: async () => {\n          const blob = await new Promise<Parameters<BlobCallback>[0]>(resolve => {\n            imageBuffer.toBlob(resolve, 'image/png');\n          });\n          if (blob) {\n            const data = new Uint8Array(await blob.arrayBuffer());\n            const attachment: Attachment = {\n              data,\n              filename: 'screenshot.png',\n              contentType: 'application/png',\n              // attachmentType?: string;\n            };\n            return attachment;\n          }\n          return undefined;\n        },\n      };\n    },\n  };\n}) satisfies IntegrationFn;\n","import { buildFeedbackIntegration } from '@sentry-internal/feedback';\nimport { lazyLoadIntegration } from './utils/lazyLoadIntegration';\n\n/**\n * An integration to add user feedback to your application,\n * while loading most of the code lazily only when it's needed.\n */\nexport const feedbackAsyncIntegration = buildFeedbackIntegration({\n  lazyLoadIntegration,\n});\n","import {\n  buildFeedbackIntegration,\n  feedbackModalIntegration,\n  feedbackScreenshotIntegration,\n} from '@sentry-internal/feedback';\nimport { lazyLoadIntegration } from './utils/lazyLoadIntegration';\n\n/** Add a widget to capture user feedback to your application. */\nexport const feedbackSyncIntegration = buildFeedbackIntegration({\n  lazyLoadIntegration,\n  getModalIntegration: () => feedbackModalIntegration,\n  getScreenshotIntegration: () => feedbackScreenshotIntegration,\n});\n","import { BrowserMetricsAggregator, metrics as metricsCore } from '@sentry/core';\nimport type { DurationUnit, MetricData, Metrics } from '@sentry/types';\n\n/**\n * Adds a value to a counter metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction increment(name: string, value: number = 1, data?: MetricData): void {\n  metricsCore.increment(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction distribution(name: string, value: number, data?: MetricData): void {\n  metricsCore.distribution(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction set(name: string, value: number | string, data?: MetricData): void {\n  metricsCore.set(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction gauge(name: string, value: number, data?: MetricData): void {\n  metricsCore.gauge(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a timing metric.\n * The metric is added as a distribution metric.\n *\n * You can either directly capture a numeric `value`, or wrap a callback function in `timing`.\n * In the latter case, the duration of the callback execution will be captured as a span & a metric.\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction timing(name: string, value: number, unit?: DurationUnit, data?: Omit<MetricData, 'unit'>): void;\nfunction timing<T>(name: string, callback: () => T, unit?: DurationUnit, data?: Omit<MetricData, 'unit'>): T;\nfunction timing<T = void>(\n  name: string,\n  value: number | (() => T),\n  unit: DurationUnit = 'second',\n  data?: Omit<MetricData, 'unit'>,\n): T | void {\n  return metricsCore.timing(BrowserMetricsAggregator, name, value, unit, data);\n}\n\nexport const metrics: Metrics = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  timing,\n};\n","import {\n  SENTRY_XHR_DATA_KEY,\n  addPerformanceInstrumentationHandler,\n  addXhrInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SentryNonRecordingSpan,\n  getActiveSpan,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  hasTracingEnabled,\n  instrumentFetchRequest,\n  setHttpStatus,\n  spanToJSON,\n  spanToTraceHeader,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { Client, HandlerDataXhr, SentryWrappedXMLHttpRequest, Span } from '@sentry/types';\nimport {\n  BAGGAGE_HEADER_NAME,\n  addFetchInstrumentationHandler,\n  browserPerformanceTimeOrigin,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  parseUrl,\n  stringMatchesSomePattern,\n} from '@sentry/utils';\nimport { WINDOW } from '../helpers';\n\n/** Options for Request Instrumentation */\nexport interface RequestInstrumentationOptions {\n  /**\n   * List of strings and/or Regular Expressions used to determine which outgoing requests will have `sentry-trace` and `baggage`\n   * headers attached.\n   *\n   * **Default:** If this option is not provided, tracing headers will be attached to all outgoing requests.\n   * If you are using a browser SDK, by default, tracing headers will only be attached to outgoing requests to the same origin.\n   *\n   * **Disclaimer:** Carelessly setting this option in browser environments may result into CORS errors!\n   * Only attach tracing headers to requests to the same origin, or to requests to services you can control CORS headers of.\n   * Cross-origin requests, meaning requests to a different domain, for example a request to `https://api.example.com/` while you're on `https://example.com/`, take special care.\n   * If you are attaching headers to cross-origin requests, make sure the backend handling the request returns a `\"Access-Control-Allow-Headers: sentry-trace, baggage\"` header to ensure your requests aren't blocked.\n   *\n   * If you provide a `tracePropagationTargets` array, the entries you provide will be matched against the entire URL of the outgoing request.\n   * If you are using a browser SDK, the entries will also be matched against the pathname of the outgoing requests.\n   * This is so you can have matchers for relative requests, for example, `/^\\/api/` if you want to trace requests to your `/api` routes on the same domain.\n   *\n   * If any of the two match any of the provided values, tracing headers will be attached to the outgoing request.\n   * Both, the string values, and the RegExes you provide in the array will match if they partially match the URL or pathname.\n   *\n   * Examples:\n   * - `tracePropagationTargets: [/^\\/api/]` and request to `https://same-origin.com/api/posts`:\n   *   - Tracing headers will be attached because the request is sent to the same origin and the regex matches the pathname \"/api/posts\".\n   * - `tracePropagationTargets: [/^\\/api/]` and request to `https://different-origin.com/api/posts`:\n   *   - Tracing headers will not be attached because the pathname will only be compared when the request target lives on the same origin.\n   * - `tracePropagationTargets: [/^\\/api/, 'https://external-api.com']` and request to `https://external-api.com/v1/data`:\n   *   - Tracing headers will be attached because the request URL matches the string `'https://external-api.com'`.\n   */\n  tracePropagationTargets?: Array<string | RegExp>;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * If true, Sentry will capture http timings and add them to the corresponding http spans.\n   *\n   * Default: true\n   */\n  enableHTTPTimings: boolean;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n}\n\nexport const defaultRequestInstrumentationOptions: RequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options?: Partial<RequestInstrumentationOptions>): void {\n  const { traceFetch, traceXHR, shouldCreateSpanForRequest, enableHTTPTimings, tracePropagationTargets } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_: string) => true;\n\n  const shouldAttachHeadersWithTargets = (url: string): boolean => shouldAttachHeaders(url, tracePropagationTargets);\n\n  const spans: Record<string, Span> = {};\n\n  if (traceFetch) {\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry: PerformanceEntry): entry is PerformanceResourceTiming {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry as PerformanceResourceTiming).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span: Span): void {\n  const { url } = spanToJSON(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nexport function extractNetworkProtocol(nextHopProtocol: string): { name: string; version: string } {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/') as [string, string];\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1] as string;\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time: number = 0): number {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming: PerformanceResourceTiming): [string, string | number][] {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData: [string, string | number][] = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * We only export this function for testing purposes.\n */\nexport function shouldAttachHeaders(\n  targetUrl: string,\n  tracePropagationTargets: (string | RegExp)[] | undefined,\n): boolean {\n  // window.location.href not being defined is an edge case in the browser but we need to handle it.\n  // Potentially dangerous situations where it may not be defined: Browser Extensions, Web Workers, patching of the location obj\n  const href: string | undefined = WINDOW.location && WINDOW.location.href;\n\n  if (!href) {\n    // If there is no window.location.origin, we default to only attaching tracing headers to relative requests, i.e. ones that start with `/`\n    // BIG DISCLAIMER: Users can call URLs with a double slash (fetch(\"//example.com/api\")), this is a shorthand for \"send to the same protocol\",\n    // so we need a to exclude those requests, because they might be cross origin.\n    const isRelativeSameOriginRequest = !!targetUrl.match(/^\\/(?!\\/)/);\n    if (!tracePropagationTargets) {\n      return isRelativeSameOriginRequest;\n    } else {\n      return stringMatchesSomePattern(targetUrl, tracePropagationTargets);\n    }\n  } else {\n    let resolvedUrl;\n    let currentOrigin;\n\n    // URL parsing may fail, we default to not attaching trace headers in that case.\n    try {\n      resolvedUrl = new URL(targetUrl, href);\n      currentOrigin = new URL(href).origin;\n    } catch (e) {\n      return false;\n    }\n\n    const isSameOriginRequest = resolvedUrl.origin === currentOrigin;\n    if (!tracePropagationTargets) {\n      return isSameOriginRequest;\n    } else {\n      return (\n        stringMatchesSomePattern(resolvedUrl.toString(), tracePropagationTargets) ||\n        (isSameOriginRequest && stringMatchesSomePattern(resolvedUrl.pathname, tracePropagationTargets))\n      );\n    }\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nexport function xhrCallback(\n  handlerData: HandlerDataXhr,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): Span | undefined {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = hasTracingEnabled() && shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan({\n          name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n          attributes: {\n            type: 'xhr',\n            'http.method': sentryXhrData.method,\n            'http.url': fullUrl,\n            url: sentryXhrData.url,\n            'server.address': host,\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n          },\n        })\n      : new SentryNonRecordingSpan();\n\n  xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n  spans[xhr.__sentry_xhr_span_id__] = span;\n\n  const client = getClient();\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url) && client) {\n    addTracingHeadersToXhrRequest(\n      xhr,\n      client,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasTracingEnabled() && hasParent ? span : undefined,\n    );\n  }\n\n  return span;\n}\n\nfunction addTracingHeadersToXhrRequest(xhr: SentryWrappedXMLHttpRequest, client: Client, span?: Span): void {\n  const scope = getCurrentScope();\n  const isolationScope = getIsolationScope();\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader =\n    span && hasTracingEnabled() ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n    dsc || (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client)),\n  );\n\n  setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n}\n\nfunction setHeaderOnXhr(\n  xhr: SentryWrappedXMLHttpRequest,\n  sentryTraceHeader: string,\n  sentryBaggageHeader: string | undefined,\n): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader!('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader!(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n","import { SPAN_STATUS_ERROR, getActiveSpan, getRootSpan } from '@sentry/core';\nimport { spanToJSON } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeSpan = getActiveSpan();\n      if (!activeSpan) {\n        return;\n      }\n\n      const rootSpan = getRootSpan(activeSpan);\n\n      if (WINDOW.document.hidden && rootSpan) {\n        const cancelledStatus = 'cancelled';\n\n        const { op, status } = spanToJSON(rootSpan);\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Tracing] Transaction: ${cancelledStatus} -> since tab moved to the background, op: ${op}`);\n        }\n\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message: cancelledStatus });\n        }\n\n        rootSpan.setAttribute('sentry.cancellation_reason', 'document.hidden');\n        rootSpan.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n","/* eslint-disable max-lines */\nimport {\n  addHistoryInstrumentationHandler,\n  addPerformanceEntries,\n  registerInpInteractionListener,\n  startTrackingINP,\n  startTrackingInteractions,\n  startTrackingLongAnimationFrames,\n  startTrackingLongTasks,\n  startTrackingWebVitals,\n} from '@sentry-internal/browser-utils';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  TRACING_DEFAULTS,\n  getActiveSpan,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  getRootSpan,\n  registerSpanErrorInstrumentation,\n  spanIsSampled,\n  spanToJSON,\n  startIdleSpan,\n} from '@sentry/core';\nimport type { Client, IntegrationFn, StartSpanOptions, TransactionSource } from '@sentry/types';\nimport type { Span } from '@sentry/types';\nimport {\n  browserPerformanceTimeOrigin,\n  generatePropagationContext,\n  getDomElement,\n  logger,\n  propagationContextFromHeaders,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request';\n\nexport const BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\ninterface RouteInfo {\n  name: string | undefined;\n  source: TransactionSource | undefined;\n}\n\n/** Options for Browser Tracing integration */\nexport interface BrowserTracingOptions {\n  /**\n   * The time that has to pass without any span being created.\n   * If this time is exceeded, the idle span will finish.\n   *\n   * Default: 1000 (ms)\n   */\n  idleTimeout: number;\n\n  /**\n   * The max. time an idle span may run.\n   * If this time is exceeded, the idle span will finish no matter what.\n   *\n   * Default: 30000 (ms)\n   */\n  finalTimeout: number;\n\n  /**\n   The max. time an idle span may run.\n   * If this time is exceeded, the idle span will finish no matter what.\n   *\n   * Default: 15000 (ms)\n   */\n  childSpanTimeout: number;\n\n  /**\n   * If a span should be created on page load.\n   * If this is set to `false`, this integration will not start the default page load span.\n   * Default: true\n   */\n  instrumentPageLoad: boolean;\n\n  /**\n   * If a span should be created on navigation (history change).\n   * If this is set to `false`, this integration will not start the default navigation spans.\n   * Default: true\n   */\n  instrumentNavigation: boolean;\n\n  /**\n   * Flag spans where tabs moved to background with \"cancelled\". Browser background tab timing is\n   * not suited towards doing precise measurements of operations. By default, we recommend that this option\n   * be enabled as background transactions can mess up your statistics in nondeterministic ways.\n   *\n   * Default: true\n   */\n  markBackgroundSpan: boolean;\n\n  /**\n   * If true, Sentry will capture long tasks and add them to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableLongTask: boolean;\n\n  /**\n   * If true, Sentry will capture long animation frames and add them to the corresponding transaction.\n   *\n   * Default: false\n   */\n  enableLongAnimationFrame: boolean;\n\n  /**\n   * If true, Sentry will capture first input delay and add it to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableInp: boolean;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * If true, Sentry will capture http timings and add them to the corresponding http spans.\n   *\n   * Default: true\n   */\n  enableHTTPTimings: boolean;\n\n  /**\n   * _experiments allows the user to send options to define how this integration works.\n   *\n   * Default: undefined\n   */\n  _experiments: Partial<{\n    enableInteractions: boolean;\n  }>;\n\n  /**\n   * A callback which is called before a span for a pageload or navigation is started.\n   * It receives the options passed to `startSpan`, and expects to return an updated options object.\n   */\n  beforeStartSpan?: (options: StartSpanOptions) => StartSpanOptions;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n}\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS: BrowserTracingOptions = {\n  ...TRACING_DEFAULTS,\n  instrumentNavigation: true,\n  instrumentPageLoad: true,\n  markBackgroundSpan: true,\n  enableLongTask: true,\n  enableLongAnimationFrame: false,\n  enableInp: true,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library.\n *\n * We explicitly export the proper type here, as this has to be extended in some cases.\n */\nexport const browserTracingIntegration = ((_options: Partial<BrowserTracingOptions> = {}) => {\n  registerSpanErrorInstrumentation();\n\n  const {\n    enableInp,\n    enableLongTask,\n    enableLongAnimationFrame,\n    _experiments: { enableInteractions },\n    beforeStartSpan,\n    idleTimeout,\n    finalTimeout,\n    childSpanTimeout,\n    markBackgroundSpan,\n    traceFetch,\n    traceXHR,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    instrumentPageLoad,\n    instrumentNavigation,\n  } = {\n    ...DEFAULT_BROWSER_TRACING_OPTIONS,\n    ..._options,\n  };\n\n  const _collectWebVitals = startTrackingWebVitals();\n\n  if (enableInp) {\n    startTrackingINP();\n  }\n\n  if (enableLongAnimationFrame && PerformanceObserver.supportedEntryTypes.includes('long-animation-frame')) {\n    startTrackingLongAnimationFrames();\n  } else if (enableLongTask) {\n    startTrackingLongTasks();\n  }\n\n  if (enableInteractions) {\n    startTrackingInteractions();\n  }\n\n  const latestRoute: RouteInfo = {\n    name: undefined,\n    source: undefined,\n  };\n\n  /** Create routing idle transaction. */\n  function _createRouteSpan(client: Client, startSpanOptions: StartSpanOptions): Span {\n    const isPageloadTransaction = startSpanOptions.op === 'pageload';\n\n    const finalStartSpanOptions: StartSpanOptions = beforeStartSpan\n      ? beforeStartSpan(startSpanOptions)\n      : startSpanOptions;\n\n    const attributes = finalStartSpanOptions.attributes || {};\n\n    // If `finalStartSpanOptions.name` is different than `startSpanOptions.name`\n    // it is because `beforeStartSpan` set a custom name. Therefore we set the source to 'custom'.\n    if (startSpanOptions.name !== finalStartSpanOptions.name) {\n      attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'custom';\n      finalStartSpanOptions.attributes = attributes;\n    }\n\n    latestRoute.name = finalStartSpanOptions.name;\n    latestRoute.source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n    const idleSpan = startIdleSpan(finalStartSpanOptions, {\n      idleTimeout,\n      finalTimeout,\n      childSpanTimeout,\n      // should wait for finish signal if it's a pageload transaction\n      disableAutoFinish: isPageloadTransaction,\n      beforeSpanEnd: span => {\n        _collectWebVitals();\n        addPerformanceEntries(span);\n      },\n    });\n\n    function emitFinish(): void {\n      if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n        client.emit('idleSpanEnableAutoFinish', idleSpan);\n      }\n    }\n\n    if (isPageloadTransaction && WINDOW.document) {\n      WINDOW.document.addEventListener('readystatechange', () => {\n        emitFinish();\n      });\n\n      emitFinish();\n    }\n\n    return idleSpan;\n  }\n\n  return {\n    name: BROWSER_TRACING_INTEGRATION_ID,\n    afterAllSetup(client) {\n      let activeSpan: Span | undefined;\n      let startingUrl: string | undefined = WINDOW.location && WINDOW.location.href;\n\n      client.on('startNavigationSpan', startSpanOptions => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        if (activeSpan && !spanToJSON(activeSpan).timestamp) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current root span with op: ${spanToJSON(activeSpan).op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeSpan.end();\n        }\n        activeSpan = _createRouteSpan(client, {\n          op: 'navigation',\n          ...startSpanOptions,\n        });\n      });\n\n      client.on('startPageLoadSpan', (startSpanOptions, traceOptions = {}) => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        if (activeSpan && !spanToJSON(activeSpan).timestamp) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current root span with op: ${spanToJSON(activeSpan).op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeSpan.end();\n        }\n\n        const sentryTrace = traceOptions.sentryTrace || getMetaContent('sentry-trace');\n        const baggage = traceOptions.baggage || getMetaContent('baggage');\n\n        const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n        getCurrentScope().setPropagationContext(propagationContext);\n\n        activeSpan = _createRouteSpan(client, {\n          op: 'pageload',\n          ...startSpanOptions,\n        });\n      });\n\n      // A trace should to stay the consistent over the entire time span of one route.\n      // Therefore, when the initial pageload or navigation root span ends, we update the\n      // scope's propagation context to keep span-specific attributes like the `sampled` decision and\n      // the dynamic sampling context valid, even after the root span has ended.\n      // This ensures that the trace data is consistent for the entire duration of the route.\n      client.on('spanEnd', span => {\n        const op = spanToJSON(span).op;\n        if (span !== getRootSpan(span) || (op !== 'navigation' && op !== 'pageload')) {\n          return;\n        }\n\n        const scope = getCurrentScope();\n        const oldPropagationContext = scope.getPropagationContext();\n\n        scope.setPropagationContext({\n          ...oldPropagationContext,\n          sampled: oldPropagationContext.sampled !== undefined ? oldPropagationContext.sampled : spanIsSampled(span),\n          dsc: oldPropagationContext.dsc || getDynamicSamplingContextFromSpan(span),\n        });\n      });\n\n      if (WINDOW.location) {\n        if (instrumentPageLoad) {\n          startBrowserTracingPageLoadSpan(client, {\n            name: WINDOW.location.pathname,\n            // pageload should always start at timeOrigin (and needs to be in s, not ms)\n            startTime: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.browser',\n            },\n          });\n        }\n\n        if (instrumentNavigation) {\n          addHistoryInstrumentationHandler(({ to, from }) => {\n            /**\n             * This early return is there to account for some cases where a navigation transaction starts right after\n             * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n             * create an uneccessary navigation transaction.\n             *\n             * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n             * only be caused in certain development environments where the usage of a hot module reloader is causing\n             * errors.\n             */\n            if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n              startingUrl = undefined;\n              return;\n            }\n\n            if (from !== to) {\n              startingUrl = undefined;\n              startBrowserTracingNavigationSpan(client, {\n                name: WINDOW.location.pathname,\n                attributes: {\n                  [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n                  [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.browser',\n                },\n              });\n            }\n          });\n        }\n      }\n\n      if (markBackgroundSpan) {\n        registerBackgroundTabDetection();\n      }\n\n      if (enableInteractions) {\n        registerInteractionListener(idleTimeout, finalTimeout, childSpanTimeout, latestRoute);\n      }\n\n      if (enableInp) {\n        registerInpInteractionListener();\n      }\n\n      instrumentOutgoingRequests({\n        traceFetch,\n        traceXHR,\n        tracePropagationTargets: client.getOptions().tracePropagationTargets,\n        shouldCreateSpanForRequest,\n        enableHTTPTimings,\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Manually start a page load span.\n * This will only do something if a browser tracing integration integration has been setup.\n *\n * If you provide a custom `traceOptions` object, it will be used to continue the trace\n * instead of the default behavior, which is to look it up on the <meta> tags.\n */\nexport function startBrowserTracingPageLoadSpan(\n  client: Client,\n  spanOptions: StartSpanOptions,\n  traceOptions?: { sentryTrace?: string | undefined; baggage?: string | undefined },\n): Span | undefined {\n  client.emit('startPageLoadSpan', spanOptions, traceOptions);\n\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'pageload' ? span : undefined;\n}\n\n/**\n * Manually start a navigation span.\n * This will only do something if a browser tracing integration has been setup.\n */\nexport function startBrowserTracingNavigationSpan(client: Client, spanOptions: StartSpanOptions): Span | undefined {\n  getIsolationScope().setPropagationContext(generatePropagationContext());\n  getCurrentScope().setPropagationContext(generatePropagationContext());\n\n  client.emit('startNavigationSpan', spanOptions);\n\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'navigation' ? span : undefined;\n}\n\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName: string): string | undefined {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n/** Start listener for interaction transactions */\nfunction registerInteractionListener(\n  idleTimeout: BrowserTracingOptions['idleTimeout'],\n  finalTimeout: BrowserTracingOptions['finalTimeout'],\n  childSpanTimeout: BrowserTracingOptions['childSpanTimeout'],\n  latestRoute: RouteInfo,\n): void {\n  let inflightInteractionSpan: Span | undefined;\n  const registerInteractionTransaction = (): void => {\n    const op = 'ui.action.click';\n\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan && getRootSpan(activeSpan);\n    if (rootSpan) {\n      const currentRootSpanOp = spanToJSON(rootSpan).op;\n      if (['navigation', 'pageload'].includes(currentRootSpanOp as string)) {\n        DEBUG_BUILD &&\n          logger.warn(`[Tracing] Did not create ${op} span because a pageload or navigation span is in progress.`);\n        return undefined;\n      }\n    }\n\n    if (inflightInteractionSpan) {\n      inflightInteractionSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, 'interactionInterrupted');\n      inflightInteractionSpan.end();\n      inflightInteractionSpan = undefined;\n    }\n\n    if (!latestRoute.name) {\n      DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n      return undefined;\n    }\n\n    inflightInteractionSpan = startIdleSpan(\n      {\n        name: latestRoute.name,\n        op,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.source || 'url',\n        },\n      },\n      {\n        idleTimeout,\n        finalTimeout,\n        childSpanTimeout,\n      },\n    );\n  };\n\n  if (WINDOW.document) {\n    addEventListener('click', registerInteractionTransaction, { once: false, capture: true });\n  }\n}\n","import type { OfflineStore, OfflineTransportOptions } from '@sentry/core';\nimport { makeOfflineTransport } from '@sentry/core';\nimport type { BaseTransportOptions, Envelope, Transport } from '@sentry/types';\nimport { parseEnvelope, serializeEnvelope } from '@sentry/utils';\nimport { makeFetchTransport } from './fetch';\n\n// 'Store', 'promisifyRequest' and 'createStore' were originally copied from the 'idb-keyval' package before being\n// modified and simplified: https://github.com/jakearchibald/idb-keyval\n//\n// At commit: 0420a704fd6cbb4225429c536b1f61112d012fca\n// Original licence:\n\n// Copyright 2016, Jake Archibald\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ntype Store = <T>(callback: (store: IDBObjectStore) => T | PromiseLike<T>) => Promise<T>;\n\nfunction promisifyRequest<T = undefined>(request: IDBRequest<T> | IDBTransaction): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    // @ts-expect-error - file size hacks\n    request.oncomplete = request.onsuccess = () => resolve(request.result);\n    // @ts-expect-error - file size hacks\n    request.onabort = request.onerror = () => reject(request.error);\n  });\n}\n\n/** Create or open an IndexedDb store */\nexport function createStore(dbName: string, storeName: string): Store {\n  const request = indexedDB.open(dbName);\n  request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n  const dbp = promisifyRequest(request);\n\n  return callback => dbp.then(db => callback(db.transaction(storeName, 'readwrite').objectStore(storeName)));\n}\n\nfunction keys(store: IDBObjectStore): Promise<number[]> {\n  return promisifyRequest(store.getAllKeys() as IDBRequest<number[]>);\n}\n\n/** Insert into the end of the store */\nexport function push(store: Store, value: Uint8Array | string, maxQueueSize: number): Promise<void> {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an incremented key so that the entries are popped in order\n      store.put(value, Math.max(...keys, 0) + 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Insert into the front of the store */\nexport function unshift(store: Store, value: Uint8Array | string, maxQueueSize: number): Promise<void> {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an decremented key so that the entries are popped in order\n      store.put(value, Math.min(...keys, 0) - 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Pop the oldest value from the store */\nexport function shift(store: Store): Promise<Uint8Array | string | undefined> {\n  return store(store => {\n    return keys(store).then(keys => {\n      const firstKey = keys[0];\n      if (firstKey == null) {\n        return undefined;\n      }\n\n      return promisifyRequest(store.get(firstKey)).then(value => {\n        store.delete(firstKey);\n        return promisifyRequest(store.transaction).then(() => value);\n      });\n    });\n  });\n}\n\nexport interface BrowserOfflineTransportOptions extends Omit<OfflineTransportOptions, 'createStore'> {\n  /**\n   * Name of indexedDb database to store envelopes in\n   * Default: 'sentry-offline'\n   */\n  dbName?: string;\n  /**\n   * Name of indexedDb object store to store envelopes in\n   * Default: 'queue'\n   */\n  storeName?: string;\n  /**\n   * Maximum number of envelopes to store\n   * Default: 30\n   */\n  maxQueueSize?: number;\n}\n\nfunction createIndexedDbStore(options: BrowserOfflineTransportOptions): OfflineStore {\n  let store: Store | undefined;\n\n  // Lazily create the store only when it's needed\n  function getStore(): Store {\n    if (store == undefined) {\n      store = createStore(options.dbName || 'sentry-offline', options.storeName || 'queue');\n    }\n\n    return store;\n  }\n\n  return {\n    push: async (env: Envelope) => {\n      try {\n        const serialized = await serializeEnvelope(env);\n        await push(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    unshift: async (env: Envelope) => {\n      try {\n        const serialized = await serializeEnvelope(env);\n        await unshift(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    shift: async () => {\n      try {\n        const deserialized = await shift(getStore());\n        if (deserialized) {\n          return parseEnvelope(deserialized);\n        }\n      } catch (_) {\n        //\n      }\n\n      return undefined;\n    },\n  };\n}\n\nfunction makeIndexedDbOfflineTransport<T>(\n  createTransport: (options: T) => Transport,\n): (options: T & BrowserOfflineTransportOptions) => Transport {\n  return options => createTransport({ ...options, createStore: createIndexedDbStore });\n}\n\n/**\n * Creates a transport that uses IndexedDb to store events when offline.\n */\nexport function makeBrowserOfflineTransport<T extends BaseTransportOptions>(\n  createTransport: (options: T) => Transport = makeFetchTransport,\n): (options: T & BrowserOfflineTransportOptions) => Transport {\n  return makeIndexedDbOfflineTransport<T>(makeOfflineTransport(createTransport));\n}\n","/* eslint-disable max-lines */\n\nimport { DEFAULT_ENVIRONMENT, getClient, spanToJSON } from '@sentry/core';\nimport type {\n  DebugImage,\n  Envelope,\n  Event,\n  EventEnvelope,\n  Profile,\n  Span,\n  StackFrame,\n  StackParser,\n  ThreadCpuProfile,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  browserPerformanceTimeOrigin,\n  forEachEnvelopeItem,\n  logger,\n  timestampInSeconds,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport type { JSSelfProfile, JSSelfProfileStack, JSSelfProfiler, JSSelfProfilerConstructor } from './jsSelfProfiling';\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = '';\nlet OS_PLATFORM_VERSION = '';\nlet OS_ARCH = '';\nlet OS_BROWSER = (WINDOW.navigator && WINDOW.navigator.userAgent) || '';\nlet OS_MODEL = '';\nconst OS_LOCALE =\n  (WINDOW.navigator && WINDOW.navigator.language) ||\n  (WINDOW.navigator && WINDOW.navigator.languages && WINDOW.navigator.languages[0]) ||\n  '';\n\ntype UAData = {\n  platform?: string;\n  architecture?: string;\n  model?: string;\n  platformVersion?: string;\n  fullVersionList?: {\n    brand: string;\n    version: string;\n  }[];\n};\n\ninterface UserAgentData {\n  getHighEntropyValues: (keys: string[]) => Promise<UAData>;\n}\n\nfunction isUserAgentData(data: unknown): data is UserAgentData {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-expect-error userAgentData is not part of the navigator interface yet\nconst userAgentData = WINDOW.navigator && WINDOW.navigator.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua: UAData) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1]!;\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isProcessedJSSelfProfile(profile: ThreadCpuProfile | JSSelfProfile): profile is JSSelfProfile {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nexport function enrichWithThreadInformation(profile: ThreadCpuProfile | JSSelfProfile): ThreadCpuProfile {\n  if (!isProcessedJSSelfProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\nexport interface ProfiledEvent extends Event {\n  sdkProcessingMetadata: {\n    profile?: JSSelfProfile;\n  };\n}\n\nfunction getTraceId(event: Event): string {\n  const traceId: unknown = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if (DEBUG_BUILD) {\n      logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nexport function createProfilePayload(\n  profile_id: string,\n  start_timestamp: number | undefined,\n  processed_profile: JSSelfProfile,\n  event: ProfiledEvent,\n): Profile {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  if (processed_profile === undefined || processed_profile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${processed_profile} instead.`,\n    );\n  }\n\n  const traceId = getTraceId(event);\n  const enrichedThreadProfile = enrichWithThreadInformation(processed_profile);\n  const transactionStartMs = start_timestamp\n    ? start_timestamp\n    : typeof event.start_timestamp === 'number'\n      ? event.start_timestamp * 1000\n      : timestampInSeconds() * 1000;\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : timestampInSeconds() * 1000;\n\n  const profile: Profile = {\n    event_id: profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(processed_profile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || uuid4(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  return profile;\n}\n\n/**\n *\n */\nexport function isProfiledTransactionEvent(event: Event): event is ProfiledEvent {\n  return !!(event.sdkProcessingMetadata && event.sdkProcessingMetadata['profile']);\n}\n\n/*\n  See packages/browser-utils/src/browser/router.ts\n*/\n/**\n *\n */\nexport function isAutomatedPageLoadSpan(span: Span): boolean {\n  return spanToJSON(span).op === 'pageload';\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nexport function convertJSSelfProfileToSampledFormat(input: JSSelfProfile): Profile['profile'] {\n  let EMPTY_STACK_ID: undefined | number = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile: Profile['profile'] = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  const firstSample = input.samples[0];\n  if (!firstSample) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = firstSample.timestamp;\n  // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n  // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n  // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n  // the drift between the SDK selected value and our profile time origin.\n  const origin =\n    typeof performance.timeOrigin === 'number' ? performance.timeOrigin : browserPerformanceTimeOrigin || 0;\n  const adjustForOriginChange = origin - (browserPerformanceTimeOrigin || origin);\n\n  input.samples.forEach((jsSample, i) => {\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      return;\n    }\n\n    let stackTop: JSSelfProfileStack | undefined = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack: number[] = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (frame && profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n          lineno: frame.line,\n          colno: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample: Profile['profile']['samples'][0] = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  });\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nexport function addProfilesToEnvelope(envelope: EventEnvelope, profiles: Profile[]): Envelope {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nexport function findProfiledTransactionsFromEnvelope(envelope: Envelope): Event[] {\n  const events: Event[] = [];\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j] as Event;\n\n      if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n        events.push(item[j] as Event);\n      }\n    }\n  });\n\n  return events;\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n/**\n * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n */\nexport function applyDebugMetadata(resource_paths: ReadonlyArray<string>): DebugImage[] {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return [];\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  const stackParser = options && options.stackParser;\n\n  if (!stackParser) {\n    return [];\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      const file = stackFrame && stackFrame.filename;\n\n      if (stackFrame && file) {\n        acc[file] = debugIdMap[debugIdStackTrace] as string;\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  const images: DebugImage[] = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] as string,\n      });\n    }\n  }\n\n  return images;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nexport function isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD && logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nfunction isValidProfile(profile: JSSelfProfile): profile is JSSelfProfile & { profile_id: string } {\n  if (profile.samples.length < 2) {\n    if (DEBUG_BUILD) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.frames.length) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because it contains no frames');\n    }\n    return false;\n  }\n\n  return true;\n}\n\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED: boolean = false;\nexport const MAX_PROFILE_DURATION_MS = 30_000;\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler: unknown): maybeProfiler is typeof JSSelfProfilerConstructor {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Starts the profiler and returns the profiler instance.\n */\nexport function startJSSelfProfile(): JSSelfProfiler | undefined {\n  // Feature support check first\n  const JSProfilerConstructor = WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.',\n      );\n    }\n    return;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    return new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      logger.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  return;\n}\n\n/**\n * Determine if a profile should be profiled.\n */\nexport function shouldProfileSpan(span: Span): boolean {\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return false;\n  }\n\n  if (!span.isRecording()) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because transaction was not sampled.');\n    }\n    return false;\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  if (!options) {\n    DEBUG_BUILD && logger.log('[Profiling] Profiling disabled, no options found.');\n    return false;\n  }\n\n  // @ts-expect-error profilesSampleRate is not part of the browser options yet\n  const profilesSampleRate: number | boolean | undefined = options.profilesSampleRate;\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(profilesSampleRate)) {\n    DEBUG_BUILD && logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return false;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0',\n      );\n    return false;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nexport function createProfilingEvent(\n  profile_id: string,\n  start_timestamp: number | undefined,\n  profile: JSSelfProfile,\n  event: ProfiledEvent,\n): Profile | null {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile_id, start_timestamp, profile, event);\n}\n\n// TODO (v8): We need to obtain profile ids in @sentry-internal/tracing,\n// but we don't have access to this map because importing this map would\n// cause a circular dependancy. We need to resolve this in v8.\nconst PROFILE_MAP: Map<string, JSSelfProfile> = new Map();\n/**\n *\n */\nexport function getActiveProfilesCount(): number {\n  return PROFILE_MAP.size;\n}\n\n/**\n * Retrieves profile from global cache and removes it.\n */\nexport function takeProfileFromGlobalCache(profile_id: string): JSSelfProfile | undefined {\n  const profile = PROFILE_MAP.get(profile_id);\n  if (profile) {\n    PROFILE_MAP.delete(profile_id);\n  }\n  return profile;\n}\n/**\n * Adds profile to global cache and evicts the oldest profile if the cache is full.\n */\nexport function addProfileToGlobalCache(profile_id: string, profile: JSSelfProfile): void {\n  PROFILE_MAP.set(profile_id, profile);\n\n  if (PROFILE_MAP.size > 30) {\n    const last: string = PROFILE_MAP.keys().next().value;\n    PROFILE_MAP.delete(last);\n  }\n}\n","import { getCurrentScope, spanToJSON } from '@sentry/core';\nimport type { Span } from '@sentry/types';\nimport { logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport type { JSSelfProfile } from './jsSelfProfiling';\nimport { MAX_PROFILE_DURATION_MS, addProfileToGlobalCache, isAutomatedPageLoadSpan, startJSSelfProfile } from './utils';\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfileForTransaction is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nexport function startProfileForSpan(span: Span): void {\n  // Start the profiler and get the profiler instance.\n  let startTimestamp: number | undefined;\n  if (isAutomatedPageLoadSpan(span)) {\n    startTimestamp = timestampInSeconds() * 1000;\n  }\n\n  const profiler = startJSSelfProfile();\n\n  // We failed to construct the profiler, so we skip.\n  // No need to log anything as this has already been logged in startProfile.\n  if (!profiler) {\n    return;\n  }\n\n  if (DEBUG_BUILD) {\n    logger.log(`[Profiling] started profiling span: ${spanToJSON(span).description}`);\n  }\n\n  // We create \"unique\" span names to avoid concurrent spans with same names\n  // from being ignored by the profiler. From here on, only this span name should be used when\n  // calling the profiler methods. Note: we log the original name to the user to avoid confusion.\n  const profileId = uuid4();\n\n  // A couple of important things to note here:\n  // `CpuProfilerBindings.stopProfiling` will be scheduled to run in 30seconds in order to exceed max profile duration.\n  // Whichever of the two (span.finish/timeout) is first to run, the profiling will be stopped and the gathered profile\n  // will be processed when the original span is finished. Since onProfileHandler can be invoked multiple times in the\n  // event of an error or user mistake (calling span.finish multiple times), it is important that the behavior of onProfileHandler\n  // is idempotent as we do not want any timings or profiles to be overriden by the last call to onProfileHandler.\n  // After the original finish method is called, the event will be reported through the integration and delegated to transport.\n  const processedProfile: JSSelfProfile | null = null;\n\n  getCurrentScope().setContext('profile', {\n    profile_id: profileId,\n    start_timestamp: startTimestamp,\n  });\n\n  /**\n   * Idempotent handler for profile stop\n   */\n  async function onProfileHandler(): Promise<void> {\n    // Check if the profile exists and return it the behavior has to be idempotent as users may call span.finish multiple times.\n    if (!span) {\n      return;\n    }\n    // Satisfy the type checker, but profiler will always be defined here.\n    if (!profiler) {\n      return;\n    }\n    if (processedProfile) {\n      if (DEBUG_BUILD) {\n        logger.log('[Profiling] profile for:', spanToJSON(span).description, 'already exists, returning early');\n      }\n      return;\n    }\n\n    return profiler\n      .stop()\n      .then((profile: JSSelfProfile): void => {\n        if (maxDurationTimeoutID) {\n          WINDOW.clearTimeout(maxDurationTimeoutID);\n          maxDurationTimeoutID = undefined;\n        }\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Profiling] stopped profiling of span: ${spanToJSON(span).description}`);\n        }\n\n        // In case of an overlapping span, stopProfiling may return null and silently ignore the overlapping profile.\n        if (!profile) {\n          if (DEBUG_BUILD) {\n            logger.log(\n              `[Profiling] profiler returned null profile for: ${spanToJSON(span).description}`,\n              'this may indicate an overlapping span or a call to stopProfiling with a profile title that was never started',\n            );\n          }\n          return;\n        }\n\n        addProfileToGlobalCache(profileId, profile);\n      })\n      .catch(error => {\n        if (DEBUG_BUILD) {\n          logger.log('[Profiling] error while stopping profiler:', error);\n        }\n      });\n  }\n\n  // Enqueue a timeout to prevent profiles from running over max duration.\n  let maxDurationTimeoutID: number | undefined = WINDOW.setTimeout(() => {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] max profile duration elapsed, stopping profiling for:', spanToJSON(span).description);\n    }\n    // If the timeout exceeds, we want to stop profiling, but not finish the span\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    onProfileHandler();\n  }, MAX_PROFILE_DURATION_MS);\n\n  // We need to reference the original end call to avoid creating an infinite loop\n  const originalEnd = span.end.bind(span);\n\n  /**\n   * Wraps span `end()` with profiling related logic.\n   * startProfiling is called after the call to spanStart in order to avoid our own code from\n   * being profiled. Because of that same reason, stopProfiling is called before the call to spanEnd.\n   */\n  function profilingWrappedSpanEnd(): Span {\n    if (!span) {\n      return originalEnd();\n    }\n    // onProfileHandler should always return the same profile even if this is called multiple times.\n    // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n    void onProfileHandler().then(\n      () => {\n        originalEnd();\n      },\n      () => {\n        // If onProfileHandler fails, we still want to call the original finish method.\n        originalEnd();\n      },\n    );\n\n    return span;\n  }\n\n  span.end = profilingWrappedSpanEnd;\n}\n","import { defineIntegration, getActiveSpan, getRootSpan } from '@sentry/core';\nimport type { EventEnvelope, IntegrationFn, Profile, Span } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { startProfileForSpan } from './startProfileForSpan';\nimport type { ProfiledEvent } from './utils';\nimport { isAutomatedPageLoadSpan, shouldProfileSpan } from './utils';\nimport {\n  addProfilesToEnvelope,\n  createProfilingEvent,\n  findProfiledTransactionsFromEnvelope,\n  getActiveProfilesCount,\n  takeProfileFromGlobalCache,\n} from './utils';\n\nconst INTEGRATION_NAME = 'BrowserProfiling';\n\nconst _browserProfilingIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const activeSpan = getActiveSpan();\n      const rootSpan = activeSpan && getRootSpan(activeSpan);\n\n      if (rootSpan && isAutomatedPageLoadSpan(rootSpan)) {\n        if (shouldProfileSpan(rootSpan)) {\n          startProfileForSpan(rootSpan);\n        }\n      }\n\n      client.on('spanStart', (span: Span) => {\n        if (span === getRootSpan(span) && shouldProfileSpan(span)) {\n          startProfileForSpan(span);\n        }\n      });\n\n      client.on('beforeEnvelope', (envelope): void => {\n        // if not profiles are in queue, there is nothing to add to the envelope.\n        if (!getActiveProfilesCount()) {\n          return;\n        }\n\n        const profiledTransactionEvents = findProfiledTransactionsFromEnvelope(envelope);\n        if (!profiledTransactionEvents.length) {\n          return;\n        }\n\n        const profilesToAddToEnvelope: Profile[] = [];\n\n        for (const profiledTransaction of profiledTransactionEvents) {\n          const context = profiledTransaction && profiledTransaction.contexts;\n          const profile_id = context && context['profile'] && context['profile']['profile_id'];\n          const start_timestamp = context && context['profile'] && context['profile']['start_timestamp'];\n\n          if (typeof profile_id !== 'string') {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a span without a profile context');\n            continue;\n          }\n\n          if (!profile_id) {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a span without a profile context');\n            continue;\n          }\n\n          // Remove the profile from the span context before sending, relay will take care of the rest.\n          if (context && context['profile']) {\n            delete context.profile;\n          }\n\n          const profile = takeProfileFromGlobalCache(profile_id);\n          if (!profile) {\n            DEBUG_BUILD && logger.log(`[Profiling] Could not retrieve profile for span: ${profile_id}`);\n            continue;\n          }\n\n          const profileEvent = createProfilingEvent(\n            profile_id,\n            start_timestamp as number | undefined,\n            profile,\n            profiledTransaction as ProfiledEvent,\n          );\n          if (profileEvent) {\n            profilesToAddToEnvelope.push(profileEvent);\n          }\n        }\n\n        addProfilesToEnvelope(envelope as EventEnvelope, profilesToAddToEnvelope);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserProfilingIntegration = defineIntegration(_browserProfilingIntegration);\n"],"mappings":"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","names":["e","e","keys","DEBUG_BUILD","WINDOW","WINDOW","WINDOW","po","e","WINDOW","WINDOW","WINDOW","po","po","po","e","a","b","i","po","WINDOW","po","WINDOW","WINDOW","addHandler","triggerHandlers","e","DEBUG_BUILD","WINDOW","performance","WINDOW","DEBUG_BUILD","_measurements","WINDOW","handlers","e","WINDOW","WINDOW","document","e","DEBUG_BUILD","setTimeout","WINDOW","parseUrl","e","e2","performance","entry","e","WINDOW","e","line","e","INTEGRATION_NAME","e","INTEGRATION_NAME","e","e2","INTEGRATION_NAME","options","e","WINDOW","INTEGRATION_NAME","INTEGRATION_NAME","_wrapXHR","e","WINDOW","INTEGRATION_NAME","WINDOW","_nullishCoalesce","_optionalChain","i","NodeType","isElement","n","_","s","x","y","cachedImplementations","getImplementation","document","e","setTimeout","clearTimeout","chars","c","a","e2","mirror","throttle","d","parentId","m","r","set","getEventTarget","p","handlers","h","el","text","v","o","b","keys","errorHandler","takeFullSnapshot","observe","init","node","DEBUG_BUILD","getWorkerURL","isErrorEvent","request","response","flush","err","NodeType","elementClassMatchesRegex","distanceToMatch","createMatchPredicate","e2","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","hookSetter","d","setTimeout","patch","closestElementOfNode","isBlocked","cachedImplementations","getImplementation","document","e","onRequestAnimationFrame","errorHandler","registerErrorHandler","callbackWrapper","i","handlers","v","h","mirror","r","t","_","canvasElement","window","type","INTEGRATION_NAME","WINDOW","DEBUG_BUILD","XMLNS","g","lazyLoadIntegration","handleClick","l","u","i","o","r","f","c","s","a","h","v","n","p","y","t","d","b","m","w","k","x","C","j","P","e","_","T","A","D","S","$","I","q","z","B","_jsxFileName","useMemo","useState","useCallback","error","e2","Fragment","sendFeedback","render","this","hooks","metricsCore","metrics","_","getAbsoluteTime","e","shouldAttachHeaders","span","e2","store","keys","_","createTransport","e","i","j","INTEGRATION_NAME"]}
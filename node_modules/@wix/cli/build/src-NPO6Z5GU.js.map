{"version":3,"sources":["../../cli-astro-commands/src/index.ts","../../cli-astro-commands/src/commands/root-command.ts","../../cli-astro-commands/src/commands/build.ts","../../cli-astro-commands/src/commands/env.ts","../../cli-astro-commands/src/commands/env-pull.tsx","../../cli-astro-commands/src/commands/env-set.tsx","../../cli-astro-commands/src/commands/env-remove.tsx","../../cli-astro-commands/src/commands/preview.tsx","../../cli-astro-commands/src/commands/validations.ts","../../cli-astro-commands/src/commands/release.tsx","../../cli-astro-commands/src/commands/dev.tsx","../../cli-astro-commands/src/commands/generate.tsx"],"sourcesContent":["export { getRootCommand } from './commands/root-command.js';\n","import { createCommand } from '@commander-js/extra-typings';\nimport type {\n  CommandServices,\n  GetRootCommandFn,\n} from '@wix/cli-command-contract';\n\nimport { buildCommand } from './build.js';\nimport { envCommand } from './env.js';\nimport { previewCommand } from './preview.js';\nimport { releaseCommand } from './release.js';\nimport { devCommand } from './dev.js';\nimport { generateCommand } from './generate.js';\n\nexport const getRootCommand: GetRootCommandFn = async (\n  services: CommandServices,\n  cliVersion: string\n) => {\n  return createCommand('astro')\n    .enablePositionalOptions(true)\n    .addCommand(buildCommand(services, cliVersion))\n    .addCommand(envCommand(services, cliVersion))\n    .addCommand(previewCommand(services, cliVersion))\n    .addCommand(releaseCommand(services, cliVersion))\n    .addCommand(devCommand(services, cliVersion))\n    .addCommand(generateCommand(services, cliVersion));\n};\n","import { createCommand } from '@commander-js/extra-typings';\nimport type { CommandServices } from '@wix/cli-command-contract';\n\nexport const buildCommand = (services: CommandServices, cliVersion: string) =>\n  createCommand('build')\n    .description(\n      'Invoke the astro build process, forwarding all command-line arguments.'\n    )\n    .allowExcessArguments(true)\n    .allowUnknownOption(true)\n    .passThroughOptions(true)\n    .action(async (_, command) => {\n      const { execa } = await import('execa');\n\n      const { getRepoType, createPackageManager } = await import(\n        '@wix/package-manager'\n      );\n\n      const { runCommand } = await import('./render-command.js');\n\n      await runCommand(command, services, cliVersion, async (model) => {\n        const repoType = await getRepoType(model.projectFolder);\n        const packageManager = await createPackageManager(repoType);\n\n        const { file, args } = packageManager.getRunBinaryCmd(\n          ['astro', 'build'].concat(command.args)\n        );\n\n        await execa(file, args, {\n          cwd: model.projectFolder,\n          stdio: 'inherit',\n        });\n      });\n    });\n","import { createCommand } from '@commander-js/extra-typings';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport { envPullCommand } from './env-pull.js';\nimport { envSetCommand } from './env-set.js';\nimport { envRemoveCommand } from './env-remove.js';\n\nexport const envCommand = (services: CommandServices, cliVersion: string) => {\n  return createCommand('env')\n    .description('Work with environment variables')\n    .addCommand(envPullCommand(services, cliVersion))\n    .addCommand(envSetCommand(services, cliVersion))\n    .addCommand(envRemoveCommand(services, cliVersion));\n};\n","import React from 'react';\nimport { createCommand, Option } from '@commander-js/extra-typings';\nimport { NO_TTY_JSON_OUTPUT_OPTION } from '@wix/cli-command-contract';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport { renderCommand, runCommand } from './render-command.js';\n\nexport const envPullCommand = (\n  services: CommandServices,\n  cliVersion: string\n) => {\n  return createCommand('pull')\n    .description(\n      'Pulls environment variables and merge them into .env.local file'\n    )\n    .addOption(\n      new Option(NO_TTY_JSON_OUTPUT_OPTION, 'Output in JSON format').hideHelp()\n    )\n    .action(async (opts, command) => {\n      if (opts.json) {\n        return runCommand(command, services, cliVersion, async (model) => {\n          const { nonInteractiveEnvPull } = await import(\n            '../non-interactive/env-pull.js'\n          );\n          return nonInteractiveEnvPull(services, model);\n        });\n      }\n\n      const { EnvPullCommand } = await import(\n        '../components/EnvPullCommand/index.js'\n      );\n\n      await renderCommand(command, services, cliVersion, <EnvPullCommand />);\n    });\n};\n","import React from 'react';\nimport { createCommand } from '@commander-js/extra-typings';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport { renderCommand } from './render-command.js';\n\nexport const envSetCommand = (\n  services: CommandServices,\n  cliVersion: string\n) => {\n  return createCommand('set')\n    .description('Sets environment variable')\n    .requiredOption('--key <key>', 'Name of the variable')\n    .requiredOption('--value <value>', 'Value of the variable')\n    .action(async (opts, command) => {\n      const { EnvSetCommand } = await import(\n        '../components/EnvSetCommand/index.js'\n      );\n\n      const variable = { key: opts.key, value: opts.value };\n\n      await renderCommand(\n        command,\n        services,\n        cliVersion,\n        <EnvSetCommand variable={variable} />\n      );\n    });\n};\n","import React from 'react';\nimport { createCommand } from '@commander-js/extra-typings';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport { renderCommand } from './render-command.js';\n\nexport const envRemoveCommand = (\n  services: CommandServices,\n  cliVersion: string\n) => {\n  return createCommand('remove')\n    .description('Removes an environment variable')\n    .requiredOption('--key <key>', 'Name of the variable')\n    .action(async (opts, command) => {\n      const { EnvRemoveCommand } = await import(\n        '../components/EnvRemoveCommand/index.js'\n      );\n\n      await renderCommand(\n        command,\n        services,\n        cliVersion,\n        <EnvRemoveCommand variableKey={opts.key} />\n      );\n    });\n};\n","import React from 'react';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport { NO_TTY_JSON_OUTPUT_OPTION } from '@wix/cli-command-contract';\nimport { createCommand, Option } from '@commander-js/extra-typings';\nimport { validateBase, validateLabel } from './validations.js';\n\nexport const previewCommand = (\n  services: CommandServices,\n  cliVersion: string\n) => {\n  return createCommand('preview')\n    .addOption(\n      new Option(\n        '--base-url <url>',\n        'The base url for when static files have been uploaded to an external cdn'\n      )\n        .argParser(validateBase)\n        .hideHelp()\n    )\n    .addOption(\n      new Option('-l, --label <label>', 'A custom label for this preview')\n        .argParser(validateLabel)\n        .hideHelp()\n    )\n    .addOption(\n      new Option(NO_TTY_JSON_OUTPUT_OPTION, 'Output in JSON format').hideHelp()\n    )\n    .action(async (options, command) => {\n      const { baseUrl, json, label } = options;\n\n      const { renderCommand, runCommand } = await import('./render-command.js');\n\n      if (json) {\n        return runCommand(command, services, cliVersion, async (model) => {\n          const { nonInteractivePreview } = await import(\n            '../non-interactive/preview.js'\n          );\n          return nonInteractivePreview(services, model, { baseUrl, label });\n        });\n      }\n\n      const { PreviewCommand } = await import(\n        '../components/PreviewCommand/index.js'\n      );\n\n      await renderCommand(\n        command,\n        services,\n        cliVersion,\n        <PreviewCommand baseUrl={baseUrl} label={label} environment=\"preview\" />\n      );\n    });\n};\n","import { z } from 'zod';\nimport { InvalidArgumentError } from '@commander-js/extra-typings';\n\nexport function validateBase(value: string) {\n  const parsed = z.string().url().safeParse(value);\n\n  if (parsed.success) {\n    return parsed.data;\n  }\n\n  throw new InvalidArgumentError('Value must be a valid URL');\n}\n\nconst LABEL_MAX_LENGTH = 200;\n\nexport function validateLabel(value: string) {\n  const parsed = z.string().max(LABEL_MAX_LENGTH).safeParse(value);\n\n  if (parsed.success) {\n    return parsed.data;\n  }\n\n  throw new InvalidArgumentError(\n    `Value must be up to ${LABEL_MAX_LENGTH} characters`\n  );\n}\n","import React from 'react';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport { createCommand, Option } from '@commander-js/extra-typings';\nimport { validateBase, validateLabel } from './validations.js';\n\nexport const releaseCommand = (\n  services: CommandServices,\n  cliVersion: string\n) => {\n  return createCommand('release')\n    .description('Release a new version of your application')\n    .addOption(\n      new Option(\n        '--base-url <url>',\n        'The base url for when static files have been uploaded to an external cdn'\n      )\n        .argParser(validateBase)\n        .hideHelp()\n    )\n    .addOption(\n      new Option('-l, --label <label>', 'A custom label for this preview')\n        .argParser(validateLabel)\n        .hideHelp()\n    )\n    .addOption(\n      new Option(\n        '--preview-id <preview-id>',\n        'ID for the preview version to be released'\n      )\n        .conflicts(['baseUrl', 'label'])\n        .hideHelp()\n    )\n    .action(async (options, command) => {\n      const { renderCommand } = await import('./render-command.js');\n      const { ReleaseCommand } = await import(\n        '../components/ReleaseCommand/index.js'\n      );\n\n      const { baseUrl, label, previewId } = options;\n\n      await renderCommand(\n        command,\n        services,\n        cliVersion,\n        <ReleaseCommand baseUrl={baseUrl} label={label} previewId={previewId} />\n      );\n    });\n};\n","import React from 'react';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport { createCommand, Option } from '@commander-js/extra-typings';\nimport { validateBase } from './validations.js';\n\nexport const devCommand = (services: CommandServices, cliVersion: string) => {\n  return createCommand('dev')\n    .option(\n      '--port <port>',\n      'Specify which port to run on. Defaults to 4321.',\n      (value) => {\n        return parseInt(value, 10);\n      }\n    )\n    .option(\n      '--allowed-hosts <allowedHosts>',\n      'Specify a comma-separated list of allowed hosts or allow any hostname.'\n    )\n    .addOption(\n      new Option(\n        '--base-url <url>',\n        'The base url for when static files have been uploaded to an external cdn'\n      )\n        .argParser(validateBase)\n        .hideHelp()\n    )\n    .action(async (options, command) => {\n      const { DevCommand } = await import('../components/DevCommand/index.js');\n      const { renderCommand } = await import('./render-command.js');\n\n      await renderCommand(\n        command,\n        services,\n        cliVersion,\n        <DevCommand\n          port={options.port}\n          allowedHosts={options.allowedHosts}\n          serverExposedUrl={options.baseUrl}\n        />\n      );\n    });\n};\n","import { createCommand } from '@commander-js/extra-typings';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport React from 'react';\n\nexport const generateCommand = (\n  services: CommandServices,\n  cliVersion: string\n) => {\n  return createCommand('generate')\n    .description('Generate a new extension for your project')\n    .action(async (options, command) => {\n      const { GenerateCommand } = await import(\n        '../components/GenerateCommand/index.js'\n      );\n      const { renderCommand } = await import('./render-command.js');\n      await renderCommand(command, services, cliVersion, <GenerateCommand />);\n    });\n};\n"],"mappings":"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","names":["runCommand","React","import_react","React","import_react","React","import_react","renderCommand","runCommand","React","import_react","renderCommand","React","import_react","renderCommand","React","import_react","renderCommand","React"]}
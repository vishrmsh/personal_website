{"version":3,"sources":["../src/commands/render-command.tsx"],"sourcesContent":["import React from 'react';\nimport type { ReactElement } from 'react';\nimport { render } from '@wix/cli-ui-kit';\nimport { ErrorReporterProvider } from '@wix/cli-error-reporting';\nimport { BiProvider } from '@wix/cli-telemetry-react';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport type { Command } from '@commander-js/extra-typings';\nimport { reportCommandStartEvent } from '../bi.js';\n\nexport async function renderCommand(\n  command: Command,\n  { biLogger, errorReporter }: CommandServices,\n  tree: ReactElement\n) {\n  await runCommand(command, { biLogger, errorReporter }, async () => {\n    await render(\n      <BiProvider value={biLogger}>\n        <ErrorReporterProvider value={errorReporter}>\n          {tree}\n        </ErrorReporterProvider>\n      </BiProvider>\n    );\n  });\n}\n\nasync function runCommand(\n  command: Command,\n  services: CommandServices,\n  commandFn: () => Promise<void>\n) {\n  const commandStatus = reportCommandStartEvent(services.biLogger, command);\n\n  try {\n    await commandFn();\n    commandStatus.succeed();\n  } catch (e) {\n    commandStatus.failed(e);\n    throw e;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,mBAAkB;AASlB,eAAsB,cACpB,SACA,EAAE,UAAU,cAAc,GAC1B,MACA;AACA,QAAM,WAAW,SAAS,EAAE,UAAU,cAAc,GAAG,YAAY;AACjE,UAAM;AAAA,MACJ,6BAAAA,QAAA,cAAC,cAAW,OAAO,YACjB,6BAAAA,QAAA,cAAC,yBAAsB,OAAO,iBAC3B,IACH,CACF;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEA,eAAe,WACb,SACA,UACA,WACA;AACA,QAAM,gBAAgB,wBAAwB,SAAS,UAAU,OAAO;AAExE,MAAI;AACF,UAAM,UAAU;AAChB,kBAAc,QAAQ;AAAA,EACxB,SAAS,GAAG;AACV,kBAAc,OAAO,CAAC;AACtB,UAAM;AAAA,EACR;AACF;","names":["React"]}
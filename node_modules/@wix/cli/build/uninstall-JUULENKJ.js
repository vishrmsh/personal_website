import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  resolveNpmDependencies,
  resolvePackageManager
} from "./chunk-V4OVZITP.js";
import "./chunk-BTL5GHWG.js";
import {
  createLogger
} from "./chunk-WOMZTOOD.js";
import "./chunk-FTL4OWDC.js";
import {
  createI18nT
} from "./chunk-MFLT3M73.js";
import {
  authenticate
} from "./chunk-5XO6CLQY.js";
import "./chunk-BWQNSFZR.js";
import "./chunk-TMLDHPS6.js";
import "./chunk-CSMKGG4V.js";
import "./chunk-ZS5GINIZ.js";
import "./chunk-MB2DJ4WP.js";
import "./chunk-O3SZ563W.js";
import "./chunk-RWTQFIPN.js";
import "./chunk-W54PG6O5.js";
import "./chunk-3WK2RM54.js";
import "./chunk-67NUBEMP.js";
import "./chunk-WWUS5636.js";
import "./chunk-SJKVYZPL.js";
import "./chunk-UQLHXG4X.js";
import "./chunk-KJ37XZQA.js";
import "./chunk-RXATQXHV.js";
import "./chunk-NRAQAV6T.js";
import "./chunk-SQ3KPTIH.js";
import "./chunk-Z4MHKCET.js";
import "./chunk-C4SUTB4O.js";
import "./chunk-SE7QGYXZ.js";
import "./chunk-TKDDSH55.js";
import "./chunk-62BYZXT7.js";
import "./chunk-WYHHEOWO.js";
import "./chunk-Z3Y5NFYG.js";
import "./chunk-ZXYGJZOO.js";
import {
  CliError,
  CliErrorCode
} from "./chunk-IVMK6TVY.js";
import {
  init_esm_shims
} from "./chunk-4EFJZ3GQ.js";

// ../cli-site-old/src/uninstall/index.ts
init_esm_shims();

// ../cli-site-old/src/uninstall/uninstall.ts
init_esm_shims();
async function uninstall(model, services, options, initialPackageName) {
  const t = createI18nT();
  const logger = createLogger({ t });
  const authState = await authenticate({
    metaSiteId: model.metaSiteId,
    biLogger: services.biLogger,
    errorReporter: services.errorReporter
  });
  const packageName = initialPackageName.trim();
  if (!packageName) {
    throw new CliError({
      code: CliErrorCode.WixUninstallMissingPackageName(),
      cause: null
    });
  }
  const logDependencyUninstalled = logger.logDependencyUninstalling(packageName);
  try {
    const packageManager = await resolvePackageManager(
      model.projectFolder,
      options
    );
    await packageManager.runUninstallPackage(model.projectFolder, packageName);
    await resolveNpmDependencies(model.projectFolder, { authState });
    logDependencyUninstalled.success();
  } catch (error) {
    logDependencyUninstalled.fail();
    throw error;
  }
}
export {
  uninstall
};
//# sourceMappingURL=uninstall-JUULENKJ.js.map
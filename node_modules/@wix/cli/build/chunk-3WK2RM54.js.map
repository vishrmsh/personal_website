{"version":3,"sources":["../../../node_modules/is-ci/index.js","../../../node_modules/@wix/wix-bi-logger-client/lib/assert.js","../../../node_modules/@wix/wix-bi-logger-client/lib/utils/collections.js","../../../node_modules/@wix/wix-bi-logger-client/lib/utils/promise.js","../../../node_modules/@wix/wix-bi-logger-client/lib/utils/log.js","../../../node_modules/@wix/wix-bi-logger-client/lib/utils/debounce.js","../../../node_modules/@wix/wix-bi-logger-client/lib/utils/throttle.js","../../../node_modules/@wix/wix-bi-logger-client/lib/utils/batch-queue.js","../../../node_modules/@wix/wix-bi-logger-client/lib/consent-policy.js","../../../node_modules/@wix/wix-bi-logger-client/lib/bi-logger.js","../../../node_modules/@wix/wix-bi-logger-client/lib/bi-logger-manager.js","../../../node_modules/@wix/wix-bi-logger-client/lib/bi-logger-factory.js","../../../node_modules/@wix/wix-bi-logger-client/lib/index.js","../../cli-telemetry/src/add-user-fields.ts","../../cli-telemetry/src/command-bi-event.ts","../../cli-telemetry/src/environment.ts","../../cli-telemetry/src/index.ts","../../cli-telemetry/src/create-bi-logger.ts","../../../node_modules/@wix/standalone-node-bi-logger/src/index.ts"],"sourcesContent":["'use strict'\n\nmodule.exports = require('ci-info').isCI\n","'use strict'; // eslint-disable-line strict\n\nclass AssertionError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n  }\n}\n\nfunction assertDefined(target, message) {\n  if (target === undefined) {\n    throw new AssertionError(message);\n  }\n}\n\nfunction assertObject(target, message) {\n  if (\n    target !== undefined &&\n    (typeof target !== 'object' || Array.isArray(target) || target === null)\n  ) {\n    throw new AssertionError(message);\n  }\n}\n\nfunction assertOk(target, message) {\n  if (!target) {\n    throw new AssertionError(message);\n  }\n}\n\nfunction assertFunc(target, message) {\n  if (target !== undefined && typeof target !== 'function') {\n    throw new AssertionError(message);\n  }\n}\n\nfunction assertBoolean(target, message) {\n  if (target !== undefined && typeof target !== 'boolean') {\n    throw new AssertionError(message);\n  }\n}\n\nfunction assertNumber(target, message) {\n  if (target !== undefined && typeof target !== 'number') {\n    throw new AssertionError(message);\n  }\n}\n\nfunction assertArray(target, message) {\n  if (typeof Array.isArray === 'function') {\n    if (!Array.isArray(target)) {\n      throw new AssertionError(message);\n    }\n  } else if (Object.prototype.toString.call(target) !== '[object Array]') {\n    throw new AssertionError(message);\n  }\n}\n\nmodule.exports.defined = assertDefined;\nmodule.exports.object = assertObject;\nmodule.exports.ok = assertOk;\nmodule.exports.func = assertFunc;\nmodule.exports.boolean = assertBoolean;\nmodule.exports.number = assertNumber;\nmodule.exports.array = assertArray;\nmodule.exports.AssertionError = AssertionError;\n","/**\n * This callback type is called `requestCallback` and is displayed as a global symbol.\n *\n * @callback iterateeCallback\n * @param {*} Value\n * @param {string} Key\n * @param {object} Original object\n */\n/**\n * Iterates over object values\n * @param {Object} collection\n * @param {iterateeCallback} iteratee\n * @return {Object} iterated object\n */\nmodule.exports.mapValues = function(collection, iteratee) {\n  if (!collection) {\n    return {};\n  }\n\n  return Object.keys(collection).reduce((acc, key) => {\n    acc[key] = iteratee(collection[key], key, collection);\n    return acc;\n  }, {});\n};\n\nmodule.exports.filterValues = function(collection, iteratee) {\n  if (!collection) {\n    return {};\n  }\n\n  return Object.keys(collection).reduce((acc, key) => {\n    const keep = iteratee(collection[key], key, collection);\n\n    if (keep) {\n      acc[key] = collection[key];\n    }\n\n    return acc;\n  }, {});\n};\n","/**\n * rejects original promise after specified timeout\n * @param {Promise<R>} promise Original promise\n * @param {string} [message] Additional message for timeout reject\n * @param {number} timeout Time for reject\n * @return {Promise<R>}\n */\nmodule.exports.timedPromise = function(promise, { message, timeout }) {\n  const timeoutPromise = new Promise((resolve, reject) => {\n    setTimeout(reject, timeout, message ? `Timeout: ${message}` : 'Timeout');\n  });\n  return Promise.race([promise, timeoutPromise]);\n};\n\n/**\n * Works like Promise.all expect uses object instead of array.\n * @param {Object} promiseObject\n * @return {Promise} Promise with original keys and resolved values\n */\nmodule.exports.allAsObject = function(promiseObject) {\n  const keys = Object.keys(promiseObject);\n  return Promise.all(keys.map(key => promiseObject[key])).then(resolved => {\n    return resolved.reduce((acc, value, i) => {\n      acc[keys[i]] = value;\n      return acc;\n    }, {});\n  });\n};\n","module.exports = {\n  error(...args) {\n    if (console && console.error) {\n      console.error(...args);\n    }\n  },\n};\n","// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nfunction debounce(func, wait, immediate) {\n  let timeout;\n\n  // This is the function that is actually executed when\n  // the DOM event is triggered.\n  return function() {\n    // Store the context of this and any parameters passed to executedFunction\n    const context = this;\n    const args = arguments;\n\n    // The function to be called after\n    // the debounce time has elapsed\n    const later = function() {\n      // null timeout to indicate the debounce ended\n      timeout = null;\n\n      // Call function now if you did not on the leading end\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    // Determine if you should call the function\n    // on the leading or trail end\n    const callNow = immediate && !timeout;\n\n    // This will reset the waiting every function execution.\n    // This is the step that prevents the function from\n    // being executed because it will never reach the\n    // inside of the previous setTimeout\n    clearTimeout(timeout);\n\n    // Restart the debounce waiting period.\n    // setTimeout returns a truthy value (it differs in web vs node)\n    timeout = setTimeout(later, wait);\n\n    // Call immediately if you're dong a leading\n    // end execution\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n\nmodule.exports = debounce;\n","function throttle(func, wait) {\n  let timeout;\n\n  return (...args) => {\n    if (!timeout) {\n      timeout = setTimeout(() => {\n        func(...args);\n        timeout = null;\n      }, wait);\n    }\n  };\n}\n\nmodule.exports = throttle;\n","const debounce = require('./debounce');\nconst throttle = require('./throttle');\n\nconst createEvent = (event, context, startTime) => ({\n  dt: Date.now() - startTime,\n  f: event,\n  context,\n});\n\nconst createBatch = (events, startTime) => ({\n  dt: Date.now() - startTime,\n  e: events,\n  g: {},\n});\n\nconst optimizeBatch = batch => {\n  const fieldCounts = {};\n  const batchLen = batch.e.length;\n\n  let events = batch.e.map(event => {\n    const fields = Object.keys(event.f).map(field => {\n      const value = event.f[field];\n      const key = `${field}|${value}`;\n      fieldCounts[key] = fieldCounts[key] || 0;\n      fieldCounts[key]++;\n      return [field, value, key];\n    });\n\n    return {\n      ...event,\n      f: fields,\n    };\n  });\n\n  const globalFields = {};\n  events = events.map(event => {\n    const fields = event.f.reduce((res, [field, value, key]) => {\n      if (fieldCounts[key] === batchLen) {\n        globalFields[field] = value;\n      } else {\n        res[field] = value;\n      }\n\n      return res;\n    }, {});\n\n    return {\n      ...event,\n      f: fields,\n    };\n  });\n\n  return {\n    ...batch,\n    e: events,\n    g: globalFields,\n  };\n};\n\nclass BatchQueue {\n  constructor() {\n    this._initilized = false;\n  }\n\n  _reset() {\n    this._startTime = Date.now();\n    this._resolve = null;\n    this._promise = new Promise(resolve => (this._resolve = resolve));\n  }\n\n  init({ delayMs, maxBatchSize, useThrottle, optimizeBatch }, flushHandler) {\n    if (this._initilized) {\n      return;\n    }\n\n    this._maxBatchSize = maxBatchSize;\n    this._optimizeBatch = optimizeBatch;\n    this._queue = [];\n    this._flushHandler = flushHandler;\n    this._flushDebounced = useThrottle\n      ? throttle(() => this.flush(), delayMs)\n      : debounce(() => this.flush(), delayMs);\n    this._initilized = true;\n\n    this._reset();\n  }\n\n  flush() {\n    if (!this._queue.length) {\n      return Promise.resolve();\n    }\n\n    const events = this._queue.splice(0, this._queue.length);\n    const resolve = this._resolve;\n    const startTime = this._startTime;\n\n    this._reset();\n\n    let batch = createBatch(events, startTime);\n\n    if (this._optimizeBatch) {\n      batch = optimizeBatch(batch);\n    }\n\n    return this._flushHandler(batch).then(resolve);\n  }\n\n  feed(event, context) {\n    this._queue.push(createEvent(event, context, this._startTime));\n\n    if (this._queue.length === this._maxBatchSize) {\n      return this.flush();\n    }\n\n    this._flushDebounced();\n\n    return this._promise;\n  }\n}\n\nmodule.exports = BatchQueue;\n","'use strict'; // eslint-disable-line strict\n\nconst DefaultConsentPolicy = {\n  functional: true,\n  analytics: true,\n  __default: true,\n};\n\nconst getPolicy = consentPolicyGetter => {\n  return (\n    (typeof consentPolicyGetter === 'function' && consentPolicyGetter()) ||\n    DefaultConsentPolicy\n  );\n};\n\nconst shouldMuteNonEssentials = policy => {\n  return policy.functional === false || policy.analytics === false;\n};\n\nconst shouldMuteByCategory = (policy, category) => {\n  if (category === 'essential') {\n    return false;\n  }\n\n  if (category === 'functional' || category === 'analytics') {\n    return policy[category] === false;\n  }\n\n  return shouldMuteNonEssentials(policy);\n};\n\nmodule.exports = {\n  shouldMuteNonEssentials,\n  shouldMuteByCategory,\n  getPolicy,\n};\n","'use strict'; // eslint-disable-line strict\nconst assert = require('./assert');\nconst { mapValues, filterValues } = require('./utils/collections');\nconst promise = require('./utils/promise');\nconst log = require('./utils/log');\nconst BatchQueue = require('./utils/batch-queue');\nconst {\n  shouldMuteByCategory,\n  shouldMuteNonEssentials,\n  getPolicy,\n} = require('./consent-policy');\n\nclass BiLogger {\n  // TODO: validate args\n  constructor(options, context) {\n    this._publishers = options.publishers;\n    this._validators = options.validators || [];\n    this._defaults = options.defaults;\n    this._ownDefaults = {};\n    this._events = options.events || {};\n    this._context = context || {};\n    this._defaultValueTimeout = options.defaultValueTimeout || 5000;\n    this._defaultContinueOnFail = options.defaultContinueOnFail || false;\n    this._onPublisherFailHandler =\n      options.onPublisherFailHandler || BiLogger._defaultPublisherFailHandler;\n    this._isMuted = options.isMuted || (() => false);\n    this._eventTransformer = options.eventTransformer || (event => event);\n    this._payloadTransformer =\n      options.payloadTransformer || (payload => payload);\n    this._consentPolicyGetter = options.consentPolicyGetter || (() => null);\n    this._nonEssentialDefaults = options.nonEssentialDefaults || {};\n    this._maxBatchSize = options.maxBatchSize || 100;\n    this._globalBatchQueue = options.globalBatchQueue;\n  }\n\n  report(data) {\n    assert.defined(data, 'Data must be provided');\n    assert.object(data, 'Data must be an object');\n\n    const { src, evid, params, ...context } = data;\n\n    return this.log({ src, evid, ...params }, context);\n  }\n\n  log(eventOrKey, eventOrContextOrUndefined, contextOrUndefined) {\n    assert.defined(eventOrKey, 'Event object or event key must be provided.');\n\n    const { event, context } = this._extractEventAndContext(\n      eventOrKey,\n      eventOrContextOrUndefined,\n      contextOrUndefined,\n    );\n    const policy = getPolicy(this._consentPolicyGetter);\n    const fullContext = { ...this._context, ...context };\n\n    if (this._isMuted() || shouldMuteByCategory(policy, fullContext.category)) {\n      return Promise.resolve();\n    }\n\n    if (fullContext.useBatch) {\n      const queue = this._initQueue(fullContext, policy);\n\n      const transformAndQueue = _event => {\n        const transformedEvent = this._eventTransformer(_event, fullContext);\n\n        return queue.feed(transformedEvent, fullContext);\n      };\n\n      if (this._globalBatchQueue) {\n        return this._getDefaults(this._defaults).then(defaults => {\n          const fullEvent = {\n            ...defaults,\n            ...this._getDynamicNonEssentialDefaults(policy),\n            ...this._getStaticNonEssentialDefaults(policy),\n            ...event,\n            ...this._getPolicyFields(policy, fullContext.category),\n          };\n\n          return transformAndQueue(fullEvent);\n        });\n      } else {\n        const fullEvent = {\n          ...this._getDynamicDefaults(this._defaults),\n          ...this._getDynamicNonEssentialDefaults(policy),\n          ...event,\n          ...this._getPolicyFields(policy, fullContext.category),\n        };\n\n        return transformAndQueue(fullEvent);\n      }\n    }\n\n    return this._getDefaults(this._defaults).then(defaults => {\n      const fullEvent = Object.assign(\n        defaults,\n        this._getDynamicNonEssentialDefaults(policy),\n        this._getStaticNonEssentialDefaults(policy),\n        event,\n        this._getPolicyFields(policy, fullContext.category),\n      );\n\n      const validatorsResult =\n        this._validators.length === 0\n          ? true\n          : this._validators.some(\n              validator =>\n                validator.match(fullEvent) &&\n                (validator.execute(fullEvent) || true),\n            );\n\n      if (!validatorsResult) {\n        throw new Error(\n          `No validator accepted the event. Source: ${\n            fullEvent.src\n          } Evid: ${fullEvent.evid || fullEvent.evtId}`,\n        );\n      }\n\n      let transformedEvent = this._eventTransformer(fullEvent, fullContext);\n      transformedEvent = this._payloadTransformer(\n        transformedEvent,\n        fullContext,\n      );\n\n      return this._send(transformedEvent, fullContext);\n    });\n  }\n\n  flush() {\n    if (!this._queue) {\n      return Promise.resolve();\n    }\n    return this._queue.flush();\n  }\n\n  updateDefaults(defaults) {\n    assert.defined(defaults, 'Defaults must be provided');\n    assert.object(defaults, 'Defaults must be an object');\n    Object.assign(this._ownDefaults, defaults);\n    return this;\n  }\n\n  _send(payload, context = {}) {\n    return Promise.all(\n      this._publishers.map(publisher => {\n        const cloned = { ...payload };\n\n        return Promise.resolve()\n          .then(() => publisher(cloned, context))\n          .catch(error =>\n            this._onPublisherFailHandler(error, {\n              publisherName: publisher.name,\n              payload,\n            }),\n          );\n      }),\n    ).then(() => undefined);\n  }\n\n  _extractEventAndContext(\n    eventOrKey,\n    eventOrContextOrUndefined,\n    contextOrUndefined,\n  ) {\n    let event;\n    let context = {};\n\n    if (typeof eventOrKey !== 'string') {\n      event = eventOrKey;\n      context = eventOrContextOrUndefined || context;\n    } else {\n      event = this._events[eventOrKey];\n\n      if (!event) {\n        throw new assert.AssertionError(\n          `Event with key '${eventOrKey}' not found in event map.`,\n        );\n      }\n\n      if (eventOrContextOrUndefined) {\n        event = { ...event, ...eventOrContextOrUndefined };\n        context = contextOrUndefined || context;\n      }\n    }\n\n    return { event, context };\n  }\n\n  _initQueue(context, policy) {\n    if (this._queue) {\n      return this._queue;\n    }\n\n    this._queue = this._globalBatchQueue || new BatchQueue();\n\n    const onFlush = batch => {\n      // if queue is global don't define global properties\n      if (!this._globalBatchQueue) {\n        batch.g = Object.assign(\n          this._getStaticDefaults(this._defaults),\n          this._getStaticNonEssentialDefaults(policy),\n        );\n      }\n\n      const transformedPayload = this._payloadTransformer(batch, context);\n\n      return this._send(transformedPayload, context);\n    };\n\n    this._queue.init(\n      {\n        delayMs: context.useBatch === true ? 300 : context.useBatch,\n        maxBatchSize: this._maxBatchSize,\n        useThrottle: !!this._globalBatchQueue,\n        optimizeBatch: !!this._globalBatchQueue,\n      },\n      onFlush,\n    );\n\n    return this._queue;\n  }\n\n  _handleDefaultsError(err) {\n    if (this._defaultContinueOnFail) {\n      log.error(err);\n      return null;\n    }\n    return Promise.reject(err);\n  }\n\n  _getDynamicNonEssentialDefaults(policy) {\n    if (!shouldMuteNonEssentials(policy)) {\n      return this._getDynamicDefaults(this._nonEssentialDefaults);\n    }\n  }\n\n  _getStaticNonEssentialDefaults(policy) {\n    if (!shouldMuteNonEssentials(policy)) {\n      return this._getStaticDefaults(this._nonEssentialDefaults);\n    }\n  }\n\n  _withOwnDefaults(defaults) {\n    return Object.assign({}, defaults, this._ownDefaults);\n  }\n\n  _getDynamicDefaults(defaults) {\n    defaults = this._withOwnDefaults(defaults);\n    const dynamicDefaults = filterValues(\n      defaults,\n      v => typeof v === 'function',\n    );\n    return mapValues(dynamicDefaults, v => v());\n  }\n\n  _getStaticDefaults(defaults) {\n    defaults = this._withOwnDefaults(defaults);\n    const staticDefaults = filterValues(defaults, v => typeof v !== 'function');\n    return staticDefaults;\n  }\n\n  _getDefaults(defaults) {\n    defaults = this._withOwnDefaults(defaults);\n    if (!defaults) {\n      return Promise.resolve({});\n    }\n\n    const promises = mapValues(defaults, (value, key) => {\n      if (typeof value === 'function') {\n        try {\n          value = value();\n        } catch (err) {\n          return this._handleDefaultsError(err);\n        }\n      }\n\n      if (value && typeof value.then === 'function') {\n        return promise\n          .timedPromise(value, {\n            message: `Cannot get default value '${key} for BI Event'`,\n            timeout: this._defaultValueTimeout,\n          })\n          .catch(err => this._handleDefaultsError(err));\n      }\n\n      return value;\n    });\n\n    return promise.allAsObject(promises);\n  }\n\n  _encodePolicyValue(policy, key) {\n    if (!policy) {\n      return 1;\n    }\n\n    if (typeof policy[key] === 'boolean') {\n      return policy[key] ? 1 : 0;\n    }\n\n    return policy[key];\n  }\n\n  _getPolicyFields(policy, category) {\n    return {\n      _isca: this._encodePolicyValue(policy, 'analytics'),\n      _iscf: this._encodePolicyValue(policy, 'functional'),\n      _ispd: policy.__default ? 1 : 0,\n      _ise: category === 'essential' ? 1 : 0,\n    };\n  }\n\n  static _defaultPublisherFailHandler(error, { publisherName }) {\n    return publisherName; // do nothing\n  }\n}\n\nmodule.exports = BiLogger;\n","'use strict'; // eslint-disable-line strict\n\nconst assert = require('./assert');\n\nclass BiLoggerManager {\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this._handlers = [];\n  }\n\n  onLoggerCreated(handler) {\n    assert.defined(handler, 'Handler must be provided.');\n    assert.func(handler, 'Handler must be a function.');\n\n    this._handlers.push(handler);\n\n    return () => {\n      const index = this._handlers.indexOf(handler);\n\n      if (index !== -1) {\n        this._handlers.splice(index, 1);\n      }\n    };\n  }\n\n  notifyLoggerCreated(logger) {\n    this._handlers.forEach(handler => handler(logger));\n  }\n}\n\nmodule.exports = {\n  manager: new BiLoggerManager(),\n  BiLoggerManager,\n};\n","'use strict'; // eslint-disable-line strict\nconst assert = require('./assert');\nconst BiLogger = require('./bi-logger');\nconst biLoggerManager = require('./bi-logger-manager');\nconst BatchQueue = require('./utils/batch-queue');\n\nclass BiLoggerFactory {\n  constructor() {\n    this._publishers = [];\n    this._validators = [];\n    this._defaults = {};\n    this._nonEssentialDefaults = {};\n    this._events = {};\n    this._isMuted = false;\n    this._eventTransformer = null;\n    this._payloadTransformer = null;\n    this._consentPolicyGetter = null;\n    this._maxBatchSize = null;\n    this._batchQueue = null;\n  }\n\n  addPublisher(publisher) {\n    assert.defined(publisher, 'Publisher must be provided');\n    assert.ok(typeof publisher === 'function', 'Expected a publisher function');\n    this._publishers.push(publisher);\n    return this;\n  }\n\n  addValidator(validator) {\n    assert.defined(validator, 'Validator must be provided');\n    assert.ok(\n      typeof validator === 'object' && validator,\n      'Expected a validator object',\n    );\n    assert.ok(\n      validator.execute && validator.match,\n      'Provided validator does not match the interface',\n    );\n    this._validators.push(validator);\n    return this;\n  }\n\n  setDefaults(defaults) {\n    assert.defined(defaults, 'Defaults must be provided');\n    assert.object(defaults, 'Defaults must be an object');\n    this._defaults = defaults;\n    return this;\n  }\n\n  updateDefaults(defaults) {\n    assert.defined(defaults, 'Defaults must be provided');\n    assert.object(defaults, 'Defaults must be an object');\n    Object.assign(this._defaults, defaults);\n    return this;\n  }\n\n  updateNonEssentialDefaults(defaults) {\n    assert.defined(defaults, 'Non-essential Defaults must be provided');\n    assert.object(defaults, 'Non-essential Defaults must be an object');\n    Object.assign(this._nonEssentialDefaults, defaults);\n    return this;\n  }\n\n  setEvents(events) {\n    assert.defined(events, 'Events must be provided');\n    assert.object(events, 'Events must be an object');\n    this._events = events;\n    return this;\n  }\n\n  setDefaultValueTimeout(defaultValueTimeout) {\n    assert.defined(\n      defaultValueTimeout,\n      'Default Value Timeout must be provided',\n    );\n    this._defaultValueTimeout = defaultValueTimeout;\n    return this;\n  }\n\n  setDefaultContinueOnFail(defaultContinueOnFail) {\n    assert.defined(\n      defaultContinueOnFail,\n      'Default Continue On Fail must be provided',\n    );\n    this._defaultContinueOnFail = defaultContinueOnFail;\n    return this;\n  }\n\n  setPublisherFailHandler(onPublisherFailHandler) {\n    assert.defined(\n      onPublisherFailHandler,\n      'Publisher Fail Handler must be provided',\n    );\n    this._onPublisherFailHandler = onPublisherFailHandler;\n    return this;\n  }\n\n  setMuted(isMuted) {\n    assert.defined(isMuted, 'Is Muted must be provided');\n    assert.boolean(isMuted, 'Is Muted must be a boolean');\n    this._isMuted = isMuted;\n    return this;\n  }\n\n  setMaxBatchSize(maxBatchSize) {\n    assert.defined(maxBatchSize, 'Max Batch Size must be provided');\n    assert.number(maxBatchSize, 'Max Batch Size must be a number');\n    assert.ok(maxBatchSize > 0, 'Max Batch Size must be higher than 0');\n    this._maxBatchSize = maxBatchSize;\n    return this;\n  }\n\n  setGlobalBatchQueue(batchQueue) {\n    assert.defined(batchQueue, 'Global Batch Queue must be provided');\n    assert.ok(\n      batchQueue instanceof BatchQueue,\n      'Global Batch Queue must be an instance of BatchQueue',\n    );\n    this._globalBatchQueue = batchQueue;\n    return this;\n  }\n\n  withEventTransformer(transformer) {\n    assert.defined(transformer, 'Event Transformer must be provided');\n    assert.func(transformer, 'Event Transformer must be a function');\n    this._eventTransformer = transformer;\n    return this;\n  }\n\n  withPayloadTransformer(transformer) {\n    assert.defined(transformer, 'Payload Transformer must be provided');\n    assert.func(transformer, 'Payload Transformer must be a function');\n    this._payloadTransformer = transformer;\n    return this;\n  }\n\n  withConsentPolicyGetter(getter) {\n    assert.defined(getter, 'Consent Policy Getter must be provided');\n    assert.func(getter, 'Consent Policy Getter must be a function');\n    this._consentPolicyGetter = getter;\n    return this;\n  }\n\n  logger(context) {\n    const logger = new BiLogger(\n      {\n        publishers: this._publishers,\n        validators: this._validators,\n        defaults: this._defaults,\n        events: this._events,\n        defaultValueTimeout: this._defaultValueTimeout,\n        defaultContinueOnFail: this._defaultContinueOnFail,\n        onPublisherFailHandler: this._onPublisherFailHandler,\n        isMuted: () => this._isMuted,\n        eventTransformer: this._eventTransformer,\n        payloadTransformer: this._payloadTransformer,\n        consentPolicyGetter: this._consentPolicyGetter,\n        nonEssentialDefaults: this._nonEssentialDefaults,\n        maxBatchSize: this._maxBatchSize,\n        globalBatchQueue: this._globalBatchQueue,\n      },\n      context,\n    );\n\n    biLoggerManager.manager.notifyLoggerCreated(logger);\n\n    return logger;\n  }\n}\n\nmodule.exports = BiLoggerFactory;\n","'use strict'; // eslint-disable-line strict\nconst BiLoggerClientFactory = require('./bi-logger-factory');\nconst BiLogger = require('./bi-logger');\nconst biLoggerManager = require('./bi-logger-manager');\nconst BatchQueue = require('./utils/batch-queue');\n\nmodule.exports.BiLoggerFactory = BiLoggerClientFactory;\nmodule.exports.BiLogger = BiLogger;\nmodule.exports.BiLoggerManager = biLoggerManager.BiLoggerManager;\n\nmodule.exports.factory = () => new BiLoggerClientFactory();\nmodule.exports.manager = biLoggerManager.manager;\nmodule.exports.createBatchQueue = () => new BatchQueue();\n","import { randomUUID } from 'node:crypto';\nimport type { BiLogger } from '@wix/wix-bi-logger-client';\n\nexport function addUserFields(logger: BiLogger, userId: string) {\n  logger.updateDefaults(resolveUserFields(userId));\n}\n\nexport function resolveUserFields(userId?: string): Record<string, string> {\n  if (!userId) {\n    // anonymous users need to have an identifier for the bi platform to accept the event\n    return {\n      _client_id: randomUUID(),\n    };\n  }\n\n  return {\n    _client_id: userId,\n    _uuid: userId,\n    logged_user_id: userId,\n    logged_account_id: userId,\n    target_account_id: userId,\n  };\n}\n","import type { BiLogger } from '@wix/wix-bi-logger-client';\nimport {\n  wixCliCliCommand,\n  wixCliCliCommandStatus,\n} from '@wix/bi-logger-wix-cli/v2';\nimport { isCliError, isCliSystemError } from '@wix/cli-error';\nimport { uptime } from 'node:process';\nimport { getEnvironmentInfo } from './environment.js';\nimport type { Flow } from './types.js';\n\ninterface CommandLike {\n  name: () => string;\n  args: string[];\n  opts: () => Record<string, unknown>;\n}\n\nconst getDuration = () => Math.round(uptime() * 1000);\n\nexport function reportCommandStartEvent({\n  biLogger,\n  command,\n  flow,\n  cliVersion,\n  projectId,\n  extensions,\n  extraFields,\n}: {\n  biLogger: BiLogger;\n  command: CommandLike;\n  flow: Flow | null;\n  cliVersion: string;\n  projectId?: string;\n  extensions?: Record<string, number>;\n  extraFields?: Record<string, unknown>;\n}) {\n  const options = command.opts();\n  const args = command.args;\n\n  const privateOptions = new Set(['apiKey']);\n  const sanitizedOptions = Object.fromEntries(\n    Object.entries(options).map(([flagName, flagValue]) => {\n      const value = privateOptions.has(flagName) ? '<censored>' : flagValue;\n      return [flagName, value];\n    })\n  );\n\n  const commandFields = {\n    command: command.name(),\n    arguments: args.join(','),\n    flags: Object.keys(sanitizedOptions).length\n      ? JSON.stringify(sanitizedOptions)\n      : '',\n  };\n\n  void biLogger.report(\n    wixCliCliCommand({\n      ...getEnvironmentInfo({ cliVersion, flow }),\n      ...commandFields,\n      ...(projectId ? { projectId } : {}),\n      ...(extraFields ? { extraFields: JSON.stringify(extraFields) } : {}),\n      isValid: true,\n    })\n  );\n\n  return {\n    succeed() {\n      void biLogger.report(\n        wixCliCliCommandStatus({\n          ...commandFields,\n          ...(extensions ? { extensions: JSON.stringify(extensions) } : {}),\n          duration: getDuration(),\n          isSuccess: true,\n          isValid: true,\n        })\n      );\n    },\n    failed(error: unknown) {\n      const errorFields = isCliError(error)\n        ? {\n            errorType: isCliSystemError(error) ? 'SystemError' : 'UserError',\n            errorName: error.name,\n            errorMessage: error.message,\n          }\n        : error instanceof Error\n          ? {\n              errorType: 'UnknownError',\n              errorName: error.name,\n              errorMessage: error.message,\n            }\n          : {\n              errorType: 'UnknownError',\n              errorMessage: JSON.stringify(error),\n            };\n\n      void biLogger.report(\n        wixCliCliCommandStatus({\n          ...commandFields,\n          ...errorFields,\n          ...(extensions ? { extensions: JSON.stringify(extensions) } : {}),\n          duration: getDuration(),\n          isSuccess: false,\n          isValid: true,\n        })\n      );\n    },\n  };\n}\n","import os from 'node:os';\nimport { platform, version as nodeVersion } from 'node:process';\nimport isCI from 'is-ci';\nimport type { Flow } from './types.js';\n\nexport function getEnvironmentInfo({\n  cliVersion,\n  flow,\n}: {\n  cliVersion: string;\n  flow: Flow | null;\n}) {\n  return {\n    ...(flow ? { flow } : {}),\n    cliVersion,\n    isCI,\n    nodeVersion,\n    osName: getOsName(),\n    osVersion: os.release(),\n  };\n}\n\n// https://stackoverflow.com/a/8684009\nfunction getOsName() {\n  switch (platform) {\n    case 'darwin':\n      return 'mac';\n    case 'win32':\n      return 'windows';\n    default:\n      return 'linux';\n  }\n}\n","export type { BiLogger } from '@wix/wix-bi-logger-client';\nexport { createBiLogger } from './create-bi-logger.js';\nexport { reportCommandStartEvent } from './command-bi-event.js';\nexport { addUserFields } from './add-user-fields.js';\nexport type { Flow } from './types.js';\n","import { StandaloneNodeLogger } from '@wix/standalone-node-bi-logger';\nimport type { BiEvent, BiLogger } from '@wix/wix-bi-logger-client';\nimport { readUserConfig } from '@wix/cli-user-config';\nimport { getTestOverrides } from '@wix/cli-test-overrides';\nimport { resolveUserFields } from './add-user-fields.js';\n\nexport async function createBiLogger(\n  defaultFields?: BiEvent,\n  userId?: string\n): Promise<BiLogger> {\n  const testBaseUrl = getTestOverrides().biLoggerBaseUrl;\n  const options = testBaseUrl ? { baseUrl: testBaseUrl } : {};\n  const userFields = resolveUserFields(userId);\n  const { telemetry: isTelemetryOn } = await readUserConfig();\n\n  return new StandaloneNodeLogger()\n    .factory(options)\n    .updateDefaults({\n      localTime: () => Date.now(),\n      ...defaultFields,\n      ...userFields,\n    })\n    .setMuted(!isTelemetryOn)\n    .logger();\n}\n",null],"mappings":"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","names":["AssertionError","message","name","constructor","Error","assertDefined","target","undefined","assertObject","Array","isArray","assertOk","assertFunc","assertBoolean","assertNumber","assertArray","Object","prototype","toString","call","module","exports","defined","object","ok","func","boolean","number","array","module","exports","mapValues","collection","iteratee","Object","keys","reduce","acc","key","filterValues","keep","module","exports","timedPromise","promise","message","timeout","timeoutPromise","Promise","resolve","reject","setTimeout","race","allAsObject","promiseObject","keys","Object","all","map","key","then","resolved","reduce","acc","value","i","module","exports","error","console","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","module","exports","throttle","func","wait","timeout","args","setTimeout","module","exports","debounce","require","throttle","createEvent","event","context","startTime","dt","Date","now","f","createBatch","events","e","g","optimizeBatch","fieldCounts","batchLen","batch","length","map","fields","Object","keys","value","field","key","globalFields","reduce","res","BatchQueue","_initilized","_startTime","_resolve","_promise","Promise","resolve","flushHandler","delayMs","maxBatchSize","useThrottle","_maxBatchSize","_optimizeBatch","_queue","_flushHandler","_flushDebounced","flush","_reset","splice","then","push","module","exports","DefaultConsentPolicy","functional","analytics","__default","getPolicy","consentPolicyGetter","shouldMuteNonEssentials","policy","shouldMuteByCategory","category","module","exports","assert","require","mapValues","filterValues","promise","log","BatchQueue","shouldMuteByCategory","shouldMuteNonEssentials","getPolicy","BiLogger","options","context","_publishers","publishers","_validators","validators","_defaults","defaults","_ownDefaults","_events","events","_context","_defaultValueTimeout","defaultValueTimeout","_defaultContinueOnFail","defaultContinueOnFail","_onPublisherFailHandler","onPublisherFailHandler","_defaultPublisherFailHandler","_isMuted","isMuted","_eventTransformer","eventTransformer","event","_payloadTransformer","payloadTransformer","payload","_consentPolicyGetter","consentPolicyGetter","_nonEssentialDefaults","nonEssentialDefaults","_maxBatchSize","maxBatchSize","_globalBatchQueue","globalBatchQueue","data","defined","object","src","evid","params","eventOrKey","eventOrContextOrUndefined","contextOrUndefined","_extractEventAndContext","policy","fullContext","category","Promise","resolve","useBatch","queue","_initQueue","transformAndQueue","transformedEvent","_event","feed","_getDefaults","then","fullEvent","_getDynamicNonEssentialDefaults","_getStaticNonEssentialDefaults","_getPolicyFields","_getDynamicDefaults","Object","assign","validatorsResult","length","some","validator","match","execute","Error","evtId","_send","_queue","flush","all","map","cloned","publisher","catch","error","publisherName","name","undefined","AssertionError","onFlush","batch","g","_getStaticDefaults","transformedPayload","init","delayMs","useThrottle","optimizeBatch","err","reject","_withOwnDefaults","dynamicDefaults","v","staticDefaults","promises","value","key","_handleDefaultsError","timedPromise","message","timeout","allAsObject","_isca","_encodePolicyValue","_iscf","_ispd","__default","_ise","module","exports","assert","require","BiLoggerManager","reset","_handlers","handler","defined","func","push","index","indexOf","splice","logger","forEach","module","exports","manager","assert","require","BiLogger","biLoggerManager","BatchQueue","BiLoggerFactory","_publishers","_validators","_defaults","_nonEssentialDefaults","_events","_isMuted","_eventTransformer","_payloadTransformer","_consentPolicyGetter","_maxBatchSize","_batchQueue","publisher","defined","ok","push","validator","execute","match","defaults","object","Object","assign","events","defaultValueTimeout","_defaultValueTimeout","defaultContinueOnFail","_defaultContinueOnFail","onPublisherFailHandler","_onPublisherFailHandler","isMuted","boolean","maxBatchSize","number","batchQueue","_globalBatchQueue","transformer","func","getter","context","logger","publishers","validators","eventTransformer","payloadTransformer","consentPolicyGetter","nonEssentialDefaults","globalBatchQueue","manager","notifyLoggerCreated","module","exports","BiLoggerClientFactory","require","BiLogger","biLoggerManager","BatchQueue","module","exports","BiLoggerFactory","BiLoggerManager","factory","manager","createBatchQueue","isCI","StandaloneNodeLogger","biLoggerClient"]}
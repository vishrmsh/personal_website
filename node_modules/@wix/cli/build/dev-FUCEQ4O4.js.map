{"version":3,"sources":["../../cli-site-old/src/dev/index.ts","../../cli-site-old/src/dev/dev.ts","../../../node_modules/exit-hook/index.js","../../cli-site-old/src/environment.ts","../../cli-site-old/src/gridapp/createGridApp.ts","../../cli-site-old/src/gridapp/error-handlers/maxFileSizeErrorHandler.ts","../../cli-site-old/src/gridapp/startGridAppUpdater.ts","../../cli-site-old/src/key-watcher.ts","../../cli-site-old/src/bi.ts","../../cli-site-old/src/dev/sync-all-to-revision.ts","../../cli-site-old/src/sources/index.ts","../../cli-site-old/src/sources/pages-diff.ts"],"sourcesContent":["export { dev } from './dev.js';\n","import { createVeloCLIServer } from '@wix/editor-velo-cli-comm-api';\nimport { openBrowser } from '@wix/user-browser';\nimport { asyncExitHook } from 'exit-hook';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\nimport { ErrorViewer } from '@wix/cli-error-reporting';\nimport { writeCrashReport } from '@wix/cli-debug-log';\nimport { getDebugLogFilePath } from '@wix/cli-core-definitions';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport { createElement } from 'react';\nimport { renderSync } from '@wix/cli-ui-kit';\nimport { createHttpClient, isHttpError } from '@wix/cli-http-client';\nimport type { Connection } from '@wix/cli-tunnel';\nimport { TunnelClient, launchTunnel } from '@wix/cli-tunnel';\nimport { getDevEditorBaseUrl } from '../environment.js';\nimport { createMutableGridApp } from '../gridapp/createGridApp.js';\nimport { startGridAppUpdater } from '../gridapp/startGridAppUpdater.js';\nimport { KeyWatcher } from '../key-watcher.js';\nimport type { ProjectModel } from '../model.js';\nimport { saveProjectModel } from '../model.js';\nimport { createLogger } from '../logger.js';\nimport { sitesBiEvents } from '../bi.js';\nimport { createI18nT } from '../i18n.js';\nimport { authenticate } from '../authentication.js';\nimport { syncAllToRevision } from './sync-all-to-revision.js';\n\nexport async function dev(\n  initialModel: ProjectModel,\n  { biLogger, errorReporter }: CommandServices,\n  {\n    https = false,\n    tunnel: useTunnel = false,\n  }: {\n    https?: boolean;\n    tunnel?: boolean;\n  }\n) {\n  let model = initialModel;\n  const authState = await authenticate({\n    metaSiteId: model.metaSiteId,\n    biLogger,\n    errorReporter,\n  });\n\n  const t = createI18nT();\n  const logger = createLogger({ t });\n  const biEvents = sitesBiEvents(biLogger);\n\n  const server = createVeloCLIServer({ https });\n\n  let gridAppId: string;\n  try {\n    gridAppId = await createMutableGridApp(model.projectFolder, {\n      authState,\n    });\n  } catch (error) {\n    const message = isHttpError(error)\n      ? error.response?.data?.message\n      : undefined;\n\n    throw new CliError({\n      code: CliErrorCode.FailedToCreateGridApp({\n        error: message,\n      }),\n      cause: error,\n    });\n  }\n\n  await syncAllToRevision(model, { authState }, logger);\n\n  const { close } = startGridAppUpdater(\n    model,\n    gridAppId,\n    {\n      authState,\n      onError(error) {\n        logger.logNewLine();\n        errorReporter.reportError(error);\n        writeCrashReport(getDebugLogFilePath(model.projectFolder), error);\n        renderSync(createElement(ErrorViewer, { error }));\n      },\n    },\n    logger,\n    biEvents\n  );\n\n  const onServerDisconnected = (devEditorUrl: string) => {\n    const message = logger.logNoOpenedTab(devEditorUrl);\n    biEvents.messageDisplayed({ model, message });\n  };\n\n  const onSyncDevEditorChanges = async (revision: string) => {\n    if (revision !== model.revision) {\n      const newModel = { ...model, revision };\n\n      await saveProjectModel(newModel);\n      const message = logger.logUpdatedLocalCodeToRevision({\n        revision: newModel.revision,\n      });\n      biEvents.messageDisplayed({ message, model });\n\n      await syncAllToRevision(newModel, { authState }, logger);\n\n      model = newModel;\n    }\n  };\n\n  const openLocalEditor = async (serverPort: number) => {\n    biEvents.userResponse({\n      action: 'Browser opened',\n      message: 'Opening the Local Editor',\n      model,\n    });\n\n    const devEditorUrl = getDevEditorUrl(serverPort);\n\n    if (https) {\n      await openBrowser(new URL(`https://localhost:${serverPort}`).href);\n    } else {\n      await openBrowser(devEditorUrl);\n    }\n  };\n\n  let keyWatcher: KeyWatcher | undefined;\n  let tunnel: Connection | undefined;\n\n  const getDevEditorUrl = (serverPort: number) => {\n    const url = new URL(model.metaSiteId, getDevEditorBaseUrl());\n\n    if (tunnel) {\n      url.searchParams.append('localEditorDestination', tunnel.domain);\n    } else {\n      url.searchParams.append('localPort', serverPort.toString());\n    }\n\n    url.searchParams.append('secureSocket', https.toString());\n\n    return url.toString();\n  };\n\n  try {\n    const { port: serverPort } = await server.serve(gridAppId, {\n      getDevEditorUrl,\n    });\n\n    if (useTunnel) {\n      const httpClient = createHttpClient({\n        type: 'backoffice',\n        getAppToken: authState.getAccessToken,\n      });\n      const tunnelClient = new TunnelClient(httpClient);\n      tunnel = await launchTunnel(serverPort, tunnelClient);\n    }\n\n    const devEditorUrl = getDevEditorUrl(serverPort);\n\n    server.on('disconnected', () => onServerDisconnected(devEditorUrl));\n    server.on('syncDevEditorChanges', onSyncDevEditorChanges);\n\n    keyWatcher = new KeyWatcher();\n\n    logger.logOpeningBrowser(https);\n\n    await openLocalEditor(serverPort);\n    const { ctrlCPromise } = keyWatcher.watch();\n    keyWatcher.on('e', () => openLocalEditor(serverPort));\n\n    asyncExitHook(\n      async () => {\n        await server.close();\n        tunnel?.close();\n      },\n      { wait: 500 }\n    );\n    await ctrlCPromise;\n  } finally {\n    keyWatcher?.unwatch();\n    await Promise.all([server.close(), close(), tunnel?.close()]);\n  }\n}\n","import process from 'node:process';\n\nconst asyncCallbacks = new Set();\nconst callbacks = new Set();\n\nlet isCalled = false;\nlet isRegistered = false;\n\nasync function exit(shouldManuallyExit, isSynchronous, signal) {\n\tif (isCalled) {\n\t\treturn;\n\t}\n\n\tisCalled = true;\n\n\tif (asyncCallbacks.size > 0 && isSynchronous) {\n\t\tconsole.error([\n\t\t\t'SYNCHRONOUS TERMINATION NOTICE:',\n\t\t\t'When explicitly exiting the process via process.exit or via a parent process,',\n\t\t\t'asynchronous tasks in your exitHooks will not run. Either remove these tasks,',\n\t\t\t'use gracefulExit() instead of process.exit(), or ensure your parent process',\n\t\t\t'sends a SIGINT to the process running this code.',\n\t\t].join(' '));\n\t}\n\n\tconst exitCode = 128 + signal;\n\n\tconst done = (force = false) => {\n\t\tif (force === true || shouldManuallyExit === true) {\n\t\t\tprocess.exit(exitCode); // eslint-disable-line unicorn/no-process-exit\n\t\t}\n\t};\n\n\tfor (const callback of callbacks) {\n\t\tcallback(exitCode);\n\t}\n\n\tif (isSynchronous) {\n\t\tdone();\n\t\treturn;\n\t}\n\n\tconst promises = [];\n\tlet forceAfter = 0;\n\tfor (const [callback, wait] of asyncCallbacks) {\n\t\tforceAfter = Math.max(forceAfter, wait);\n\t\tpromises.push(Promise.resolve(callback(exitCode)));\n\t}\n\n\t// Force exit if we exceeded our wait value\n\tconst asyncTimer = setTimeout(() => {\n\t\tdone(true);\n\t}, forceAfter);\n\n\tawait Promise.all(promises);\n\tclearTimeout(asyncTimer);\n\tdone();\n}\n\nfunction addHook(options) {\n\tconst {onExit, wait, isSynchronous} = options;\n\tconst asyncCallbackConfig = [onExit, wait];\n\n\tif (isSynchronous) {\n\t\tcallbacks.add(onExit);\n\t} else {\n\t\tasyncCallbacks.add(asyncCallbackConfig);\n\t}\n\n\tif (!isRegistered) {\n\t\tisRegistered = true;\n\n\t\t// Exit cases that support asynchronous handling\n\t\tprocess.once('beforeExit', exit.bind(undefined, true, false, -128));\n\t\tprocess.once('SIGINT', exit.bind(undefined, true, false, 2));\n\t\tprocess.once('SIGTERM', exit.bind(undefined, true, false, 15));\n\n\t\t// Explicit exit events. Calling will force an immediate exit and run all\n\t\t// synchronous hooks. Explicit exits must not extend the node process\n\t\t// artificially. Will log errors if asynchronous calls exist.\n\t\tprocess.once('exit', exit.bind(undefined, false, true, 0));\n\n\t\t// PM2 Cluster shutdown message. Caught to support async handlers with pm2,\n\t\t// needed because explicitly calling process.exit() doesn't trigger the\n\t\t// beforeExit event, and the exit event cannot support async handlers,\n\t\t// since the event loop is never called after it.\n\t\tprocess.on('message', message => {\n\t\t\tif (message === 'shutdown') {\n\t\t\t\texit(true, true, -128);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn () => {\n\t\tif (isSynchronous) {\n\t\t\tcallbacks.delete(onExit);\n\t\t} else {\n\t\t\tasyncCallbacks.delete(asyncCallbackConfig);\n\t\t}\n\t};\n}\n\nexport default function exitHook(onExit) {\n\tif (typeof onExit !== 'function') {\n\t\tthrow new TypeError('onExit must be a function');\n\t}\n\n\treturn addHook({\n\t\tonExit,\n\t\tisSynchronous: true,\n\t});\n}\n\nexport function asyncExitHook(onExit, options = {}) {\n\tif (typeof onExit !== 'function') {\n\t\tthrow new TypeError('onExit must be a function');\n\t}\n\n\tif (!(typeof options.wait === 'number' && options.wait > 0)) {\n\t\tthrow new TypeError('wait must be set to a positive numeric value');\n\t}\n\n\treturn addHook({\n\t\tonExit,\n\t\twait: options.wait,\n\t\tisSynchronous: false,\n\t});\n}\n\nexport function gracefulExit(signal = 0) {\n\texit(true, false, -128 + signal);\n}\n","import { getTestOverrides } from '@wix/cli-test-overrides';\n\nconst DEV_EDITOR_BASE_URL = 'https://wix.com/editor/';\n\nexport function getDevEditorBaseUrl(): string {\n  return getTestOverrides().devEditorBaseUrl ?? DEV_EDITOR_BASE_URL;\n}\n","import type { AuthState } from '@wix/cli-auth';\nimport { createApp } from '@wix/ambassador-velo-apps-v1-app/http';\nimport type {\n  App,\n  CreateAppRequest,\n} from '@wix/ambassador-velo-apps-v1-app/types';\nimport { AppType } from '@wix/ambassador-velo-apps-v1-app/types';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\nimport { httpRequest } from '../http-request.js';\nimport { catchFilesMaxSizeError } from './error-handlers/maxFileSizeErrorHandler.js';\nimport { loadProjectGridAppContent } from './loadProjectGridAppContent.js';\n\nasync function createAppWithParams(\n  params: CreateAppRequest,\n  opts: {\n    authState: AuthState;\n  }\n): Promise<string> {\n  let app: App | undefined;\n\n  try {\n    const response = await httpRequest(\n      { type: 'code', authState: opts.authState },\n      createApp(params)\n    );\n    app = response.data.app;\n  } catch (err) {\n    catchFilesMaxSizeError(err, params.content?.files);\n\n    throw err;\n  }\n\n  if (!app?.id) {\n    throw new CliError({\n      code: CliErrorCode.InvalidCreateAppResponse(),\n      info: { app },\n      cause: null,\n    });\n  }\n\n  return app.id;\n}\n\nexport async function createMutableGridApp(\n  projectFolder: string,\n  opts: {\n    authState: AuthState;\n  }\n) {\n  const content = await loadProjectGridAppContent(projectFolder);\n\n  return createAppWithParams(\n    {\n      app: {\n        mutable: true,\n        appType: AppType.VELO_ISOLATED,\n      },\n      content,\n    },\n    opts\n  );\n}\n","import type { File } from '@wix/ambassador-velo-apps-v1-app/types';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\nimport { extractHttpError } from '@wix/cli-http-client';\n\nexport function catchFilesMaxSizeError(err: unknown, files: File[] = []) {\n  if (!files.length) {\n    return;\n  }\n\n  const httpError = extractHttpError(err);\n\n  if (!httpError) {\n    return;\n  }\n\n  const filesMaxSizeRawViolations =\n    httpError.response?.data?.details?.validationError?.fieldViolations?.filter(\n      (v: { violatedRule: string }) => v.violatedRule === 'MAX_LENGTH'\n    );\n\n  if (!filesMaxSizeRawViolations?.length) {\n    return;\n  }\n\n  const maxSizeViolationsData = tryExtractMaxSizeViolationMetadata(\n    filesMaxSizeRawViolations\n  );\n\n  throw new CliError({\n    code: CliErrorCode.GridAppFilesMaxLengthExceeded({\n      maxSizeViolationsData,\n      filePaths: files.map((f) => f.path ?? '[unknown file path]'),\n    }),\n    cause: httpError,\n  });\n}\n\nfunction tryExtractMaxSizeViolationMetadata(\n  filesMaxSizeViolations: Array<{ field: string; description: string }>\n) {\n  const fileIndexRegex = /\\[(?<fileIndex>\\d+)\\].content/;\n  const expectedAndReceivedSizeRegex =\n    /has size (?<receivedSize>\\d+), expected (?<expectedSize>\\d+) or less/;\n  const violationsData: {\n    expectedSize?: number;\n    files: Array<{ fileIndex: number; receivedSize: number }>;\n  } = {\n    expectedSize: undefined,\n    files: [],\n  };\n\n  for (const filesMaxSizeViolation of filesMaxSizeViolations) {\n    const fileIndexMatchResult = fileIndexRegex.exec(\n      filesMaxSizeViolation.field\n    );\n    const expectedAndReceivedSizeMatchResult =\n      expectedAndReceivedSizeRegex.exec(filesMaxSizeViolation.description);\n\n    if (\n      !(\n        fileIndexMatchResult?.groups?.fileIndex &&\n        expectedAndReceivedSizeMatchResult?.groups?.receivedSize &&\n        expectedAndReceivedSizeMatchResult.groups.expectedSize\n      )\n    ) {\n      return null;\n    }\n\n    violationsData.expectedSize ??= Math.trunc(\n      parseInt(expectedAndReceivedSizeMatchResult.groups.expectedSize, 10) /\n        1000\n    );\n\n    violationsData.files.push({\n      receivedSize: Math.trunc(\n        parseInt(expectedAndReceivedSizeMatchResult.groups.receivedSize, 10) /\n          1000\n      ),\n      fileIndex: parseInt(fileIndexMatchResult.groups.fileIndex, 10),\n    });\n  }\n\n  return violationsData;\n}\n","import { readFile } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport type { AuthState } from '@wix/cli-auth';\nimport { updateFiles } from '@wix/ambassador-velo-ide-v1-gridapp-filestructure/http';\nimport { GridAppLayout } from '@wix/ambassador-velo-ide-v1-gridapp-filestructure/types';\nimport { getSourceFolder } from '@wix/velo-github-layout-definitions';\nimport { watch } from 'chokidar';\nimport { debounceQueue } from '@wix/debounce-queue';\nimport pLimit from 'p-limit';\nimport normalizePath from 'normalize-path';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\nimport { httpRequest } from '../http-request.js';\nimport type { ProjectModel } from '../model.js';\nimport type { Logger } from '../logger.js';\nimport type { SitesBiEvents } from '../bi.js';\nimport { catchFilesMaxSizeError } from './error-handlers/maxFileSizeErrorHandler.js';\n\ntype ChokidarEventParams = [\n  'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\n  string,\n];\n\nconst WATCH_FS_EVENTS_DEBOUNCE_TIME = 1000;\n\nconst getSectionName = (path: string) => {\n  if (path.startsWith('src/pages')) {\n    return 'public';\n  }\n  if (path.startsWith('src/backend')) {\n    return 'backend';\n  }\n  return 'other';\n};\n\nexport function startGridAppUpdater(\n  model: ProjectModel,\n  gridAppId: string,\n  opts: {\n    onError: (e: CliError) => void;\n    authState: AuthState;\n  },\n  logger: Logger,\n  biEvents: SitesBiEvents\n) {\n  const { projectFolder } = model;\n  const limit = pLimit(1);\n\n  const watcher = watch(getSourceFolder(projectFolder), {\n    disableGlobbing: true,\n    cwd: projectFolder,\n    ignoreInitial: true,\n  })\n    .on(\n      'all',\n      debounceQueue(async (events: ChokidarEventParams[]) => {\n        await limit(async () => {\n          const logSynced = logger.logSyncingLocalCode();\n          const { added, changed, removed } =\n            normalizeChokidarBatchedEvents(events);\n          const addedArray = Array.from(added.values()).map((path) => ({\n            path,\n            type: 'create',\n          }));\n          const changedArray = Array.from(changed.values()).map((path) => ({\n            path,\n            type: 'update',\n          }));\n          const removedArray = Array.from(removed.values()).map((path) => ({\n            path,\n            type: 'delete',\n          }));\n\n          for (const val of [...addedArray, ...changedArray, ...removedArray]) {\n            biEvents.file({\n              model,\n              action: val.type as 'create' | 'update' | 'delete',\n              path: val.path,\n              oldPath: '',\n              sectionName: getSectionName(val.path),\n            });\n            if (val.type === 'update') {\n              biEvents.codeChanged(model, val.path);\n            }\n          }\n\n          try {\n            await writeFiles({\n              filesToUpdate: await Promise.all(\n                addedArray.concat(changedArray).map(async (val) => ({\n                  path: normalizePath(val.path),\n                  content: await readFile(\n                    join(projectFolder, val.path),\n                    'utf8'\n                  ),\n                }))\n              ),\n              removedArray,\n              gridAppId,\n              authState: opts.authState,\n            });\n\n            const message = logSynced.success();\n            biEvents.messageDisplayed({ message, model });\n            biEvents.readyForReloadAfterCodeChanged(model);\n          } catch (e) {\n            logSynced.fail();\n            const error = new CliError({\n              code: CliErrorCode.GridAppFailedToUpdateFiles(),\n              cause: e,\n              info: {\n                added,\n                changed,\n                removed,\n              },\n            });\n            opts.onError(error);\n          }\n        });\n      }, WATCH_FS_EVENTS_DEBOUNCE_TIME)\n    )\n    .on('error', (e) => {\n      const error = new CliError({\n        code: CliErrorCode.FailedToWatchFiles(),\n        cause: e,\n      });\n\n      opts.onError(error);\n    });\n\n  return { close: () => watcher.close() };\n}\n\nfunction normalizeChokidarBatchedEvents(events: ChokidarEventParams[]) {\n  return events.reduce(\n    (result, [eventType, filePath]) => {\n      switch (eventType) {\n        case 'add': {\n          result.added.add(filePath);\n          break;\n        }\n        case 'change': {\n          result.changed.add(filePath);\n          break;\n        }\n        case 'unlink': {\n          result.added.delete(filePath);\n          result.changed.delete(filePath);\n          result.removed.add(filePath);\n          break;\n        }\n        case 'unlinkDir': {\n          const filePathAsDir = filePath.endsWith('/')\n            ? filePath\n            : `${filePath}/`;\n          for (const filePath of result.added) {\n            if (filePath.startsWith(filePathAsDir)) {\n              result.added.delete(filePath);\n            }\n          }\n          for (const filePath of result.changed) {\n            if (filePath.startsWith(filePathAsDir)) {\n              result.changed.delete(filePath);\n            }\n          }\n          result.removed.add(filePath);\n          break;\n        }\n        case 'addDir': {\n          break;\n        }\n      }\n      return result;\n    },\n    {\n      added: new Set<string>(),\n      changed: new Set<string>(),\n      removed: new Set<string>(),\n    }\n  );\n}\n\nasync function writeFiles({\n  filesToUpdate,\n  removedArray,\n  gridAppId,\n  authState,\n}: {\n  filesToUpdate: Array<{ path: string; content: string }>;\n  removedArray: Array<{ path: string; type: string }>;\n  gridAppId: string;\n  authState: AuthState;\n}) {\n  try {\n    await httpRequest(\n      {\n        type: 'code',\n        authState,\n      },\n      updateFiles({\n        gridAppId,\n        layout: GridAppLayout.GITHUB,\n        filesToUpdate,\n        ignoreForbiddenPaths: true,\n        pathsToDelete: removedArray.map((val) => val.path),\n      })\n    );\n  } catch (err) {\n    catchFilesMaxSizeError(err, filesToUpdate);\n    throw err;\n  }\n}\n","import readline from 'node:readline';\nimport { stdin } from 'node:process';\n\ninterface Key {\n  ctrl: boolean;\n  name: string;\n  sequence: string;\n  meta: boolean;\n  shift: boolean;\n}\n\ntype Callback = (key: Key) => void;\nexport class KeyWatcher {\n  private actions = new Map<string, Callback>();\n\n  private watchExitProcess() {\n    return new Promise<void>((resolve) => {\n      this.on('c', (key) => {\n        if (key.ctrl) {\n          resolve();\n        }\n      });\n    });\n  }\n\n  on(key: string, callback: Callback) {\n    this.actions.set(key, callback);\n  }\n\n  watch() {\n    const rl = readline.createInterface(stdin);\n\n    readline.emitKeypressEvents(stdin, rl);\n\n    if (stdin.isTTY) {\n      // This is required since in test we don't have a terminal and setRawMode is undefined\n      stdin.setRawMode(true);\n      stdin.setEncoding('utf8');\n    }\n\n    stdin.on('keypress', this.handleKeyPress);\n\n    return {\n      ctrlCPromise: this.watchExitProcess(),\n    };\n  }\n\n  unwatch() {\n    if (stdin.isTTY) {\n      // This is required since in test we don't have a terminal and setRawMode is undefined\n      stdin.setRawMode(false);\n    }\n    stdin.off('keypress', this.handleKeyPress);\n    stdin.pause();\n    this.actions.clear();\n  }\n\n  handleKeyPress = (_: string, key: Key) => {\n    this.actions.get(key.name)?.(key);\n  };\n}\n","import { randomUUID } from 'node:crypto';\nimport {\n  wixCliFileFolderCreatedRenamedDeleted,\n  wixCliCliMessageDisplayed,\n  wixCliCodeHasBeenChanged,\n  wixCliUserResponseToCliMessage,\n  wixCliReadyForReloadAfterCodeChange,\n} from '@wix/bi-logger-wix-cli/v2';\nimport type { BiLogger } from '@wix/cli-telemetry';\nimport type { ProjectModel } from './model.js';\n\nexport const sitesBiEvents = (biLogger: BiLogger) => ({\n  file: ({\n    model,\n    action,\n    path,\n    sectionName,\n    oldPath,\n  }: {\n    model: ProjectModel;\n    action: 'create' | 'update' | 'delete';\n    path: string;\n    sectionName: string;\n    oldPath: string;\n  }) => {\n    void biLogger.report(\n      wixCliFileFolderCreatedRenamedDeleted({\n        action,\n        path,\n        sectionName,\n        oldPath,\n        siteRevision: Number(model.revision),\n      })\n    );\n  },\n  codeChanged: (model: ProjectModel, fileName: string) => {\n    void biLogger.report(\n      wixCliCodeHasBeenChanged({\n        fileName,\n        siteRevision: Number(model.revision),\n      })\n    );\n  },\n  readyForReloadAfterCodeChanged: (model: ProjectModel) => {\n    void biLogger.report(\n      wixCliReadyForReloadAfterCodeChange({\n        siteRevision: Number(model.revision),\n      })\n    );\n  },\n  messageDisplayed: ({\n    message,\n    model,\n  }: {\n    message: string;\n    model: ProjectModel;\n  }) => {\n    void biLogger.report(\n      wixCliCliMessageDisplayed({\n        message,\n        messageId: randomUUID(),\n        siteRevision: Number(model.revision),\n      })\n    );\n  },\n  userResponse: ({\n    model,\n    action,\n    message,\n  }: {\n    model: ProjectModel;\n    action: 'Browser opened';\n    message: string;\n  }) => {\n    void biLogger.report(\n      wixCliUserResponseToCliMessage({\n        action,\n        message,\n        messageId: randomUUID(),\n        siteRevision: Number(model.revision),\n      })\n    );\n  },\n});\n\nexport type SitesBiEvents = ReturnType<typeof sitesBiEvents>;\n","import { rm } from 'node:fs/promises';\nimport type { AuthState } from '@wix/cli-auth';\nimport { writeCrashReport } from '@wix/cli-debug-log';\nimport { getTypesDir } from '@wix/velo-github-layout-definitions';\nimport { getDebugLogFilePath } from '@wix/cli-core-definitions';\nimport type { ProjectModel } from '../model.js';\nimport { syncPages } from '../sources/index.js';\nimport { syncTypesWithAuth } from '../sync-types/index.js';\nimport type { Logger } from '../logger.js';\n\nexport async function syncAllToRevision(\n  model: ProjectModel,\n  opts: {\n    authState: AuthState;\n  },\n  logger: Logger\n) {\n  const logTypesSynced = logger.logSyncingTypesToRevision(model.revision);\n  try {\n    await syncTypesWithAuth(model, { authState: opts.authState });\n    logTypesSynced.success();\n  } catch (error) {\n    // As a workaround until the types sync can handle large projects, this error is recoverable\n    writeCrashReport(getDebugLogFilePath(model.projectFolder), error);\n    logTypesSynced.fail();\n    await rm(getTypesDir(model.projectFolder), {\n      recursive: true,\n      force: true,\n    }).catch((e: unknown) => {\n      writeCrashReport(getDebugLogFilePath(model.projectFolder), e);\n      logger.logRecoverableFailureToRemoveTypesDir(e);\n    });\n  }\n\n  const logPagesSynced = logger.logSyncingPagesToRevision(model.revision);\n  try {\n    await syncPages(model, { authState: opts.authState });\n    logPagesSynced.success();\n  } catch (error) {\n    logPagesSynced.fail();\n    throw error;\n  }\n}\n","import { readdir } from 'node:fs/promises';\nimport { pagesDiff } from '@wix/ambassador-velo-apps-v1-app/http';\nimport type { PagesDiffRequest } from '@wix/ambassador-velo-apps-v1-app/types';\nimport { GridAppLayout } from '@wix/ambassador-velo-apps-v1-app/types';\nimport {\n  getPagesFolder,\n  getSourceFolder,\n} from '@wix/velo-github-layout-definitions';\nimport type { AuthState } from '@wix/cli-auth';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\nimport { pathExists } from '@wix/cli-fs';\nimport { httpRequest } from '../http-request.js';\nimport type { ProjectModel } from '../model.js';\nimport { createPages, deletePages, renamePages } from './pages-diff.js';\n\nexport async function syncPages(\n  model: ProjectModel,\n  opts: {\n    authState: AuthState;\n  }\n): Promise<void> {\n  const pagesFolder = getPagesFolder(model.projectFolder);\n\n  if (!(await pathExists(pagesFolder))) {\n    throw new CliError({\n      code: CliErrorCode.NoPagesDirectoryFound({\n        srcDir: getSourceFolder(model.projectFolder),\n      }),\n      cause: null,\n    });\n  }\n\n  const params: PagesDiffRequest = {\n    layout: GridAppLayout.GITHUB,\n    sourcePagesPaths: await readdir(pagesFolder),\n    targetRevision: model.revision,\n  };\n  const { data } = await httpRequest(\n    {\n      authState: opts.authState,\n      type: 'code',\n    },\n    pagesDiff(params)\n  ).catch((e: unknown) => {\n    throw new CliError({\n      code: CliErrorCode.FailedToGetPagesDiff(),\n      cause: e,\n      info: { ...params },\n    });\n  });\n\n  await Promise.all([\n    createPages(model.projectFolder, data.pagesDiff?.created ?? []),\n    renamePages(model.projectFolder, data.pagesDiff?.renamed ?? []),\n    deletePages(model.projectFolder, data.pagesDiff?.deleted ?? []),\n  ]);\n}\n","import { join } from 'node:path';\nimport { rm, rename } from 'node:fs/promises';\nimport type {\n  NewPage,\n  RenamedPage,\n  PageId,\n} from '@wix/ambassador-velo-apps-v1-app/types';\nimport { pathExists, outputFile } from '@wix/cli-fs';\n\nexport async function createPages(\n  projectFolder: string,\n  pages: NewPage[]\n): Promise<void> {\n  await Promise.all(\n    pages.map((page) => {\n      if (!page.pageId?.path || !page.content) {\n        return Promise.resolve();\n      }\n\n      return outputFile(join(projectFolder, page.pageId.path), page.content);\n    })\n  );\n}\n\nexport async function renamePages(\n  projectFolder: string,\n  pages: RenamedPage[]\n): Promise<void> {\n  await Promise.all(\n    pages.map(async (page) => {\n      if (!page.sourcePath?.path || !page.targetPath?.path) {\n        return;\n      }\n\n      const sourcePath = join(projectFolder, page.sourcePath.path);\n      const targetPath = join(projectFolder, page.targetPath.path);\n\n      if (await pathExists(targetPath)) {\n        return rm(sourcePath, { force: true });\n      }\n\n      return rename(sourcePath, targetPath);\n    })\n  );\n}\n\nexport async function deletePages(\n  projectFolder: string,\n  pages: PageId[]\n): Promise<void> {\n  await Promise.all(\n    pages.map((page) => {\n      if (!page.path) {\n        return Promise.resolve();\n      }\n\n      return rm(join(projectFolder, page.path), { force: true });\n    })\n  );\n}\n"],"mappings":"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","names":["normalizePath","filePath","rm","join","join","GridAppLayout","rm"]}
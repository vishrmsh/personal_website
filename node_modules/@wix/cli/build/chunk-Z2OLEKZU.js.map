{"version":3,"sources":["../../velo-client/src/useVeloClient.ts","../../velo-client/src/velo-client.ts","../../velo-client/src/schemas.ts","../../velo-client/src/index.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { useHttpClient } from '@wix/cli-http-client-react';\nimport { VeloClient } from './velo-client.js';\n\nexport function useVeloClient(): VeloClient {\n  const httpClient = useHttpClient({ type: 'code' });\n  return useMemo(() => new VeloClient(httpClient), [httpClient]);\n}\n","import type { HttpClient } from '@wix/cli-http-client';\nimport pRetry from 'p-retry';\nimport type { Options } from 'p-retry';\nimport pWaitFor from 'p-wait-for';\nimport { createHttpClient, isHttpError } from '@wix/cli-http-client';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\nimport { getTestOverrides } from '@wix/cli-test-overrides';\nimport {\n  AppType,\n  RcLabel,\n  DeploymentOperation,\n} from '@wix/ambassador-velo-apps-v1-app/types';\nimport { createApp, deployApp } from '@wix/ambassador-velo-apps-v1-app/http';\nimport {\n  listFiles,\n  updateFiles,\n} from '@wix/ambassador-velo-ide-v1-gridapp-filestructure/http';\nimport { GridAppLayout } from '@wix/ambassador-velo-ide-v1-gridapp-filestructure/types';\nimport {\n  resolveNpmDependencies,\n  getResolveNpmDependenciesResult,\n} from '@wix/ambassador-velo-npm-v1-npm-package-info/http';\nimport {\n  createAppSchema,\n  listFilesSchema,\n  deployAppSchema,\n  getWixLockFileSchema,\n  resolveNpmDependenciesSchema,\n  getResolveNpmDependenciesResultSchema,\n} from './schemas.js';\nimport type {\n  AppContent,\n  DeploymentSourceData,\n  UpdateFilesContent,\n  NpmPackage,\n} from './types.js';\n\nconst { minRetryTimeout, pollInterval, pollTimeout } = getTestOverrides();\n\nexport class VeloClient {\n  private readonly retryOptions: Options;\n\n  constructor(private readonly httpClient: HttpClient) {\n    this.retryOptions = {\n      retries: 3,\n      minTimeout: minRetryTimeout,\n      maxTimeout: 3 * 1000,\n    };\n  }\n\n  createMutableApp = async (content: AppContent) => {\n    try {\n      const { data } = await pRetry(\n        () =>\n          this.httpClient.request(\n            createApp({\n              app: { mutable: true, appType: AppType.VELO_ISOLATED },\n              content,\n            })\n          ),\n        this.retryOptions\n      );\n\n      return createAppSchema.parse(data).app;\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToCreateVeloApp(),\n        cause: e,\n      });\n    }\n  };\n\n  listAppFiles = async (appId: string) => {\n    try {\n      const { data } = await pRetry(\n        () =>\n          this.httpClient.request(\n            listFiles({\n              gridAppId: appId,\n              layout: GridAppLayout.GITHUB,\n              hideDeletedPages: true,\n              includeNewPages: false,\n            })\n          ),\n        this.retryOptions\n      );\n      return listFilesSchema.parse(data);\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToGetFilesFromVelo(),\n        cause: e,\n      });\n    }\n  };\n\n  updateAppFiles = async (appId: string, content: UpdateFilesContent) => {\n    try {\n      await pRetry(\n        () =>\n          this.httpClient.request(\n            updateFiles({\n              ...content,\n              gridAppId: appId,\n            })\n          ),\n        this.retryOptions\n      );\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToUpdateVeloAppFiles(),\n        cause: e,\n      });\n    }\n  };\n\n  deploySitePreview = async (deploymentSourceData: DeploymentSourceData) => {\n    try {\n      const { data } = await this.httpClient.request(\n        deployApp({\n          ...deploymentSourceData,\n          deploymentOperation: DeploymentOperation.RC,\n          appType: AppType.VELO,\n          rcDeploymentParams: {\n            rcLabel: RcLabel.WIX_CLI,\n          },\n        })\n      );\n\n      return deployAppSchema.parse(data).deploymentInfo;\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToDeploySitePreview(),\n        cause: e,\n      });\n    }\n  };\n\n  generateWixLockFile = async (deps: NpmPackage[]) => {\n    const jobId = await this.resolveNpmDependencies(deps);\n    const wixLockFileUrl = await this.getResolveNpmDependenciesResult(jobId);\n\n    return this.getWixLockFile(wixLockFileUrl);\n  };\n\n  private resolveNpmDependencies = async (npmPackageInfos: NpmPackage[]) => {\n    try {\n      const { data } = await pRetry(\n        () =>\n          this.httpClient.request(resolveNpmDependencies({ npmPackageInfos })),\n        this.retryOptions\n      );\n\n      const { jobId } = resolveNpmDependenciesSchema.parse(data);\n\n      return jobId;\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToResolveNpmDependencies(),\n        cause: e,\n      });\n    }\n  };\n\n  private getResolveNpmDependenciesResult = async (jobId: string) => {\n    try {\n      return await pWaitFor(\n        async () => {\n          try {\n            const { data } = await pRetry(\n              () =>\n                this.httpClient.request(\n                  getResolveNpmDependenciesResult({ jobId })\n                ),\n              this.retryOptions\n            );\n\n            const { result } =\n              getResolveNpmDependenciesResultSchema.parse(data);\n\n            return pWaitFor.resolveWith(result.npmDependenciesLockFile);\n          } catch (e) {\n            // Continue polling\n            if (isHttpError(e) && e.response?.status === 428) {\n              return false;\n            }\n            // Unexpected error - stop polling\n            throw e;\n          }\n        },\n        {\n          // Poll each 2 seconds\n          interval: pollInterval ?? 2 * 1000,\n          // Fail if 2 minutes passed\n          timeout: pollTimeout ?? 2 * 60 * 1000,\n        }\n      );\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToGetResolveNpmDependenciesResult(),\n        cause: e,\n        info: { jobId },\n      });\n    }\n  };\n\n  private getWixLockFile = async (url: string) => {\n    try {\n      const standaloneHttpClient = createHttpClient({ type: 'standalone' });\n\n      const { data } = await pRetry(\n        () => standaloneHttpClient.get(url),\n        this.retryOptions\n      );\n\n      return getWixLockFileSchema.parse(data);\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToFetchWixLockFile(),\n        cause: e,\n      });\n    }\n  };\n}\n","import { z } from 'zod';\n\nexport const createAppSchema = z.object({\n  app: z.object({ id: z.string() }),\n});\n\nexport const listFilesSchema = z.object({\n  files: z.array(\n    z.object({\n      path: z.string(),\n      content: z.string(),\n    })\n  ),\n  directories: z.array(\n    z.object({\n      path: z.string(),\n    })\n  ),\n});\n\nexport const deployAppSchema = z.object({\n  deploymentInfo: z.object({\n    deploymentId: z.string().uuid(),\n    deploymentUrl: z.string().url(),\n    deploymentShortUrl: z.string().url().optional(),\n    isPublishPipelineDeployment: z.boolean(),\n  }),\n});\n\nexport const resolveNpmDependenciesSchema = z.object({\n  jobId: z.string(),\n});\n\nexport const getResolveNpmDependenciesResultSchema = z.object({\n  result: z.object({\n    npmDependenciesLockFile: z.string().url(),\n  }),\n});\n\nexport const getWixLockFileSchema = z.string();\n","export type { Directory, File, NpmPackage } from './types.js';\nexport { GridAppLayout } from '@wix/ambassador-velo-ide-v1-gridapp-filestructure/types';\nexport { VeloClient } from './velo-client.js';\nexport { useVeloClient } from './useVeloClient.js';\n"],"mappings":"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","names":[]}
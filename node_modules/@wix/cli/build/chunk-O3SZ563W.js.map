{"version":3,"sources":["../../package-manager/src/index.ts","../../package-manager/src/package-manager.ts","../../package-manager/src/adapters/npm.ts","../../package-manager/src/shell/index.ts","../../package-manager/src/shell/shell-client.ts","../../package-manager/src/repo-type.ts","../../package-manager/src/git-service.ts","../../package-manager/src/adapters/yarn.ts"],"sourcesContent":["export { createPackageManager } from './package-manager.js';\nexport { NPM } from './adapters/npm.js';\nexport { Yarn } from './adapters/yarn.js';\nexport type { IPackageManager } from './types.js';\nexport { getRepoType, RepoType } from './repo-type.js';\nexport {\n  gitClone,\n  gitCommit,\n  gitInit,\n  getGitLatestCommitHash,\n  isInsideGitRepo,\n} from './git-service.js';\n","import { env } from 'node:process';\nimport { pathExists } from '@wix/cli-fs';\nimport { join } from 'node:path';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\nimport { matcher } from 'variant';\nimport { NPM } from './adapters/npm.js';\nimport { Yarn, resolveYarnVersion } from './adapters/yarn.js';\nimport type { IPackageManager, PackageManagerName } from './types.js';\nimport { RepoType } from './repo-type.js';\n\nexport async function createPackageManager(\n  repoType: RepoType\n): Promise<IPackageManager> {\n  const packageManagerName = await getPackageManagerName(repoType);\n\n  switch (packageManagerName) {\n    case 'yarn-berry':\n      return new Yarn(repoType, 'yarn-berry');\n    case 'yarn':\n      return new Yarn(repoType, 'yarn');\n    case 'npm':\n      return new NPM(repoType);\n  }\n}\n\nasync function getPackageManagerName(\n  repoType: RepoType\n): Promise<PackageManagerName> {\n  // In case of an existing repo we first check for relevant package manager files.\n  // this is an extra layer of identification that should prevent errors when the\n  // user runs create-app using a package manager other than the one used in the project\n\n  const getByEnv = (): PackageManagerName => {\n    if (env.npm_config_user_agent?.startsWith('yarn/1')) {\n      return 'yarn';\n    }\n\n    // yarn v2+\n    if (env.npm_config_user_agent?.startsWith('yarn')) {\n      return 'yarn-berry';\n    }\n\n    if (env.npm_config_user_agent?.startsWith('npm')) {\n      return 'npm';\n    }\n\n    throw new CliError({\n      code: CliErrorCode.UnsupportedPackageManager({\n        packageManagerName: env.npm_config_user_agent,\n      }),\n      cause: null,\n    });\n  };\n\n  return matcher(repoType)\n    .when(RepoType.None, getByEnv)\n    .when(\n      [RepoType.Polyrepo, RepoType.Monorepo],\n      async ({ rootDir }): Promise<PackageManagerName> => {\n        const [hasYarnRc, hasYarnLock, hasPackageLock] = await Promise.all([\n          pathExists(join(rootDir, '.yarnrc.yml')),\n          pathExists(join(rootDir, 'yarn.lock')),\n          pathExists(join(rootDir, 'package-lock.json')),\n        ]);\n\n        if (hasYarnRc || hasYarnLock) {\n          const yarnVersion = await resolveYarnVersion(rootDir);\n          return yarnVersion.startsWith('1') ? 'yarn' : 'yarn-berry';\n        }\n\n        if (hasPackageLock) {\n          return 'npm';\n        }\n\n        return getByEnv();\n      }\n    )\n    .complete();\n}\n","import { CliError, CliErrorCode } from '@wix/cli-error';\nimport { isType } from 'variant';\nimport { runCommand } from '../shell/index.js';\nimport type { IPackageManager } from '../types.js';\nimport { RepoType } from '../repo-type.js';\n\nexport class NPM implements IPackageManager {\n  readonly name = 'npm';\n\n  constructor(private readonly repoType: RepoType) {}\n\n  getUsage(name: string): string {\n    return `npm init ${name.replace('create-', '')}`;\n  }\n\n  getInstallCmd(): string {\n    return 'npm install';\n  }\n\n  getRunCmd(): string {\n    return 'npm run';\n  }\n\n  getRunBinaryCmd(args: string[]): { file: string; args: string[] } {\n    return {\n      file: 'npx',\n      args: ['--no-install'].concat(args),\n    };\n  }\n\n  async setup(_cwd: string): Promise<void> {\n    if (isType(this.repoType, RepoType.Monorepo)) {\n      throw new CliError({\n        code: CliErrorCode.UnsupportedPackageManagerWorkspaces({\n          packageManagerName: this.name,\n        }),\n        cause: null,\n      });\n    }\n  }\n\n  async runInstall(cwd: string): Promise<void> {\n    try {\n      await runCommand(this.getInstallCmd(), { cwd });\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToInstallPackages(),\n        info: { packageManager: this.name },\n        cause: e,\n      });\n    }\n  }\n\n  async runInstallPackage(cwd: string, packageName: string): Promise<void> {\n    try {\n      await runCommand(`npm install ${packageName}`, { cwd });\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToInstallPackage({ packageName }),\n        info: { packageManager: this.name },\n        cause: e,\n      });\n    }\n  }\n\n  async runUninstallPackage(cwd: string, packageName: string): Promise<void> {\n    try {\n      await runCommand(`npm uninstall ${packageName}`, { cwd });\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToUninstallPackage({ packageName }),\n        info: { packageManager: this.name },\n        cause: e,\n      });\n    }\n  }\n}\n","export { runCommand } from './shell-client.js';\n","import { execaCommand } from 'execa';\nimport type { Options } from './types.js';\n\nexport async function runCommand(command: string, opts?: Options) {\n  const commandProcess = execaCommand(command, {\n    /**\n     * DO NOT USE `shell: true`!\n     * It's a security risk that leads to injections and should be avoided.\n     * ref: https://github.com/sindresorhus/execa/tree/main#shell\n     */\n    shell: false,\n    cwd: opts?.cwd,\n    env: opts?.env,\n  });\n\n  if (opts?.output) {\n    commandProcess.stdout?.pipe(opts.output);\n  }\n\n  const { stdout } = await commandProcess;\n\n  return stdout;\n}\n","import { readJson } from '@wix/cli-fs';\nimport { join } from 'node:path';\nimport { variant, fields } from 'variant';\nimport type { VariantOf } from 'variant';\nimport type { PackageJson } from 'type-fest';\nimport { getGitRoot, isInsideGitRepo } from './git-service.js';\n\nexport const RepoType = variant({\n  None: {},\n  Polyrepo: fields<{ rootDir: string }>(),\n  Monorepo: fields<{ rootDir: string }>(),\n});\n\nexport type RepoType = VariantOf<typeof RepoType>;\n\nexport async function getRepoType(\n  targetParentFolder: string\n): Promise<RepoType> {\n  if (!(await isInsideGitRepo(targetParentFolder))) {\n    return RepoType.None();\n  }\n\n  const rootDir = await getGitRoot(targetParentFolder);\n\n  if (await isUsingWorkspaces(rootDir)) {\n    return RepoType.Monorepo({\n      rootDir,\n    });\n  }\n\n  return RepoType.Polyrepo({\n    rootDir,\n  });\n}\n\nasync function isUsingWorkspaces(rootDir: string) {\n  return readJson(join(rootDir, 'package.json'))\n    .then((pkgJson) => Boolean((pkgJson as PackageJson).workspaces))\n    .catch(() => false);\n}\n","import { runCommand } from './shell/index.js';\n\nexport function isInsideGitRepo(cwd: string) {\n  return runCommand('git rev-parse --is-inside-work-tree', { cwd })\n    .then(() => true)\n    .catch(() => false);\n}\n\nexport async function getGitRoot(cwd: string) {\n  return runCommand('git rev-parse --show-toplevel', { cwd });\n}\n\nexport async function getGitLatestCommitHash(cwd: string) {\n  try {\n    return await runCommand('git rev-parse --verify HEAD', { cwd });\n  } catch {\n    // This command can fail if there are no commits, so we can just return undefined\n  }\n}\n\nexport async function gitInit(cwd: string) {\n  await runCommand('git init', { cwd });\n}\n\nexport async function gitCommit(cwd: string) {\n  await runCommand('git add -A', { cwd });\n  await runCommand(\n    `git commit -m Initial\\\\ commit\\\\ from\\\\ Create\\\\ Wix\\\\ App --no-verify`,\n    { cwd }\n  );\n}\n\nexport async function gitClone(url: string, path: string) {\n  await runCommand(`git clone --depth 1 ${url} ${path}`, {\n    env: {\n      /*\n       * This is to prevent git from prompting for credentials.\n       * `git clone` uses a subprocess for the authentication, so we can't attach the main process to its stdio.\n       * This leads to:\n       *  - the spinners \"swallow\" its output.\n       *  - after answering with the username and pressing \"Enter\", the first line of the output is being duplicated.\n       * That's why we're disabling the prompt, so user should be pre-authenticated.\n       */\n      GIT_TERMINAL_PROMPT: '0',\n    },\n  });\n}\n","import { CliError, CliErrorCode } from '@wix/cli-error';\nimport { readJson, writeJson } from '@wix/cli-fs';\nimport { join, relative } from 'node:path';\nimport { matcher } from 'variant';\nimport { EOL } from 'node:os';\nimport { z } from 'zod';\nimport { writeFile } from 'node:fs/promises';\nimport type { PackageJson } from 'type-fest';\nimport { runCommand } from '../shell/index.js';\nimport type { IPackageManager } from '../types.js';\nimport type { RepoType } from '../repo-type.js';\n\ntype YarnVersion = 'yarn' | 'yarn-berry';\n\nexport async function resolveYarnVersion(cwd: string) {\n  const stdout = await runCommand('yarn --version', { cwd });\n  return stdout.trim();\n}\n\nexport class Yarn implements IPackageManager {\n  constructor(\n    private readonly repoType: RepoType,\n    readonly name: YarnVersion\n  ) {}\n\n  getUsage(name: string): string {\n    return `yarn create ${name.replace('create-', '')}`;\n  }\n\n  getInstallCmd(): string {\n    return 'yarn install';\n  }\n\n  getRunCmd(): string {\n    return 'yarn';\n  }\n\n  getRunBinaryCmd(args: string[]): { file: string; args: string[] } {\n    return {\n      file: 'yarn',\n      args: ['run'].concat(args),\n    };\n  }\n\n  async setup(packageFolder: string): Promise<void> {\n    return matcher(this.repoType)\n      .when(['None', 'Polyrepo'], async () => {\n        if (this.name === 'yarn-berry') {\n          // if yarn berry encounters a package.json in a parent folder, it\n          // complains that our project needs to be part of that parent project.\n          // An official way to tell yarn that this is a standalone project is\n          // to create an empty lockfile.\n          // A similar thing was done in create-astro: https://github.com/withastro/astro/pull/8028\n          await writeFile(join(packageFolder, 'yarn.lock'), '');\n        }\n      })\n      .when('Monorepo', async ({ rootDir }) => {\n        try {\n          await addPackageToWorkspaces({\n            rootDir,\n            packageFolder,\n            yarnVersion: this.name,\n          });\n        } catch (error) {\n          throw new CliError({\n            code: CliErrorCode.FailedAddingPackageToWorkspace(),\n            cause: error,\n          });\n        }\n      })\n      .complete();\n  }\n\n  async runInstall(cwd: string): Promise<void> {\n    try {\n      await runCommand(this.getInstallCmd(), { cwd });\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToInstallPackages(),\n        info: { packageManager: this.name },\n        cause: e,\n      });\n    }\n  }\n\n  async runInstallPackage(cwd: string, packageName: string): Promise<void> {\n    try {\n      await runCommand(`yarn add ${packageName}`, { cwd });\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToInstallPackage({ packageName }),\n        info: { packageManager: this.name },\n        cause: e,\n      });\n    }\n  }\n\n  async runUninstallPackage(cwd: string, packageName: string): Promise<void> {\n    try {\n      await runCommand(`yarn remove ${packageName}`, { cwd });\n    } catch (e) {\n      throw new CliError({\n        code: CliErrorCode.FailedToUninstallPackage({ packageName }),\n        info: { packageManager: this.name },\n        cause: e,\n      });\n    }\n  }\n}\n\nasync function getPackagesRelativePaths(\n  rootDir: string,\n  yarnVersion: YarnVersion\n): Promise<string[]> {\n  const workspacesSchema = z.array(\n    z.object({\n      location: z.string(),\n    })\n  );\n\n  if (yarnVersion === 'yarn-berry') {\n    const packages = await runCommand('yarn workspaces list --json', {\n      cwd: rootDir,\n    });\n\n    const parsedPackages = workspacesSchema.parse(\n      packages\n        .split(EOL)\n        .filter(Boolean)\n        .map((pkg) => JSON.parse(pkg))\n    );\n\n    return parsedPackages.map((pkg) => pkg.location);\n  }\n\n  const packages = await runCommand('yarn --json workspaces info', {\n    cwd: rootDir,\n  });\n\n  const parsedPackages = workspacesSchema.parse(\n    Object.values(JSON.parse(JSON.parse(packages).data))\n  );\n  return parsedPackages.map((pkg) => pkg.location);\n}\n\nasync function addPackageToWorkspaces({\n  rootDir,\n  packageFolder,\n  yarnVersion,\n}: {\n  rootDir: string;\n  packageFolder: string;\n  yarnVersion: YarnVersion;\n}) {\n  const relativePackagePath = relative(rootDir, packageFolder);\n  const packages = await getPackagesRelativePaths(rootDir, yarnVersion);\n\n  if (packages.includes(relativePackagePath)) {\n    return;\n  }\n\n  const packageJson = (await readJson(\n    join(rootDir, 'package.json')\n  )) as PackageJson;\n\n  if (Array.isArray(packageJson.workspaces)) {\n    packageJson.workspaces.push(relativePackagePath);\n  } else if (typeof packageJson.workspaces === 'object') {\n    packageJson.workspaces = {\n      ...packageJson.workspaces,\n      packages: [\n        ...(packageJson.workspaces.packages ?? []),\n        relativePackagePath,\n      ],\n    };\n  } else {\n    throw new Error(\n      `Failed to read workspaces structure. Expected an array or object but got ${JSON.stringify(\n        packageJson.workspaces\n      )}`\n    );\n  }\n\n  await writeJson(join(rootDir, 'package.json'), packageJson, { spaces: 2 });\n}\n"],"mappings":"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","names":["join","import_variant","import_variant","import_variant","join","join","packages","parsedPackages","join"]}